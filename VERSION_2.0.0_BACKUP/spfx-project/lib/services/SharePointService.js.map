{"version":3,"file":"SharePointService.js","sourceRoot":"","sources":["../../src/services/SharePointService.ts"],"names":[],"mappings":"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","sourcesContent":["import { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';\nimport { WebPartContext } from '@microsoft/sp-webpart-base';\n\nexport interface ITask {\n  id?: string;\n  projectName: string;\n  description: string;\n  deadline: string;\n  responsibleParty: string;\n  recurring: boolean;\n  frequency?: string;\n  finalYear?: string;\n  important: boolean;\n  completed: boolean;\n  notes?: string;\n  createdBy?: string;\n  createdAt?: Date;\n  organizationId?: string;\n}\n\nexport interface ITaskOverride {\n  id?: string;\n  parentId: string;\n  deadline: string;\n  completed?: boolean;\n  important?: boolean;\n  notes?: string;\n  deleted?: boolean;\n  createdBy?: string;\n  createdAt?: Date;\n  organizationId?: string;\n}\n\nexport class SharePointService {\n  private context: WebPartContext;\n\n  constructor(context: WebPartContext) {\n    this.context = context;\n  }\n\n  // Initialize SharePoint lists for data storage\n  async initializeLists(): Promise<void> {\n    try {\n      // Create Project Tasks list\n      await this.createList('Project Tasks', [\n        { Title: 'ProjectName', FieldTypeKind: 1 }, // Single line of text\n        { Title: 'Description', FieldTypeKind: 1 },\n        { Title: 'Deadline', FieldTypeKind: 4 }, // Date and Time\n        { Title: 'ResponsibleParty', FieldTypeKind: 1 },\n        { Title: 'Recurring', FieldTypeKind: 8 }, // Yes/No\n        { Title: 'Frequency', FieldTypeKind: 1 },\n        { Title: 'FinalYear', FieldTypeKind: 1 },\n        { Title: 'Important', FieldTypeKind: 8 },\n        { Title: 'Completed', FieldTypeKind: 8 },\n        { Title: 'Notes', FieldTypeKind: 3 }, // Multi line of text\n        { Title: 'CreatedBy', FieldTypeKind: 1 },\n        { Title: 'CreatedAt', FieldTypeKind: 4 },\n        { Title: 'OrganizationId', FieldTypeKind: 1 }\n      ]);\n\n      // Create Task Overrides list\n      await this.createList('Task Overrides', [\n        { Title: 'ParentId', FieldTypeKind: 1 },\n        { Title: 'Deadline', FieldTypeKind: 4 },\n        { Title: 'Completed', FieldTypeKind: 8 },\n        { Title: 'Important', FieldTypeKind: 8 },\n        { Title: 'Notes', FieldTypeKind: 3 },\n        { Title: 'Deleted', FieldTypeKind: 8 },\n        { Title: 'CreatedBy', FieldTypeKind: 1 },\n        { Title: 'CreatedAt', FieldTypeKind: 4 },\n        { Title: 'OrganizationId', FieldTypeKind: 1 }\n      ]);\n\n      console.log('SharePoint lists initialized successfully');\n    } catch (error) {\n      console.error('Error initializing SharePoint lists:', error);\n    }\n  }\n\n  private async createList(listTitle: string, fields: any[]): Promise<void> {\n    try {\n      // Check if list exists\n      const listExists = await this.listExists(listTitle);\n      if (listExists) {\n        console.log(`List '${listTitle}' already exists`);\n        return;\n      }\n\n      // Create list\n      const createListResponse = await this.context.spHttpClient.post(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists`,\n        SPHttpClient.configurations.v1,\n        {\n          headers: {\n            'Accept': 'application/json;odata=nometadata',\n            'Content-type': 'application/json;odata=nometadata',\n            'odata-version': ''\n          },\n          body: JSON.stringify({\n            Title: listTitle,\n            BaseTemplate: 100, // Generic List\n            AllowContentTypes: true,\n            ContentTypesEnabled: true\n          })\n        }\n      );\n\n      if (createListResponse.ok) {\n        const listData = await createListResponse.json();\n        console.log(`List '${listTitle}' created with ID: ${listData.d.Id}`);\n\n        // Add fields to the list\n        for (const field of fields) {\n          await this.addFieldToList(listTitle, field);\n        }\n      }\n    } catch (error) {\n      console.error(`Error creating list '${listTitle}':`, error);\n    }\n  }\n\n  private async listExists(listTitle: string): Promise<boolean> {\n    try {\n      const response = await this.context.spHttpClient.get(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${listTitle}')`,\n        SPHttpClient.configurations.v1\n      );\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n\n  private async addFieldToList(listTitle: string, field: any): Promise<void> {\n    try {\n      await this.context.spHttpClient.post(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${listTitle}')/fields`,\n        SPHttpClient.configurations.v1,\n        {\n          headers: {\n            'Accept': 'application/json;odata=nometadata',\n            'Content-type': 'application/json;odata=nometadata',\n            'odata-version': ''\n          },\n          body: JSON.stringify({\n            Title: field.Title,\n            FieldTypeKind: field.FieldTypeKind\n          })\n        }\n      );\n    } catch (error) {\n      console.error(`Error adding field '${field.Title}' to list '${listTitle}':`, error);\n    }\n  }\n\n  // CRUD operations for tasks\n  async getTasks(): Promise<ITask[]> {\n    try {\n      const response: SPHttpClientResponse = await this.context.spHttpClient.get(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('Project Tasks')/items?$orderby=Deadline asc`,\n        SPHttpClient.configurations.v1\n      );\n      \n      if (response.ok) {\n        const data = await response.json();\n        return data.value.map(this.mapSharePointItemToTask);\n      }\n      return [];\n    } catch (error) {\n      console.error('Error getting tasks:', error);\n      return [];\n    }\n  }\n\n  async addTask(task: ITask): Promise<string> {\n    try {\n      const response = await this.context.spHttpClient.post(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('Project Tasks')/items`,\n        SPHttpClient.configurations.v1,\n        {\n          headers: {\n            'Accept': 'application/json;odata=nometadata',\n            'Content-type': 'application/json;odata=nometadata',\n            'odata-version': ''\n          },\n          body: JSON.stringify(this.mapTaskToSharePointItem(task))\n        }\n      );\n\n      if (response.ok) {\n        const result = await response.json();\n        return result.d.Id.toString();\n      }\n      throw new Error('Failed to add task');\n    } catch (error) {\n      console.error('Error adding task:', error);\n      throw error;\n    }\n  }\n\n  async updateTask(taskId: string, updates: Partial<ITask>): Promise<void> {\n    try {\n      await this.context.spHttpClient.post(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('Project Tasks')/items(${taskId})`,\n        SPHttpClient.configurations.v1,\n        {\n          headers: {\n            'Accept': 'application/json;odata=nometadata',\n            'Content-type': 'application/json;odata=nometadata',\n            'odata-version': '',\n            'X-HTTP-Method': 'MERGE',\n            'IF-MATCH': '*'\n          },\n          body: JSON.stringify(this.mapTaskToSharePointItem(updates))\n        }\n      );\n    } catch (error) {\n      console.error('Error updating task:', error);\n      throw error;\n    }\n  }\n\n  async deleteTask(taskId: string): Promise<void> {\n    try {\n      await this.context.spHttpClient.post(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('Project Tasks')/items(${taskId})`,\n        SPHttpClient.configurations.v1,\n        {\n          headers: {\n            'Accept': 'application/json;odata=nometadata',\n            'Content-type': 'application/json;odata=nometadata',\n            'odata-version': '',\n            'X-HTTP-Method': 'DELETE',\n            'IF-MATCH': '*'\n          }\n        }\n      );\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      throw error;\n    }\n  }\n\n  // CRUD operations for task overrides\n  async getTaskOverrides(): Promise<ITaskOverride[]> {\n    try {\n      const response: SPHttpClientResponse = await this.context.spHttpClient.get(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('Task Overrides')/items`,\n        SPHttpClient.configurations.v1\n      );\n      \n      if (response.ok) {\n        const data = await response.json();\n        return data.value.map(this.mapSharePointItemToTaskOverride);\n      }\n      return [];\n    } catch (error) {\n      console.error('Error getting task overrides:', error);\n      return [];\n    }\n  }\n\n  async addTaskOverride(override: ITaskOverride): Promise<string> {\n    try {\n      const response = await this.context.spHttpClient.post(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('Task Overrides')/items`,\n        SPHttpClient.configurations.v1,\n        {\n          headers: {\n            'Accept': 'application/json;odata=nometadata',\n            'Content-type': 'application/json;odata=nometadata',\n            'odata-version': ''\n          },\n          body: JSON.stringify(this.mapTaskOverrideToSharePointItem(override))\n        }\n      );\n\n      if (response.ok) {\n        const result = await response.json();\n        return result.d.Id.toString();\n      }\n      throw new Error('Failed to add task override');\n    } catch (error) {\n      console.error('Error adding task override:', error);\n      throw error;\n    }\n  }\n\n  async updateTaskOverride(overrideId: string, updates: Partial<ITaskOverride>): Promise<void> {\n    try {\n      await this.context.spHttpClient.post(\n        `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('Task Overrides')/items(${overrideId})`,\n        SPHttpClient.configurations.v1,\n        {\n          headers: {\n            'Accept': 'application/json;odata=nometadata',\n            'Content-type': 'application/json;odata=nometadata',\n            'odata-version': '',\n            'X-HTTP-Method': 'MERGE',\n            'IF-MATCH': '*'\n          },\n          body: JSON.stringify(this.mapTaskOverrideToSharePointItem(updates))\n        }\n      );\n    } catch (error) {\n      console.error('Error updating task override:', error);\n      throw error;\n    }\n  }\n\n  // Mapping functions\n  private mapSharePointItemToTask(item: any): ITask {\n    return {\n      id: item.Id.toString(),\n      projectName: item.ProjectName || '',\n      description: item.Description || '',\n      deadline: item.Deadline ? new Date(item.Deadline).toISOString().split('T')[0] : '',\n      responsibleParty: item.ResponsibleParty || '',\n      recurring: item.Recurring || false,\n      frequency: item.Frequency || '',\n      finalYear: item.FinalYear || '',\n      important: item.Important || false,\n      completed: item.Completed || false,\n      notes: item.Notes || '',\n      createdBy: item.CreatedBy || '',\n      createdAt: item.CreatedAt ? new Date(item.CreatedAt) : new Date(),\n      organizationId: item.OrganizationId || 'c-cdev'\n    };\n  }\n\n  private mapTaskToSharePointItem(task: Partial<ITask>): any {\n    return {\n      ProjectName: task.projectName,\n      Description: task.description,\n      Deadline: task.deadline,\n      ResponsibleParty: task.responsibleParty,\n      Recurring: task.recurring,\n      Frequency: task.frequency,\n      FinalYear: task.finalYear,\n      Important: task.important,\n      Completed: task.completed,\n      Notes: task.notes,\n      CreatedBy: task.createdBy || this.context.pageContext.user.displayName,\n      CreatedAt: task.createdAt || new Date(),\n      OrganizationId: task.organizationId || 'c-cdev'\n    };\n  }\n\n  private mapSharePointItemToTaskOverride(item: any): ITaskOverride {\n    return {\n      id: item.Id.toString(),\n      parentId: item.ParentId || '',\n      deadline: item.Deadline ? new Date(item.Deadline).toISOString().split('T')[0] : '',\n      completed: item.Completed || false,\n      important: item.Important || false,\n      notes: item.Notes || '',\n      deleted: item.Deleted || false,\n      createdBy: item.CreatedBy || '',\n      createdAt: item.CreatedAt ? new Date(item.CreatedAt) : new Date(),\n      organizationId: item.OrganizationId || 'c-cdev'\n    };\n  }\n\n  private mapTaskOverrideToSharePointItem(override: Partial<ITaskOverride>): any {\n    return {\n      ParentId: override.parentId,\n      Deadline: override.deadline,\n      Completed: override.completed,\n      Important: override.important,\n      Notes: override.notes,\n      Deleted: override.deleted,\n      CreatedBy: override.createdBy || this.context.pageContext.user.displayName,\n      CreatedAt: override.createdAt || new Date(),\n      OrganizationId: override.organizationId || 'c-cdev'\n    };\n  }\n} "]}