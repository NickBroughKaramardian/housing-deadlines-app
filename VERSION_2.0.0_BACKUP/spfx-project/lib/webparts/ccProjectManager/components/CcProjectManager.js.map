{"version":3,"file":"CcProjectManager.js","sourceRoot":"","sources":["../../../../src/webparts/ccProjectManager/components/CcProjectManager.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { WebPartContext } from '@microsoft/sp-webpart-base';\nimport { SharePointService, ITask, ITaskOverride } from '../../../services/SharePointService';\nimport { parse, isValid } from 'date-fns';\n\nexport interface ICcProjectManagerProps {\n  description: string;\n  context: WebPartContext;\n}\n\nexport interface ICcProjectManagerState {\n  tasks: ITask[];\n  overrides: ITaskOverride[];\n  activeTab: string;\n  sortOption: string;\n  filterValue: string;\n  filterYear: string;\n  filterMonth: string;\n  filterDay: string;\n  showIncompleteOnly: boolean;\n  loading: boolean;\n  error: string | null;\n}\n\nexport class CcProjectManager extends React.Component<ICcProjectManagerProps, ICcProjectManagerState> {\n  private sharePointService: SharePointService;\n\n  constructor(props: ICcProjectManagerProps) {\n    super(props);\n    \n    this.sharePointService = new SharePointService(props.context);\n    \n    this.state = {\n      tasks: [],\n      overrides: [],\n      activeTab: 'dashboard',\n      sortOption: '',\n      filterValue: '',\n      filterYear: '',\n      filterMonth: '',\n      filterDay: '',\n      showIncompleteOnly: false,\n      loading: true,\n      error: null\n    };\n  }\n\n  public async componentDidMount(): Promise<void> {\n    try {\n      // Initialize SharePoint lists\n      await this.sharePointService.initializeLists();\n      \n      // Load data\n      await this.loadData();\n    } catch (error) {\n      console.error('Error initializing component:', error);\n      this.setState({ error: 'Failed to initialize application', loading: false });\n    }\n  }\n\n  private async loadData(): Promise<void> {\n    try {\n      const [tasks, overrides] = await Promise.all([\n        this.sharePointService.getTasks(),\n        this.sharePointService.getTaskOverrides()\n      ]);\n\n      this.setState({\n        tasks,\n        overrides,\n        loading: false\n      });\n    } catch (error) {\n      console.error('Error loading data:', error);\n      this.setState({ error: 'Failed to load data', loading: false });\n    }\n  }\n\n  private parseDeadlineDate(dateStr: string): Date | null {\n    if (!dateStr) return null;\n    \n    const formats = [\n      'yyyy-MM-dd',\n      'MM/dd/yyyy',\n      'M/d/yy',\n      'M/d/yyyy',\n      'MM/dd/yy',\n    ];\n    \n    for (const fmt of formats) {\n      const d = parse(dateStr, fmt, new Date());\n      if (isValid(d)) return d;\n    }\n    return null;\n  }\n\n  private expandRecurringTasks(tasks: ITask[]): ITask[] {\n    let allOccurrences: ITask[] = [];\n    const defaultYears = 50;\n\n    tasks.forEach(task => {\n      if (task.recurring && task.frequency && task.deadline) {\n        const interval = parseInt(task.frequency, 10);\n        if (isNaN(interval) || interval < 1) {\n          allOccurrences.push({ ...task, id: task.id });\n          return;\n        }\n        \n        const startDate = this.parseDeadlineDate(task.deadline);\n        if (!startDate) {\n          allOccurrences.push({ ...task, id: task.id });\n          return;\n        }\n        \n        let endYear = parseInt(task.finalYear || '', 10);\n        const defaultEndYear = startDate.getFullYear() + defaultYears;\n        if (isNaN(endYear) || endYear > defaultEndYear) {\n          endYear = defaultEndYear;\n        }\n        \n        let current = new Date(startDate);\n        while (current.getFullYear() <= endYear) {\n          const instanceDate = new Date(current);\n          if (instanceDate.getMonth() !== current.getMonth()) {\n            instanceDate.setDate(0);\n          }\n          if (instanceDate.getFullYear() > endYear) break;\n          \n          const instanceDeadline = instanceDate.toISOString().split('T')[0];\n          const override = this.state.overrides.find(o => o.parentId === task.id && o.deadline === instanceDeadline);\n          \n          if (override) {\n            if (!override.deleted) {\n              allOccurrences.push({\n                ...task,\n                ...override,\n                completed: override.completed !== undefined ? override.completed : task.completed,\n                important: override.important !== undefined ? override.important : task.important,\n                id: `${task.id}_${instanceDeadline}`,\n                deadline: instanceDeadline,\n                recurring: false\n              });\n            }\n          } else {\n            allOccurrences.push({ \n              ...task, \n              id: `${task.id}_${instanceDeadline}`, \n              deadline: instanceDeadline, \n              recurring: false,\n              important: task.important || false,\n              completed: task.completed || false\n            });\n          }\n          current.setMonth(current.getMonth() + interval);\n        }\n      } else {\n        allOccurrences.push({ ...task, id: task.id });\n      }\n    });\n    \n    return allOccurrences;\n  }\n\n  private getFilteredSortedTasks(): ITask[] {\n    let expandedTasks = this.expandRecurringTasks(this.state.tasks);\n    let filtered = [...expandedTasks];\n\n    // Apply filters\n    if (this.state.sortOption === 'Deadline') {\n      if (this.state.filterYear.trim()) {\n        filtered = filtered.filter(task => {\n          const d = this.parseDeadlineDate(task.deadline);\n          if (!d) return false;\n          return d.getFullYear().toString() === this.state.filterYear.trim();\n        });\n      }\n\n      if (this.state.filterMonth.trim()) {\n        const monthNames: { [key: string]: number } = {\n          'jan': 1, 'january': 1, 'feb': 2, 'february': 2, 'mar': 3, 'march': 3, 'apr': 4, 'april': 4,\n          'may': 5, 'jun': 6, 'june': 6, 'jul': 7, 'july': 7, 'aug': 8, 'august': 8,\n          'sep': 9, 'sept': 9, 'september': 9, 'oct': 10, 'october': 10, 'nov': 11, 'november': 11, 'dec': 12, 'december': 12\n        };\n        const lowerFilterMonth = this.state.filterMonth.trim().toLowerCase();\n        let monthToFilter = monthNames[lowerFilterMonth];\n        if (!monthToFilter) {\n          const parsedMonth = parseInt(lowerFilterMonth, 10);\n          if (!isNaN(parsedMonth) && parsedMonth > 0 && parsedMonth < 13) {\n            monthToFilter = parsedMonth;\n          }\n        }\n        if (monthToFilter) {\n          filtered = filtered.filter(task => {\n            const d = this.parseDeadlineDate(task.deadline);\n            if (!d) return false;\n            return d.getMonth() + 1 === monthToFilter;\n          });\n        }\n      }\n\n      if (this.state.filterDay.trim()) {\n        const dayToFilter = parseInt(this.state.filterDay.trim(), 10);\n        if (!isNaN(dayToFilter)) {\n          filtered = filtered.filter(task => {\n            const d = this.parseDeadlineDate(task.deadline);\n            if (!d) return false;\n            return d.getDate() === dayToFilter;\n          });\n        }\n      }\n    } else if (this.state.sortOption === 'Responsible Party') {\n      filtered = filtered.filter(task => {\n        if (!task.responsibleParty || !this.state.filterValue) return false;\n        const taskParties = task.responsibleParty.toLowerCase().split(',').map(p => p.trim());\n        const filterParty = this.state.filterValue.toLowerCase().trim();\n        return taskParties.some(party => party === filterParty);\n      });\n    } else if (this.state.sortOption === 'Project') {\n      filtered = filtered.filter(task =>\n        task.projectName?.toLowerCase() === this.state.filterValue.toLowerCase()\n      );\n    } else if (this.state.sortOption === 'Search') {\n      const searchTerm = this.state.filterValue.toLowerCase();\n      filtered = filtered.filter(task => {\n        const projectMatch = task.projectName?.toLowerCase().includes(searchTerm);\n        const descriptionMatch = task.description?.toLowerCase().includes(searchTerm);\n        const responsibleMatch = task.responsibleParty?.toLowerCase().includes(searchTerm);\n        return projectMatch || descriptionMatch || responsibleMatch;\n      });\n    }\n\n    // Filter incomplete tasks\n    if (this.state.showIncompleteOnly) {\n      filtered = filtered.filter(task => !task.completed);\n    }\n\n    // Sort by deadline\n    filtered.sort((a, b) => {\n      const da = this.parseDeadlineDate(a.deadline);\n      const db = this.parseDeadlineDate(b.deadline);\n      const ta = da instanceof Date && !isNaN(da.getTime()) ? da.getTime() : Infinity;\n      const tb = db instanceof Date && !isNaN(db.getTime()) ? db.getTime() : Infinity;\n      return ta - tb;\n    });\n\n    return filtered;\n  }\n\n  private handleAddTask = async (newTask: ITask): Promise<void> => {\n    try {\n      await this.sharePointService.addTask(newTask);\n      await this.loadData();\n    } catch (error) {\n      console.error('Error adding task:', error);\n      this.setState({ error: 'Failed to add task' });\n    }\n  };\n\n\n\n  private handleDeleteTask = async (taskId: string): Promise<void> => {\n    try {\n      if (taskId.includes('_')) {\n        // This is a recurring instance, create/update override\n        const [parentId, date] = taskId.split('_');\n        const existing = this.state.overrides.find(o => o.parentId === parentId && o.deadline === date);\n        \n        if (existing) {\n          await this.sharePointService.updateTaskOverride(existing.id!, { deleted: true });\n        } else {\n          await this.sharePointService.addTaskOverride({ \n            parentId, \n            deadline: date, \n            deleted: true\n          });\n        }\n      } else {\n        await this.sharePointService.deleteTask(taskId);\n      }\n      await this.loadData();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      this.setState({ error: 'Failed to delete task' });\n    }\n  };\n\n  private handleToggleCompleted = async (taskId: string): Promise<void> => {\n    try {\n      if (taskId.includes('_')) {\n        // Recurring instance\n        const [parentId, date] = taskId.split('_');\n        const existing = this.state.overrides.find(o => o.parentId === parentId && o.deadline === date);\n        const parentTask = this.state.tasks.find(t => t.id === parentId);\n        const currentCompleted = existing ? existing.completed : (parentTask?.completed || false);\n        \n        if (existing) {\n          await this.sharePointService.updateTaskOverride(existing.id!, { completed: !currentCompleted });\n        } else {\n          await this.sharePointService.addTaskOverride({ \n            parentId, \n            deadline: date, \n            completed: !currentCompleted\n          });\n        }\n      } else {\n        // Normal task\n        const task = this.state.tasks.find(t => t.id === taskId);\n        if (task) {\n          await this.sharePointService.updateTask(taskId, { completed: !task.completed });\n        }\n      }\n      await this.loadData();\n    } catch (error) {\n      console.error('Error toggling completed:', error);\n      this.setState({ error: 'Failed to update task' });\n    }\n  };\n\n  private handleToggleUrgent = async (taskId: string): Promise<void> => {\n    try {\n      if (taskId.includes('_')) {\n        // Recurring instance\n        const [parentId, date] = taskId.split('_');\n        const existing = this.state.overrides.find(o => o.parentId === parentId && o.deadline === date);\n        const parentTask = this.state.tasks.find(t => t.id === parentId);\n        const currentImportant = existing ? existing.important : (parentTask?.important || false);\n        \n        if (existing) {\n          await this.sharePointService.updateTaskOverride(existing.id!, { important: !currentImportant });\n        } else {\n          await this.sharePointService.addTaskOverride({ \n            parentId, \n            deadline: date, \n            important: !currentImportant\n          });\n        }\n      } else {\n        // Normal task\n        const task = this.state.tasks.find(t => t.id === taskId);\n        if (task) {\n          await this.sharePointService.updateTask(taskId, { important: !task.important });\n        }\n      }\n      await this.loadData();\n    } catch (error) {\n      console.error('Error toggling urgent:', error);\n      this.setState({ error: 'Failed to update task' });\n    }\n  };\n\n  public render(): React.ReactElement<ICcProjectManagerProps> {\n    const { loading, error } = this.state;\n\n    if (loading) {\n      return (\n        <div className=\"cc-project-manager\">\n          <div className=\"loading\">Loading C&C Project Manager...</div>\n        </div>\n      );\n    }\n\n    if (error) {\n      return (\n        <div className=\"cc-project-manager\">\n          <div className=\"error\">Error: {error}</div>\n        </div>\n      );\n    }\n\n    const filteredTasks = this.getFilteredSortedTasks();\n\n    return (\n      <div className=\"cc-project-manager\">\n        <div className=\"header\">\n          <h1>C&C Project Manager</h1>\n          <p>{this.props.description}</p>\n        </div>\n\n        <div className=\"navigation\">\n          <button \n            className={this.state.activeTab === 'dashboard' ? 'active' : ''}\n            onClick={() => this.setState({ activeTab: 'dashboard' })}\n          >\n            Dashboard\n          </button>\n          <button \n            className={this.state.activeTab === 'tasks' ? 'active' : ''}\n            onClick={() => this.setState({ activeTab: 'tasks' })}\n          >\n            Tasks\n          </button>\n          <button \n            className={this.state.activeTab === 'add' ? 'active' : ''}\n            onClick={() => this.setState({ activeTab: 'add' })}\n          >\n            Add Task\n          </button>\n        </div>\n\n        <div className=\"content\">\n          {this.state.activeTab === 'dashboard' && (\n            <div className=\"dashboard\">\n              <h2>Dashboard</h2>\n              <div className=\"stats\">\n                <div className=\"stat\">\n                  <h3>Total Tasks</h3>\n                  <p>{this.state.tasks.length}</p>\n                </div>\n                <div className=\"stat\">\n                  <h3>Completed</h3>\n                  <p>{this.state.tasks.filter(t => t.completed).length}</p>\n                </div>\n                <div className=\"stat\">\n                  <h3>Urgent</h3>\n                  <p>{this.state.tasks.filter(t => t.important).length}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {this.state.activeTab === 'tasks' && (\n            <div className=\"tasks\">\n              <div className=\"filters\">\n                <select \n                  value={this.state.sortOption}\n                  onChange={(e) => this.setState({ sortOption: e.target.value })}\n                >\n                  <option value=\"\">Sort by...</option>\n                  <option value=\"Deadline\">Deadline</option>\n                  <option value=\"Responsible Party\">Responsible Party</option>\n                  <option value=\"Project\">Project</option>\n                  <option value=\"Search\">Search</option>\n                </select>\n\n                {this.state.sortOption === 'Deadline' && (\n                  <div className=\"date-filters\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Year\"\n                      value={this.state.filterYear}\n                      onChange={(e) => this.setState({ filterYear: e.target.value })}\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Month\"\n                      value={this.state.filterMonth}\n                      onChange={(e) => this.setState({ filterMonth: e.target.value })}\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Day\"\n                      value={this.state.filterDay}\n                      onChange={(e) => this.setState({ filterDay: e.target.value })}\n                    />\n                  </div>\n                )}\n\n                {this.state.sortOption === 'Search' && (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search tasks...\"\n                    value={this.state.filterValue}\n                    onChange={(e) => this.setState({ filterValue: e.target.value })}\n                  />\n                )}\n\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={this.state.showIncompleteOnly}\n                    onChange={(e) => this.setState({ showIncompleteOnly: e.target.checked })}\n                  />\n                  Incomplete only\n                </label>\n              </div>\n\n              <div className=\"task-list\">\n                {filteredTasks.map(task => (\n                  <div key={task.id} className={`task-card ${task.completed ? 'completed' : ''} ${task.important ? 'urgent' : ''}`}>\n                    <div className=\"task-header\">\n                      <h3>{task.description}</h3>\n                      <div className=\"task-actions\">\n                        <button onClick={() => this.handleToggleCompleted(task.id!)}>\n                          {task.completed ? '✓' : '○'}\n                        </button>\n                        <button onClick={() => this.handleToggleUrgent(task.id!)}>\n                          {task.important ? '⚠' : '○'}\n                        </button>\n                        <button onClick={() => this.handleDeleteTask(task.id!)}>🗑</button>\n                      </div>\n                    </div>\n                    <div className=\"task-details\">\n                      <p><strong>Project:</strong> {task.projectName}</p>\n                      <p><strong>Responsible:</strong> {task.responsibleParty}</p>\n                      <p><strong>Deadline:</strong> {task.deadline}</p>\n                      {task.notes && <p><strong>Notes:</strong> {task.notes}</p>}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {this.state.activeTab === 'add' && (\n            <div className=\"add-task\">\n              <h2>Add New Task</h2>\n              <TaskForm onSubmit={this.handleAddTask} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n// Simple task form component\ninterface ITaskFormProps {\n  onSubmit: (task: ITask) => Promise<void>;\n}\n\nclass TaskForm extends React.Component<ITaskFormProps, Partial<ITask>> {\n  constructor(props: ITaskFormProps) {\n    super(props);\n    this.state = {\n      projectName: '',\n      description: '',\n      deadline: '',\n      responsibleParty: '',\n      recurring: false,\n      frequency: '',\n      finalYear: '',\n      important: false,\n      completed: false,\n      notes: ''\n    };\n  }\n\n  private handleSubmit = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    await this.props.onSubmit(this.state as ITask);\n    this.setState({\n      projectName: '',\n      description: '',\n      deadline: '',\n      responsibleParty: '',\n      recurring: false,\n      frequency: '',\n      finalYear: '',\n      important: false,\n      completed: false,\n      notes: ''\n    });\n  };\n\n  public render(): React.ReactElement<ITaskFormProps> {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label>Project Name:</label>\n          <input\n            type=\"text\"\n            value={this.state.projectName}\n            onChange={(e) => this.setState({ projectName: e.target.value })}\n            required\n          />\n        </div>\n        <div>\n          <label>Description:</label>\n          <input\n            type=\"text\"\n            value={this.state.description}\n            onChange={(e) => this.setState({ description: e.target.value })}\n            required\n          />\n        </div>\n        <div>\n          <label>Deadline:</label>\n          <input\n            type=\"date\"\n            value={this.state.deadline}\n            onChange={(e) => this.setState({ deadline: e.target.value })}\n            required\n          />\n        </div>\n        <div>\n          <label>Responsible Party:</label>\n          <input\n            type=\"text\"\n            value={this.state.responsibleParty}\n            onChange={(e) => this.setState({ responsibleParty: e.target.value })}\n            required\n          />\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={this.state.recurring}\n              onChange={(e) => this.setState({ recurring: e.target.checked })}\n            />\n            Recurring\n          </label>\n        </div>\n        {this.state.recurring && (\n          <>\n            <div>\n              <label>Frequency (months):</label>\n              <input\n                type=\"number\"\n                value={this.state.frequency}\n                onChange={(e) => this.setState({ frequency: e.target.value })}\n                min=\"1\"\n              />\n            </div>\n            <div>\n              <label>Final Year:</label>\n              <input\n                type=\"number\"\n                value={this.state.finalYear}\n                onChange={(e) => this.setState({ finalYear: e.target.value })}\n                min={new Date().getFullYear()}\n              />\n            </div>\n          </>\n        )}\n        <div>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={this.state.important}\n              onChange={(e) => this.setState({ important: e.target.checked })}\n            />\n            Urgent\n          </label>\n        </div>\n        <div>\n          <label>Notes:</label>\n          <textarea\n            value={this.state.notes}\n            onChange={(e) => this.setState({ notes: e.target.value })}\n          />\n        </div>\n        <button type=\"submit\">Add Task</button>\n      </form>\n    );\n  }\n} "]}