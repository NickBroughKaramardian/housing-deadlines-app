{"ast":null,"code":"import _objectSpread from\"/Users/nic/housing-deadlines-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useMemo,useEffect}from'react';import{ChartBarIcon,ChevronLeftIcon,ChevronRightIcon,CheckCircleIcon,ExclamationTriangleIcon,ClockIcon,UserIcon,FolderIcon,CalendarDaysIcon,ChevronDownIcon,FunnelIcon}from'@heroicons/react/24/outline';import{format,startOfYear,endOfYear,parseISO,isValid,differenceInDays,startOfMonth,eachMonthOfInterval,isWithinInterval}from'date-fns';import{sharedDataService}from'./sharedDataService';import{microsoftDataService}from'./microsoftDataService';import{globalTaskStore}from'./globalTaskStore';import TaskCard from'./TaskCard';import recurringTaskGenerator from'./recurringTaskGenerator';import taskUpdateService from'./taskUpdateService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function GanttDeadlinesPage(){const[tasks,setTasks]=useState([]);const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[updating,setUpdating]=useState(false);const[selectedYear,setSelectedYear]=useState(new Date().getFullYear());const[selectedMonth,setSelectedMonth]=useState(null);const[selectedTask,setSelectedTask]=useState(null);const[hoveredTask,setHoveredTask]=useState(null);const[viewMode,setViewMode]=useState('year');// 'year' or 'month'\n// Toggle task completion - uses centralized update service\nconst toggleTaskCompletion=async(taskId,currentStatus)=>{const newStatus=!currentStatus;await taskUpdateService.updateTaskField(taskId,{Completed_x003f_:newStatus},()=>setUpdating(true),()=>{setUpdating(false);const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);});};// Toggle task urgency - uses centralized update service\nconst toggleTaskUrgency=async(taskId,currentUrgency)=>{const newPriority=currentUrgency?'Normal':'Urgent';await taskUpdateService.updateTaskField(taskId,{Priority:newPriority},()=>setUpdating(true),()=>{setUpdating(false);const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);});};// Delete task - uses centralized update service\nconst deleteTask=async taskId=>{await taskUpdateService.deleteTask(taskId,()=>setUpdating(true),()=>{setUpdating(false);const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);});};useEffect(()=>{const loadData=async()=>{try{setLoading(true);// Subscribe to global task store updates\nconst unsubscribe=globalTaskStore.subscribe(()=>{const allTasks=globalTaskStore.getAllTasks();console.log('GanttDeadlines: Global store subscription triggered -',allTasks.length,'total items');console.log('GanttDeadlines: Sample task completion statuses:',allTasks.slice(0,3).map(t=>({id:t.id,task:t.Task,completed:t.Completed_x003f_})));setTasks(allTasks);});// Get initial data\nconst[allTasks,usersData]=await Promise.all([globalTaskStore.getAllTasks(),microsoftDataService.users.getEnterpriseUsers()]);setTasks(allTasks);setUsers(usersData);console.log('GanttDeadlines: Loaded',allTasks.length,'total items and',usersData.length,'users');return unsubscribe;}catch(error){console.error('GanttDeadlinesPage: Error loading data:',error);}finally{setLoading(false);}};loadData();},[]);const parseDeadlineDate=dateStr=>{if(!dateStr)return null;try{// Parse date string carefully to avoid timezone issues\n// If in yyyy-MM-dd format, parse components directly\nif(typeof dateStr==='string'&&dateStr.includes('-')){const datePart=dateStr.split('T')[0];// Get just the date part\nconst parts=datePart.split('-');if(parts.length===3){const year=parseInt(parts[0],10);const month=parseInt(parts[1],10)-1;// JS months are 0-indexed\nconst day=parseInt(parts[2],10);if(!isNaN(year)&&!isNaN(month)&&!isNaN(day)){// Create date at noon local time to avoid timezone shifts\nreturn new Date(year,month,day,12,0,0);}}}// Fallback to regular Date parsing\nconst date=new Date(dateStr);if(isValid(date)){date.setHours(12,0,0,0);return date;}return null;}catch(error){return null;}};const getCalculatedStatus=task=>{// Check completion status - match TaskCard logic\nconst isCompleted=task.Completed_x003f_||task.Completed;if(isCompleted===true||isCompleted==='Yes'||isCompleted==='yes'){return'Completed';}// Only consider overdue if not completed\nconst deadline=parseDeadlineDate(task.Deadline);if(deadline&&deadline<new Date()){return'Overdue';}return'Active';};const getResponsiblePartyNames=responsibleParty=>{if(!responsibleParty||!users||users.length===0){return responsibleParty||'';}const emails=responsibleParty.split(';').map(email=>email.trim()).filter(email=>email);const names=emails.map(email=>{const user=users.find(u=>u.mail===email||u.userPrincipalName===email||u.email===email||u.Email===email);return user?user.displayName:email;});return names.join(', ');};const yearTasks=useMemo(()=>{return tasks.filter(task=>{const deadline=parseDeadlineDate(task.Deadline);if(!deadline)return false;return deadline.getFullYear()===selectedYear;});},[tasks,selectedYear]);const monthTasks=useMemo(()=>{if(selectedMonth===null)return[];return yearTasks.filter(task=>{const deadline=parseDeadlineDate(task.Deadline);return deadline&&deadline.getMonth()===selectedMonth;});},[yearTasks,selectedMonth]);const currentTasks=viewMode==='month'?monthTasks:yearTasks;const months=useMemo(()=>{const start=startOfYear(new Date(selectedYear,0,1));const end=endOfYear(new Date(selectedYear,11,31));return eachMonthOfInterval({start,end});},[selectedYear]);const getTaskPosition=task=>{const deadline=parseDeadlineDate(task.Deadline);if(!deadline)return{left:0,month:null};let left=0;if(viewMode==='month'&&selectedMonth!==null){// Monthly view - position within the month\nconst monthStart=new Date(selectedYear,selectedMonth,1);const monthEnd=new Date(selectedYear,selectedMonth+1,0);const daysInMonth=monthEnd.getDate();const dayOfMonth=deadline.getDate();left=(dayOfMonth-1)/(daysInMonth-1)*100;}else{// Yearly view - position within the year\nconst yearStart=startOfYear(new Date(selectedYear,0,1));const daysInYear=differenceInDays(endOfYear(new Date(selectedYear,11,31)),yearStart);const daysFromStart=differenceInDays(deadline,yearStart);left=daysFromStart/daysInYear*100;}const month=deadline.getMonth();return{left:Math.max(0,Math.min(100,left)),month};};const getTasksForMonth=monthIndex=>{return yearTasks.filter(task=>{const deadline=parseDeadlineDate(task.Deadline);return deadline&&deadline.getMonth()===monthIndex;});};const getStatusIcon=status=>{switch(status){case'Completed':return/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"w-5 h-5 text-green-500\"});case'Overdue':return/*#__PURE__*/_jsx(ExclamationTriangleIcon,{className:\"w-5 h-5 text-red-500\"});case'Active':return/*#__PURE__*/_jsx(ClockIcon,{className:\"w-5 h-5 text-blue-500\"});default:return/*#__PURE__*/_jsx(ClockIcon,{className:\"w-5 h-5 text-gray-500\"});}};const getStatusColor=status=>{switch(status){case'Completed':return'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400';case'Overdue':return'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400';case'Active':return'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400';default:return'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400';}};const getTaskDotColor=status=>{switch(status){case'Completed':return'bg-green-500 ring-green-200 dark:ring-green-800';case'Overdue':return'bg-red-500 ring-red-200 dark:ring-red-800';case'Active':return'bg-blue-500 ring-blue-200 dark:ring-blue-800';default:return'bg-gray-500 ring-gray-200 dark:ring-gray-800';}};const getPriorityRing=task=>{return task.Priority==='Urgent'?'ring-2 ring-orange-300 dark:ring-orange-600':'';};const handleYearChange=direction=>{if(direction==='prev'){setSelectedYear(prev=>prev-1);}else{setSelectedYear(prev=>prev+1);}setSelectedMonth(null);setSelectedTask(null);};const handleMonthClick=monthIndex=>{if(selectedMonth===monthIndex){// If clicking the same month, toggle back to yearly view\nsetSelectedMonth(null);setViewMode('year');}else{// Switch to monthly view for the selected month\nsetSelectedMonth(monthIndex);setViewMode('month');}setSelectedTask(null);};const handleTaskClick=task=>{setSelectedTask((selectedTask===null||selectedTask===void 0?void 0:selectedTask.id)===task.id?null:task);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 dark:from-gray-900 dark:via-blue-950/30 dark:to-indigo-950/20 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Loading timeline...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 dark:from-gray-900 dark:via-blue-950/30 dark:to-indigo-950/20 relative\",children:[updating&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 flex flex-col items-center gap-4 border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-4 border-blue-200 border-t-blue-600\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Updating...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-1\",children:\"Syncing with database\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto p-6 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold bg-gradient-to-r from-gray-900 via-blue-900 to-indigo-900 dark:from-white dark:via-blue-100 dark:to-indigo-100 bg-clip-text text-transparent\",children:\"Gantt Chart\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 mt-1\",children:\"Timeline view of deadlines across the year\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xl font-bold text-gray-900 dark:text-white\",children:currentTasks.length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\",children:viewMode==='month'?\"Tasks in \".concat(months[selectedMonth]?format(months[selectedMonth],'MMMM yyyy'):''):\"Tasks in \".concat(selectedYear)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center gap-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleYearChange('prev'),className:\"p-2 rounded-full bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl shadow-lg border border-white/20 dark:border-gray-700/50 hover:bg-white dark:hover:bg-gray-700 transition-all duration-200\",children:/*#__PURE__*/_jsx(ChevronLeftIcon,{className:\"w-5 h-5 text-gray-700 dark:text-gray-300\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-3 bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:selectedYear})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleYearChange('next'),className:\"p-2 rounded-full bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl shadow-lg border border-white/20 dark:border-gray-700/50 hover:bg-white dark:hover:bg-gray-700 transition-all duration-200\",children:/*#__PURE__*/_jsx(ChevronRightIcon,{className:\"w-5 h-5 text-gray-700 dark:text-gray-300\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-6\",children:[viewMode==='month'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{setViewMode('year');setSelectedMonth(null);setSelectedTask(null);},className:\"flex items-center gap-2 px-3 py-1 bg-gray-100 dark:bg-gray-700 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\",children:[/*#__PURE__*/_jsx(ChevronLeftIcon,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300\",children:\"Back to Year\"})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:months[selectedMonth]?format(months[selectedMonth],'MMMM yyyy'):''})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[monthTasks.length,\" tasks\"]})]}),viewMode==='year'&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm font-medium text-gray-600 dark:text-gray-400 mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Jan\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Feb\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Mar\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Apr\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"May\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Jun\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Jul\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Aug\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Sep\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Oct\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Nov\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-center flex-1\",children:\"Dec\"})]}),(()=>{const now=new Date();if(now.getFullYear()===selectedYear){const currentMonth=now.getMonth();const monthPosition=currentMonth/11*100;// 0-11 months mapped to 0-100%\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 h-2 w-0.5 bg-blue-500 opacity-60\",style:{left:\"\".concat(monthPosition,\"%\"),transform:'translateX(-0.125rem)'}});}return null;})(),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 left-0 w-full h-8 flex\",children:months.map((month,index)=>{const tasksInMonth=getTasksForMonth(index);const hasTasks=tasksInMonth.length>0;const isSelected=selectedMonth===index;return/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMonthClick(index),className:\"flex-1 h-8 border-r border-gray-200 dark:border-gray-600 last:border-r-0 transition-all duration-200 relative \".concat(hasTasks?'bg-blue-50 dark:bg-blue-900/20 hover:bg-blue-100 dark:hover:bg-blue-900/30':'hover:bg-gray-50 dark:hover:bg-gray-700/50',\" \").concat(isSelected?'bg-blue-100 dark:bg-blue-900/40 ring-2 ring-blue-300 dark:ring-blue-600':''),title:\"\".concat(format(month,'MMMM'),\" - \").concat(tasksInMonth.length,\" tasks\"),children:hasTasks&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-1 left-1/2 transform -translate-x-1/2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full bg-blue-500 dark:bg-blue-400\"})})},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-6 left-0 right-0 h-0.5 bg-gray-300 dark:bg-gray-600\"}),(()=>{const now=new Date();let progressPosition=0;if(viewMode==='month'&&selectedMonth!==null){// Monthly view - show progress within the month\nconst currentMonth=now.getMonth();const currentYear=now.getFullYear();if(currentMonth===selectedMonth&&currentYear===selectedYear){const monthStart=new Date(selectedYear,selectedMonth,1);const monthEnd=new Date(selectedYear,selectedMonth+1,0);const daysInMonth=monthEnd.getDate();const dayOfMonth=now.getDate();progressPosition=(dayOfMonth-1)/(daysInMonth-1)*100;}else{// Not current month, don't show progress line\nreturn null;}}else{// Yearly view - show progress within the year\nconst yearStart=startOfYear(new Date(selectedYear,0,1));const yearEnd=endOfYear(new Date(selectedYear,11,31));const daysInYear=differenceInDays(yearEnd,yearStart);const daysFromStart=differenceInDays(now,yearStart);// Only show if we're in the current year\nif(now.getFullYear()===selectedYear){progressPosition=Math.max(0,Math.min(100,daysFromStart/daysInYear*100));}else{// Not current year, don't show progress line\nreturn null;}}return/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-6 h-0.5 bg-gradient-to-r from-blue-500 to-blue-600 opacity-80\",style:{left:\"\".concat(progressPosition,\"%\"),width:'2px',transform:'translateX(-1px)'},children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-1 left-1/2 transform -translate-x-1/2 w-3 h-3 bg-blue-500 rounded-full border-2 border-white dark:border-gray-800 shadow-sm\"})});})(),viewMode==='month'&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute top-2 left-0 right-0 flex justify-between text-xs text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"7\"}),/*#__PURE__*/_jsx(\"span\",{children:\"14\"}),/*#__PURE__*/_jsx(\"span\",{children:\"21\"}),/*#__PURE__*/_jsx(\"span\",{children:\"28\"}),/*#__PURE__*/_jsx(\"span\",{children:months[selectedMonth]?new Date(selectedYear,selectedMonth+1,0).getDate():31})]}),/*#__PURE__*/_jsx(\"div\",{className:\"relative h-12\",children:currentTasks.map(task=>{const position=getTaskPosition(task);const status=getCalculatedStatus(task);const isSelected=(selectedTask===null||selectedTask===void 0?void 0:selectedTask.id)===task.id;const isHovered=(hoveredTask===null||hoveredTask===void 0?void 0:hoveredTask.id)===task.id;return/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTaskClick(task),onMouseEnter:()=>setHoveredTask(task),onMouseLeave:()=>setHoveredTask(null),className:\"absolute top-4 transform -translate-x-1/2 w-4 h-4 rounded-full \".concat(getTaskDotColor(status),\" \").concat(getPriorityRing(task),\" transition-all duration-200 hover:scale-125 \").concat(isSelected?'ring-4 ring-gray-400 dark:ring-gray-500':'',\" \").concat(isHovered?'ring-4 ring-blue-400 dark:ring-blue-500':''),style:{left:\"\".concat(position.left,\"%\")},title:\"\".concat(task.Task,\" - \").concat(format(parseDeadlineDate(task.Deadline),'MMM dd, yyyy')),children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-1 rounded-full bg-white dark:bg-gray-100\"})},task.id);})})]}),selectedMonth!==null&&viewMode==='year'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:[format(months[selectedMonth],'MMMM yyyy'),\" Tasks\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedMonth(null),className:\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\",children:/*#__PURE__*/_jsx(ChevronDownIcon,{className:\"w-5 h-5\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\",children:getTasksForMonth(selectedMonth).map(task=>{const status=getCalculatedStatus(task);const deadline=parseDeadlineDate(task.Deadline);const responsibleNames=getResponsiblePartyNames(task.ResponsibleParty);return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleTaskClick(task),className:\"group p-4 rounded-xl backdrop-blur-sm border transition-all duration-200 hover:scale-[1.02] hover:shadow-lg cursor-pointer \".concat(status==='Active'?'bg-blue-50/60 dark:bg-blue-950/20 border-blue-200/50 dark:border-blue-800/30 hover:bg-blue-50/80 dark:hover:bg-blue-950/30':status==='Overdue'?'bg-red-50/60 dark:bg-red-950/20 border-red-200/50 dark:border-red-800/30 hover:bg-red-50/80 dark:hover:bg-red-950/30':status==='Completed'?'bg-green-50/60 dark:bg-green-950/20 border-green-200/50 dark:border-green-800/30 hover:bg-green-50/80 dark:hover:bg-green-950/30':'bg-gray-50/60 dark:bg-gray-950/20 border-gray-200/50 dark:border-gray-800/30 hover:bg-gray-50/80 dark:hover:bg-gray-950/30',\" \").concat(task.Priority==='Urgent'?'ring-2 ring-orange-200/50 dark:ring-orange-800/30':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[getStatusIcon(status),/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-semibold text-gray-900 dark:text-white group-hover:text-blue-900 dark:group-hover:text-blue-100 transition-colors\",children:task.Task||'Untitled Task'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs font-medium rounded-full \".concat(getStatusColor(status)),children:status}),task.Priority==='Urgent'&&/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs font-medium rounded-full bg-gradient-to-r from-orange-500 to-orange-600 text-white shadow-md\",children:\"Urgent\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 bg-blue-100 dark:bg-blue-900/30 rounded-md\",children:/*#__PURE__*/_jsx(FolderIcon,{className:\"w-3.5 h-3.5 text-blue-600 dark:text-blue-400\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-600 dark:text-gray-400\",children:task.Project||'No Project'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 bg-green-100 dark:bg-green-900/30 rounded-md\",children:/*#__PURE__*/_jsx(UserIcon,{className:\"w-3.5 h-3.5 text-green-600 dark:text-green-400\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-600 dark:text-gray-400\",children:responsibleNames})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 px-3 py-2 rounded-lg backdrop-blur-sm border \".concat(status==='Active'?'bg-blue-100/40 dark:bg-blue-900/20 border-blue-200/30 dark:border-blue-800/20':status==='Overdue'?'bg-red-100/40 dark:bg-red-900/20 border-red-200/30 dark:border-red-800/20':status==='Completed'?'bg-green-100/40 dark:bg-green-900/20 border-green-200/30 dark:border-green-800/20':'bg-gray-100/40 dark:bg-gray-900/20 border-gray-200/30 dark:border-gray-800/20'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 rounded-md \".concat(status==='Active'?'bg-blue-200/60 dark:bg-blue-800/40':status==='Overdue'?'bg-red-200/60 dark:bg-red-800/40':status==='Completed'?'bg-green-200/60 dark:bg-green-800/40':'bg-gray-200/60 dark:bg-gray-800/40'),children:/*#__PURE__*/_jsx(CalendarDaysIcon,{className:\"w-3.5 h-3.5 \".concat(status==='Active'?'text-blue-700 dark:text-blue-300':status==='Overdue'?'text-red-700 dark:text-red-300':status==='Completed'?'text-green-700 dark:text-green-300':'text-gray-700 dark:text-gray-300')})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide font-medium\",children:\"Due\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-bold \".concat(status==='Active'?'text-blue-900 dark:text-blue-100':status==='Overdue'?'text-red-900 dark:text-red-100':status==='Completed'?'text-green-900 dark:text-green-100':'text-gray-900 dark:text-gray-100'),children:deadline?format(deadline,'MMM dd, yyyy'):'No date'})]})]})]}),task.Notes&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pt-3 border-t border-gray-200/50 dark:border-gray-600/30\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-600 dark:text-gray-400 italic\",children:task.Notes})})]},task.id);})})]})]}),(selectedTask||hoveredTask)&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-gray-900 dark:text-white\",children:\"Task Details\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSelectedTask(null);setHoveredTask(null);},className:\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\",children:/*#__PURE__*/_jsx(ChevronDownIcon,{className:\"w-5 h-5\"})})]}),(()=>{const task=selectedTask||hoveredTask;if(!task)return null;// Add daysUntil calculation for TaskCard\nconst deadline=parseDeadlineDate(task.Deadline);const today=new Date();const daysUntil=deadline?Math.ceil((deadline-today)/(1000*60*60*24)):null;return/*#__PURE__*/_jsx(TaskCard,{task:_objectSpread(_objectSpread({},task),{},{daysUntil:daysUntil}),showCompletion:true,showUrgency:true,showDelete:true,onToggleCompletion:toggleTaskCompletion,onToggleUrgency:toggleTaskUrgency,onDelete:deleteTask,className:\"backdrop-blur-sm\",users:users});})()]}),selectedTask&&viewMode==='year'&&selectedMonth!==null&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:[\"All Tasks for \",months[selectedMonth]?format(months[selectedMonth],'MMMM yyyy'):'']}),monthTasks.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(FunnelIcon,{className:\"w-8 h-8 text-gray-500 dark:text-gray-400\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-1\",children:\"No tasks found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:\"No tasks scheduled for this month\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:monthTasks.map((task,index)=>{const status=getCalculatedStatus(task);const deadline=parseDeadlineDate(task.Deadline);const responsibleNames=getResponsiblePartyNames(task.ResponsibleParty);return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleTaskClick(task),className:\"group p-4 rounded-xl backdrop-blur-sm border transition-all duration-200 hover:scale-[1.02] hover:shadow-lg cursor-pointer \".concat(status==='Active'?'bg-blue-50/60 dark:bg-blue-950/20 border-blue-200/50 dark:border-blue-800/30 hover:bg-blue-50/80 dark:hover:bg-blue-950/30':status==='Overdue'?'bg-red-50/60 dark:bg-red-950/20 border-red-200/50 dark:border-red-800/30 hover:bg-red-50/80 dark:hover:bg-red-950/30':status==='Completed'?'bg-green-50/60 dark:bg-green-950/20 border-green-200/50 dark:border-green-800/30 hover:bg-green-50/80 dark:hover:bg-green-950/30':'bg-gray-50/60 dark:bg-gray-950/20 border-gray-200/50 dark:border-gray-800/30 hover:bg-gray-50/80 dark:hover:bg-gray-950/30',\" \").concat(task.Priority==='Urgent'?'ring-2 ring-orange-200/50 dark:ring-orange-800/30':''),style:{animationDelay:\"\".concat(index*30,\"ms\")},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[getStatusIcon(status),/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-semibold text-gray-900 dark:text-white group-hover:text-blue-900 dark:group-hover:text-blue-100 transition-colors\",children:task.Task||'Untitled Task'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs font-medium rounded-full \".concat(getStatusColor(status)),children:status}),task.Priority==='Urgent'&&/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs font-medium rounded-full bg-gradient-to-r from-orange-500 to-orange-600 text-white shadow-md\",children:\"Urgent\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 bg-blue-100 dark:bg-blue-900/30 rounded-md\",children:/*#__PURE__*/_jsx(FolderIcon,{className:\"w-3.5 h-3.5 text-blue-600 dark:text-blue-400\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-600 dark:text-gray-400\",children:task.Project||'No Project'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 bg-green-100 dark:bg-green-900/30 rounded-md\",children:/*#__PURE__*/_jsx(UserIcon,{className:\"w-3.5 h-3.5 text-green-600 dark:text-green-400\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-600 dark:text-gray-400\",children:responsibleNames})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 px-3 py-2 rounded-lg backdrop-blur-sm border \".concat(status==='Active'?'bg-blue-100/40 dark:bg-blue-900/20 border-blue-200/30 dark:border-blue-800/20':status==='Overdue'?'bg-red-100/40 dark:bg-red-900/20 border-red-200/30 dark:border-red-800/20':status==='Completed'?'bg-green-100/40 dark:bg-green-900/20 border-green-200/30 dark:border-green-800/20':'bg-gray-100/40 dark:bg-gray-900/20 border-gray-200/30 dark:border-gray-800/20'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 rounded-md \".concat(status==='Active'?'bg-blue-200/60 dark:bg-blue-800/40':status==='Overdue'?'bg-red-200/60 dark:bg-red-800/40':status==='Completed'?'bg-green-200/60 dark:bg-green-800/40':'bg-gray-200/60 dark:bg-gray-800/40'),children:/*#__PURE__*/_jsx(CalendarDaysIcon,{className:\"w-3.5 h-3.5 \".concat(status==='Active'?'text-blue-700 dark:text-blue-300':status==='Overdue'?'text-red-700 dark:text-red-300':status==='Completed'?'text-green-700 dark:text-green-300':'text-gray-700 dark:text-gray-300')})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide font-medium\",children:\"Due\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-bold \".concat(status==='Active'?'text-blue-900 dark:text-blue-100':status==='Overdue'?'text-red-900 dark:text-red-100':status==='Completed'?'text-green-900 dark:text-green-100':'text-gray-900 dark:text-gray-100'),children:deadline?format(deadline,'MMM dd, yyyy'):'No date'})]})]})]}),task.Notes&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pt-3 border-t border-gray-200/50 dark:border-gray-600/30\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-600 dark:text-gray-400 italic\",children:task.Notes})})]},task.id);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-semibold text-gray-900 dark:text-white mb-3\",children:\"Status Legend\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-300\",children:\"Active\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-green-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-300\",children:\"Completed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-red-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-300\",children:\"Overdue\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-orange-500 ring-2 ring-orange-300 dark:ring-orange-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-300\",children:\"Urgent Priority\"})]})]})]})]})]});}export default GanttDeadlinesPage;","map":{"version":3,"names":["React","useState","useMemo","useEffect","ChartBarIcon","ChevronLeftIcon","ChevronRightIcon","CheckCircleIcon","ExclamationTriangleIcon","ClockIcon","UserIcon","FolderIcon","CalendarDaysIcon","ChevronDownIcon","FunnelIcon","format","startOfYear","endOfYear","parseISO","isValid","differenceInDays","startOfMonth","eachMonthOfInterval","isWithinInterval","sharedDataService","microsoftDataService","globalTaskStore","TaskCard","recurringTaskGenerator","taskUpdateService","jsx","_jsx","jsxs","_jsxs","GanttDeadlinesPage","tasks","setTasks","users","setUsers","loading","setLoading","updating","setUpdating","selectedYear","setSelectedYear","Date","getFullYear","selectedMonth","setSelectedMonth","selectedTask","setSelectedTask","hoveredTask","setHoveredTask","viewMode","setViewMode","toggleTaskCompletion","taskId","currentStatus","newStatus","updateTaskField","Completed_x003f_","allTasks","getAllTasks","toggleTaskUrgency","currentUrgency","newPriority","Priority","deleteTask","loadData","unsubscribe","subscribe","console","log","length","slice","map","t","id","task","Task","completed","usersData","Promise","all","getEnterpriseUsers","error","parseDeadlineDate","dateStr","includes","datePart","split","parts","year","parseInt","month","day","isNaN","date","setHours","getCalculatedStatus","isCompleted","Completed","deadline","Deadline","getResponsiblePartyNames","responsibleParty","emails","email","trim","filter","names","user","find","u","mail","userPrincipalName","Email","displayName","join","yearTasks","monthTasks","getMonth","currentTasks","months","start","end","getTaskPosition","left","monthStart","monthEnd","daysInMonth","getDate","dayOfMonth","yearStart","daysInYear","daysFromStart","Math","max","min","getTasksForMonth","monthIndex","getStatusIcon","status","className","getStatusColor","getTaskDotColor","getPriorityRing","handleYearChange","direction","prev","handleMonthClick","handleTaskClick","children","concat","onClick","now","currentMonth","monthPosition","style","transform","index","tasksInMonth","hasTasks","isSelected","title","progressPosition","currentYear","yearEnd","width","position","isHovered","onMouseEnter","onMouseLeave","responsibleNames","ResponsibleParty","Project","Notes","today","daysUntil","ceil","_objectSpread","showCompletion","showUrgency","showDelete","onToggleCompletion","onToggleUrgency","onDelete","animationDelay"],"sources":["/Users/nic/housing-deadlines-app/VERSION_2.2.0_BACKUP/src/GanttDeadlinesPage.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { \n  ChartBarIcon, \n  ChevronLeftIcon, \n  ChevronRightIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  UserIcon,\n  FolderIcon,\n  CalendarDaysIcon,\n  ChevronDownIcon,\n  FunnelIcon\n} from '@heroicons/react/24/outline';\nimport { format, startOfYear, endOfYear, parseISO, isValid, differenceInDays, startOfMonth, eachMonthOfInterval, isWithinInterval } from 'date-fns';\nimport { sharedDataService } from './sharedDataService';\nimport { microsoftDataService } from './microsoftDataService';\nimport { globalTaskStore } from './globalTaskStore';\nimport TaskCard from './TaskCard';\nimport recurringTaskGenerator from './recurringTaskGenerator';\nimport taskUpdateService from './taskUpdateService';\n\nfunction GanttDeadlinesPage() {\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [hoveredTask, setHoveredTask] = useState(null);\n  const [viewMode, setViewMode] = useState('year'); // 'year' or 'month'\n\n  // Toggle task completion - uses centralized update service\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\n    const newStatus = !currentStatus;\n    \n    await taskUpdateService.updateTaskField(\n      taskId,\n      { Completed_x003f_: newStatus },\n      () => setUpdating(true),\n      () => {\n        setUpdating(false);\n        const allTasks = globalTaskStore.getAllTasks();\n        setTasks(allTasks);\n      }\n    );\n  };\n\n  // Toggle task urgency - uses centralized update service\n  const toggleTaskUrgency = async (taskId, currentUrgency) => {\n    const newPriority = currentUrgency ? 'Normal' : 'Urgent';\n    \n    await taskUpdateService.updateTaskField(\n      taskId,\n      { Priority: newPriority },\n      () => setUpdating(true),\n      () => {\n        setUpdating(false);\n        const allTasks = globalTaskStore.getAllTasks();\n        setTasks(allTasks);\n      }\n    );\n  };\n\n  // Delete task - uses centralized update service\n  const deleteTask = async (taskId) => {\n    await taskUpdateService.deleteTask(\n      taskId,\n      () => setUpdating(true),\n      () => {\n        setUpdating(false);\n        const allTasks = globalTaskStore.getAllTasks();\n        setTasks(allTasks);\n      }\n    );\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        \n        // Subscribe to global task store updates\n        const unsubscribe = globalTaskStore.subscribe(() => {\n          const allTasks = globalTaskStore.getAllTasks();\n          console.log('GanttDeadlines: Global store subscription triggered -', allTasks.length, 'total items');\n          console.log('GanttDeadlines: Sample task completion statuses:', allTasks.slice(0, 3).map(t => ({ id: t.id, task: t.Task, completed: t.Completed_x003f_ })));\n          setTasks(allTasks);\n        });\n        \n        // Get initial data\n        const [allTasks, usersData] = await Promise.all([\n          globalTaskStore.getAllTasks(),\n          microsoftDataService.users.getEnterpriseUsers()\n        ]);\n        setTasks(allTasks);\n        setUsers(usersData);\n        console.log('GanttDeadlines: Loaded', allTasks.length, 'total items and', usersData.length, 'users');\n        \n        return unsubscribe;\n      } catch (error) {\n        console.error('GanttDeadlinesPage: Error loading data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  const parseDeadlineDate = (dateStr) => {\n    if (!dateStr) return null;\n    try {\n      // Parse date string carefully to avoid timezone issues\n      // If in yyyy-MM-dd format, parse components directly\n      if (typeof dateStr === 'string' && dateStr.includes('-')) {\n        const datePart = dateStr.split('T')[0]; // Get just the date part\n        const parts = datePart.split('-');\n        if (parts.length === 3) {\n          const year = parseInt(parts[0], 10);\n          const month = parseInt(parts[1], 10) - 1; // JS months are 0-indexed\n          const day = parseInt(parts[2], 10);\n          \n          if (!isNaN(year) && !isNaN(month) && !isNaN(day)) {\n            // Create date at noon local time to avoid timezone shifts\n            return new Date(year, month, day, 12, 0, 0);\n          }\n        }\n      }\n      \n      // Fallback to regular Date parsing\n      const date = new Date(dateStr);\n      if (isValid(date)) {\n        date.setHours(12, 0, 0, 0);\n        return date;\n      }\n      \n      return null;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  const getCalculatedStatus = (task) => {\n    // Check completion status - match TaskCard logic\n    const isCompleted = task.Completed_x003f_ || task.Completed;\n    if (isCompleted === true || isCompleted === 'Yes' || isCompleted === 'yes') {\n      return 'Completed';\n    }\n    \n    // Only consider overdue if not completed\n    const deadline = parseDeadlineDate(task.Deadline);\n    if (deadline && deadline < new Date()) {\n      return 'Overdue';\n    }\n    return 'Active';\n  };\n\n  const getResponsiblePartyNames = (responsibleParty) => {\n    if (!responsibleParty || !users || users.length === 0) {\n      return responsibleParty || '';\n    }\n    \n    const emails = responsibleParty.split(';').map(email => email.trim()).filter(email => email);\n    const names = emails.map(email => {\n      const user = users.find(u => \n        u.mail === email || \n        u.userPrincipalName === email || \n        u.email === email || \n        u.Email === email\n      );\n      return user ? user.displayName : email;\n    });\n    \n    return names.join(', ');\n  };\n\n  const yearTasks = useMemo(() => {\n    return tasks.filter(task => {\n      const deadline = parseDeadlineDate(task.Deadline);\n      if (!deadline) return false;\n      return deadline.getFullYear() === selectedYear;\n    });\n  }, [tasks, selectedYear]);\n\n  const monthTasks = useMemo(() => {\n    if (selectedMonth === null) return [];\n    return yearTasks.filter(task => {\n      const deadline = parseDeadlineDate(task.Deadline);\n      return deadline && deadline.getMonth() === selectedMonth;\n    });\n  }, [yearTasks, selectedMonth]);\n\n  const currentTasks = viewMode === 'month' ? monthTasks : yearTasks;\n\n  const months = useMemo(() => {\n    const start = startOfYear(new Date(selectedYear, 0, 1));\n    const end = endOfYear(new Date(selectedYear, 11, 31));\n    return eachMonthOfInterval({ start, end });\n  }, [selectedYear]);\n\n  const getTaskPosition = (task) => {\n    const deadline = parseDeadlineDate(task.Deadline);\n    if (!deadline) return { left: 0, month: null };\n    \n    let left = 0;\n    \n    if (viewMode === 'month' && selectedMonth !== null) {\n      // Monthly view - position within the month\n      const monthStart = new Date(selectedYear, selectedMonth, 1);\n      const monthEnd = new Date(selectedYear, selectedMonth + 1, 0);\n      const daysInMonth = monthEnd.getDate();\n      const dayOfMonth = deadline.getDate();\n      \n      left = ((dayOfMonth - 1) / (daysInMonth - 1)) * 100;\n    } else {\n      // Yearly view - position within the year\n      const yearStart = startOfYear(new Date(selectedYear, 0, 1));\n      const daysInYear = differenceInDays(endOfYear(new Date(selectedYear, 11, 31)), yearStart);\n      const daysFromStart = differenceInDays(deadline, yearStart);\n      \n      left = (daysFromStart / daysInYear) * 100;\n    }\n    \n    const month = deadline.getMonth();\n    return { left: Math.max(0, Math.min(100, left)), month };\n  };\n\n  const getTasksForMonth = (monthIndex) => {\n    return yearTasks.filter(task => {\n      const deadline = parseDeadlineDate(task.Deadline);\n      return deadline && deadline.getMonth() === monthIndex;\n    });\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'Completed':\n        return <CheckCircleIcon className=\"w-5 h-5 text-green-500\" />;\n      case 'Overdue':\n        return <ExclamationTriangleIcon className=\"w-5 h-5 text-red-500\" />;\n      case 'Active':\n        return <ClockIcon className=\"w-5 h-5 text-blue-500\" />;\n      default:\n        return <ClockIcon className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'Completed':\n        return 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400';\n      case 'Overdue':\n        return 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400';\n      case 'Active':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400';\n    }\n  };\n\n  const getTaskDotColor = (status) => {\n    switch (status) {\n      case 'Completed':\n        return 'bg-green-500 ring-green-200 dark:ring-green-800';\n      case 'Overdue':\n        return 'bg-red-500 ring-red-200 dark:ring-red-800';\n      case 'Active':\n        return 'bg-blue-500 ring-blue-200 dark:ring-blue-800';\n      default:\n        return 'bg-gray-500 ring-gray-200 dark:ring-gray-800';\n    }\n  };\n\n  const getPriorityRing = (task) => {\n    return task.Priority === 'Urgent' ? 'ring-2 ring-orange-300 dark:ring-orange-600' : '';\n  };\n\n  const handleYearChange = (direction) => {\n    if (direction === 'prev') {\n      setSelectedYear(prev => prev - 1);\n    } else {\n      setSelectedYear(prev => prev + 1);\n    }\n    setSelectedMonth(null);\n    setSelectedTask(null);\n  };\n\n  const handleMonthClick = (monthIndex) => {\n    if (selectedMonth === monthIndex) {\n      // If clicking the same month, toggle back to yearly view\n      setSelectedMonth(null);\n      setViewMode('year');\n    } else {\n      // Switch to monthly view for the selected month\n      setSelectedMonth(monthIndex);\n      setViewMode('month');\n    }\n    setSelectedTask(null);\n  };\n\n  const handleTaskClick = (task) => {\n    setSelectedTask(selectedTask?.id === task.id ? null : task);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 dark:from-gray-900 dark:via-blue-950/30 dark:to-indigo-950/20 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading timeline...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 dark:from-gray-900 dark:via-blue-950/30 dark:to-indigo-950/20 relative\">\n      {/* Updating Overlay */}\n      {updating && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 flex flex-col items-center gap-4 border border-gray-200 dark:border-gray-700\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-4 border-blue-200 border-t-blue-600\"></div>\n            <div className=\"text-center\">\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">Updating...</p>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">Syncing with database</p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-gray-900 via-blue-900 to-indigo-900 dark:from-white dark:via-blue-100 dark:to-indigo-100 bg-clip-text text-transparent\">\n              Gantt Chart\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              Timeline view of deadlines across the year\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-xl font-bold text-gray-900 dark:text-white\">\n              {currentTasks.length}\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\">\n              {viewMode === 'month' \n                ? `Tasks in ${months[selectedMonth] ? format(months[selectedMonth], 'MMMM yyyy') : ''}`\n                : `Tasks in ${selectedYear}`\n              }\n            </div>\n          </div>\n        </div>\n\n        {/* Year Navigation */}\n        <div className=\"flex items-center justify-center gap-4\">\n          <button\n            onClick={() => handleYearChange('prev')}\n            className=\"p-2 rounded-full bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl shadow-lg border border-white/20 dark:border-gray-700/50 hover:bg-white dark:hover:bg-gray-700 transition-all duration-200\"\n          >\n            <ChevronLeftIcon className=\"w-5 h-5 text-gray-700 dark:text-gray-300\" />\n          </button>\n          \n          <div className=\"px-6 py-3 bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50\">\n            <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {selectedYear}\n            </span>\n          </div>\n          \n          <button\n            onClick={() => handleYearChange('next')}\n            className=\"p-2 rounded-full bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl shadow-lg border border-white/20 dark:border-gray-700/50 hover:bg-white dark:hover:bg-gray-700 transition-all duration-200\"\n          >\n            <ChevronRightIcon className=\"w-5 h-5 text-gray-700 dark:text-gray-300\" />\n          </button>\n        </div>\n\n        {/* Timeline Container */}\n        <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-6\">\n          {/* View Mode Header */}\n          {viewMode === 'month' && (\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-3\">\n                <button\n                  onClick={() => {\n                    setViewMode('year');\n                    setSelectedMonth(null);\n                    setSelectedTask(null);\n                  }}\n                  className=\"flex items-center gap-2 px-3 py-1 bg-gray-100 dark:bg-gray-700 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  <ChevronLeftIcon className=\"w-4 h-4\" />\n                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Back to Year</span>\n                </button>\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {months[selectedMonth] ? format(months[selectedMonth], 'MMMM yyyy') : ''}\n                </h3>\n              </div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {monthTasks.length} tasks\n              </div>\n            </div>\n          )}\n\n          {/* Month Headers - Only show in yearly view */}\n          {viewMode === 'year' && (\n            <div className=\"relative mb-8\">\n              <div className=\"flex justify-between text-sm font-medium text-gray-600 dark:text-gray-400 mb-2\">\n                <span className=\"text-center flex-1\">Jan</span>\n                <span className=\"text-center flex-1\">Feb</span>\n                <span className=\"text-center flex-1\">Mar</span>\n                <span className=\"text-center flex-1\">Apr</span>\n                <span className=\"text-center flex-1\">May</span>\n                <span className=\"text-center flex-1\">Jun</span>\n                <span className=\"text-center flex-1\">Jul</span>\n                <span className=\"text-center flex-1\">Aug</span>\n                <span className=\"text-center flex-1\">Sep</span>\n                <span className=\"text-center flex-1\">Oct</span>\n                <span className=\"text-center flex-1\">Nov</span>\n                <span className=\"text-center flex-1\">Dec</span>\n              </div>\n              \n              {/* Current Month Indicator */}\n              {(() => {\n                const now = new Date();\n                if (now.getFullYear() === selectedYear) {\n                  const currentMonth = now.getMonth();\n                  const monthPosition = (currentMonth / 11) * 100; // 0-11 months mapped to 0-100%\n                  \n                  return (\n                    <div \n                      className=\"absolute top-0 h-2 w-0.5 bg-blue-500 opacity-60\"\n                      style={{ \n                        left: `${monthPosition}%`,\n                        transform: 'translateX(-0.125rem)'\n                      }}\n                    />\n                  );\n                }\n                return null;\n              })()}\n              \n              {/* Month Clickable Areas */}\n              <div className=\"absolute top-0 left-0 w-full h-8 flex\">\n                {months.map((month, index) => {\n                  const tasksInMonth = getTasksForMonth(index);\n                  const hasTasks = tasksInMonth.length > 0;\n                  const isSelected = selectedMonth === index;\n                  \n                  return (\n                    <button\n                      key={index}\n                      onClick={() => handleMonthClick(index)}\n                      className={`flex-1 h-8 border-r border-gray-200 dark:border-gray-600 last:border-r-0 transition-all duration-200 relative ${\n                        hasTasks \n                          ? 'bg-blue-50 dark:bg-blue-900/20 hover:bg-blue-100 dark:hover:bg-blue-900/30' \n                          : 'hover:bg-gray-50 dark:hover:bg-gray-700/50'\n                      } ${isSelected ? 'bg-blue-100 dark:bg-blue-900/40 ring-2 ring-blue-300 dark:ring-blue-600' : ''}`}\n                      title={`${format(month, 'MMMM')} - ${tasksInMonth.length} tasks`}\n                    >\n                      {hasTasks && (\n                        <div className=\"absolute top-1 left-1/2 transform -translate-x-1/2\">\n                          <div className=\"w-2 h-2 rounded-full bg-blue-500 dark:bg-blue-400\"></div>\n                        </div>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n\n          {/* Timeline */}\n          <div className=\"relative\">\n            {/* Timeline Line */}\n            <div className=\"absolute top-6 left-0 right-0 h-0.5 bg-gray-300 dark:bg-gray-600\"></div>\n            \n            {/* Progress Line - Current Date Indicator */}\n            {(() => {\n              const now = new Date();\n              let progressPosition = 0;\n              \n              if (viewMode === 'month' && selectedMonth !== null) {\n                // Monthly view - show progress within the month\n                const currentMonth = now.getMonth();\n                const currentYear = now.getFullYear();\n                \n                if (currentMonth === selectedMonth && currentYear === selectedYear) {\n                  const monthStart = new Date(selectedYear, selectedMonth, 1);\n                  const monthEnd = new Date(selectedYear, selectedMonth + 1, 0);\n                  const daysInMonth = monthEnd.getDate();\n                  const dayOfMonth = now.getDate();\n                  \n                  progressPosition = ((dayOfMonth - 1) / (daysInMonth - 1)) * 100;\n                } else {\n                  // Not current month, don't show progress line\n                  return null;\n                }\n              } else {\n                // Yearly view - show progress within the year\n                const yearStart = startOfYear(new Date(selectedYear, 0, 1));\n                const yearEnd = endOfYear(new Date(selectedYear, 11, 31));\n                const daysInYear = differenceInDays(yearEnd, yearStart);\n                const daysFromStart = differenceInDays(now, yearStart);\n                \n                // Only show if we're in the current year\n                if (now.getFullYear() === selectedYear) {\n                  progressPosition = Math.max(0, Math.min(100, (daysFromStart / daysInYear) * 100));\n                } else {\n                  // Not current year, don't show progress line\n                  return null;\n                }\n              }\n              \n              return (\n                <div \n                  className=\"absolute top-6 h-0.5 bg-gradient-to-r from-blue-500 to-blue-600 opacity-80\"\n                  style={{ \n                    left: `${progressPosition}%`, \n                    width: '2px',\n                    transform: 'translateX(-1px)'\n                  }}\n                >\n                  {/* Progress indicator dot */}\n                  <div className=\"absolute -top-1 left-1/2 transform -translate-x-1/2 w-3 h-3 bg-blue-500 rounded-full border-2 border-white dark:border-gray-800 shadow-sm\"></div>\n                </div>\n              );\n            })()}\n            \n            {/* Day markers for monthly view */}\n            {viewMode === 'month' && (\n              <div className=\"absolute top-2 left-0 right-0 flex justify-between text-xs text-gray-500 dark:text-gray-400\">\n                <span>1</span>\n                <span>7</span>\n                <span>14</span>\n                <span>21</span>\n                <span>28</span>\n                <span>{months[selectedMonth] ? new Date(selectedYear, selectedMonth + 1, 0).getDate() : 31}</span>\n              </div>\n            )}\n            \n            {/* Task Dots */}\n            <div className=\"relative h-12\">\n              {currentTasks.map((task) => {\n                const position = getTaskPosition(task);\n                const status = getCalculatedStatus(task);\n                const isSelected = selectedTask?.id === task.id;\n                const isHovered = hoveredTask?.id === task.id;\n                \n                return (\n                  <button\n                    key={task.id}\n                    onClick={() => handleTaskClick(task)}\n                    onMouseEnter={() => setHoveredTask(task)}\n                    onMouseLeave={() => setHoveredTask(null)}\n                    className={`absolute top-4 transform -translate-x-1/2 w-4 h-4 rounded-full ${getTaskDotColor(status)} ${getPriorityRing(task)} transition-all duration-200 hover:scale-125 ${\n                      isSelected ? 'ring-4 ring-gray-400 dark:ring-gray-500' : ''\n                    } ${isHovered ? 'ring-4 ring-blue-400 dark:ring-blue-500' : ''}`}\n                    style={{ left: `${position.left}%` }}\n                    title={`${task.Task} - ${format(parseDeadlineDate(task.Deadline), 'MMM dd, yyyy')}`}\n                  >\n                    {/* Inner dot */}\n                    <div className=\"absolute inset-1 rounded-full bg-white dark:bg-gray-100\"></div>\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Selected Month Tasks - Only show in yearly view */}\n          {selectedMonth !== null && viewMode === 'year' && (\n            <div className=\"mt-8 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {format(months[selectedMonth], 'MMMM yyyy')} Tasks\n                </h3>\n                <button\n                  onClick={() => setSelectedMonth(null)}\n                  className=\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\"\n                >\n                  <ChevronDownIcon className=\"w-5 h-5\" />\n                </button>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                {getTasksForMonth(selectedMonth).map((task) => {\n                  const status = getCalculatedStatus(task);\n                  const deadline = parseDeadlineDate(task.Deadline);\n                  const responsibleNames = getResponsiblePartyNames(task.ResponsibleParty);\n                  \n                  return (\n                    <div\n                      key={task.id}\n                      onClick={() => handleTaskClick(task)}\n                      className={`group p-4 rounded-xl backdrop-blur-sm border transition-all duration-200 hover:scale-[1.02] hover:shadow-lg cursor-pointer ${\n                        status === 'Active' \n                          ? 'bg-blue-50/60 dark:bg-blue-950/20 border-blue-200/50 dark:border-blue-800/30 hover:bg-blue-50/80 dark:hover:bg-blue-950/30' \n                          : status === 'Overdue'\n                          ? 'bg-red-50/60 dark:bg-red-950/20 border-red-200/50 dark:border-red-800/30 hover:bg-red-50/80 dark:hover:bg-red-950/30'\n                          : status === 'Completed'\n                          ? 'bg-green-50/60 dark:bg-green-950/20 border-green-200/50 dark:border-green-800/30 hover:bg-green-50/80 dark:hover:bg-green-950/30'\n                          : 'bg-gray-50/60 dark:bg-gray-950/20 border-gray-200/50 dark:border-gray-800/30 hover:bg-gray-50/80 dark:hover:bg-gray-950/30'\n                      } ${task.Priority === 'Urgent' ? 'ring-2 ring-orange-200/50 dark:ring-orange-800/30' : ''}`}\n                    >\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <div className=\"flex items-center gap-2\">\n                          {getStatusIcon(status)}\n                          <h3 className=\"text-sm font-semibold text-gray-900 dark:text-white group-hover:text-blue-900 dark:group-hover:text-blue-100 transition-colors\">\n                            {task.Task || 'Untitled Task'}\n                          </h3>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(status)}`}>\n                            {status}\n                          </span>\n                          {task.Priority === 'Urgent' && (\n                            <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gradient-to-r from-orange-500 to-orange-600 text-white shadow-md\">\n                              Urgent\n                            </span>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"flex items-center gap-2\">\n                            <div className=\"p-1 bg-blue-100 dark:bg-blue-900/30 rounded-md\">\n                              <FolderIcon className=\"w-3.5 h-3.5 text-blue-600 dark:text-blue-400\" />\n                            </div>\n                            <span className=\"text-xs text-gray-600 dark:text-gray-400\">{task.Project || 'No Project'}</span>\n                          </div>\n                          \n                          <div className=\"flex items-center gap-2\">\n                            <div className=\"p-1 bg-green-100 dark:bg-green-900/30 rounded-md\">\n                              <UserIcon className=\"w-3.5 h-3.5 text-green-600 dark:text-green-400\" />\n                            </div>\n                            <span className=\"text-xs text-gray-600 dark:text-gray-400\">{responsibleNames}</span>\n                          </div>\n                        </div>\n\n                        <div className={`flex items-center gap-2 px-3 py-2 rounded-lg backdrop-blur-sm border ${\n                          status === 'Active' \n                            ? 'bg-blue-100/40 dark:bg-blue-900/20 border-blue-200/30 dark:border-blue-800/20' \n                            : status === 'Overdue'\n                            ? 'bg-red-100/40 dark:bg-red-900/20 border-red-200/30 dark:border-red-800/20'\n                            : status === 'Completed'\n                            ? 'bg-green-100/40 dark:bg-green-900/20 border-green-200/30 dark:border-green-800/20'\n                            : 'bg-gray-100/40 dark:bg-gray-900/20 border-gray-200/30 dark:border-gray-800/20'\n                        }`}>\n                          <div className={`p-1 rounded-md ${\n                            status === 'Active' \n                              ? 'bg-blue-200/60 dark:bg-blue-800/40' \n                              : status === 'Overdue'\n                              ? 'bg-red-200/60 dark:bg-red-800/40'\n                              : status === 'Completed'\n                              ? 'bg-green-200/60 dark:bg-green-800/40'\n                              : 'bg-gray-200/60 dark:bg-gray-800/40'\n                          }`}>\n                            <CalendarDaysIcon className={`w-3.5 h-3.5 ${\n                              status === 'Active' \n                                ? 'text-blue-700 dark:text-blue-300' \n                                : status === 'Overdue'\n                                ? 'text-red-700 dark:text-red-300'\n                                : status === 'Completed'\n                                ? 'text-green-700 dark:text-green-300'\n                                : 'text-gray-700 dark:text-gray-300'\n                            }`} />\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide font-medium\">Due</div>\n                            <div className={`text-sm font-bold ${\n                              status === 'Active' \n                                ? 'text-blue-900 dark:text-blue-100' \n                                : status === 'Overdue'\n                                ? 'text-red-900 dark:text-red-100'\n                                : status === 'Completed'\n                                ? 'text-green-900 dark:text-green-100'\n                                : 'text-gray-900 dark:text-gray-100'\n                            }`}>\n                              {deadline ? format(deadline, 'MMM dd, yyyy') : 'No date'}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      {task.Notes && (\n                        <div className=\"mt-3 pt-3 border-t border-gray-200/50 dark:border-gray-600/30\">\n                          <p className=\"text-xs text-gray-600 dark:text-gray-400 italic\">\n                            {task.Notes}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n\n\n        {/* Task Card and Monthly Task List */}\n        {(selectedTask || hoveredTask) && (\n          <div className=\"space-y-4\">\n            {/* Individual Task Card */}\n            <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  Task Details\n                </h3>\n                <button\n                  onClick={() => {\n                    setSelectedTask(null);\n                    setHoveredTask(null);\n                  }}\n                  className=\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\"\n                >\n                  <ChevronDownIcon className=\"w-5 h-5\" />\n                </button>\n              </div>\n              \n              {(() => {\n                const task = selectedTask || hoveredTask;\n                if (!task) return null;\n                \n                // Add daysUntil calculation for TaskCard\n                const deadline = parseDeadlineDate(task.Deadline);\n                const today = new Date();\n                const daysUntil = deadline ? Math.ceil((deadline - today) / (1000 * 60 * 60 * 24)) : null;\n                \n                return (\n            <TaskCard\n              task={{\n                ...task,\n                daysUntil: daysUntil\n              }}\n              showCompletion={true}\n              showUrgency={true}\n              showDelete={true}\n              onToggleCompletion={toggleTaskCompletion}\n              onToggleUrgency={toggleTaskUrgency}\n              onDelete={deleteTask}\n              className=\"backdrop-blur-sm\"\n              users={users}\n            />\n                );\n              })()}\n            </div>\n\n            {/* Monthly Task List - Only show if we have a selected task and it's in a month */}\n            {selectedTask && viewMode === 'year' && selectedMonth !== null && (\n              <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  All Tasks for {months[selectedMonth] ? format(months[selectedMonth], 'MMMM yyyy') : ''}\n                </h3>\n                \n                {monthTasks.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <div className=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 rounded-full flex items-center justify-center\">\n                      <FunnelIcon className=\"w-8 h-8 text-gray-500 dark:text-gray-400\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-1\">No tasks found</h3>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">No tasks scheduled for this month</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {monthTasks.map((task, index) => {\n                      const status = getCalculatedStatus(task);\n                      const deadline = parseDeadlineDate(task.Deadline);\n                      const responsibleNames = getResponsiblePartyNames(task.ResponsibleParty);\n                      \n                      return (\n                        <div\n                          key={task.id}\n                          onClick={() => handleTaskClick(task)}\n                          className={`group p-4 rounded-xl backdrop-blur-sm border transition-all duration-200 hover:scale-[1.02] hover:shadow-lg cursor-pointer ${\n                            status === 'Active' \n                              ? 'bg-blue-50/60 dark:bg-blue-950/20 border-blue-200/50 dark:border-blue-800/30 hover:bg-blue-50/80 dark:hover:bg-blue-950/30' \n                              : status === 'Overdue'\n                              ? 'bg-red-50/60 dark:bg-red-950/20 border-red-200/50 dark:border-red-800/30 hover:bg-red-50/80 dark:hover:bg-red-950/30'\n                              : status === 'Completed'\n                              ? 'bg-green-50/60 dark:bg-green-950/20 border-green-200/50 dark:border-green-800/30 hover:bg-green-50/80 dark:hover:bg-green-950/30'\n                              : 'bg-gray-50/60 dark:bg-gray-950/20 border-gray-200/50 dark:border-gray-800/30 hover:bg-gray-50/80 dark:hover:bg-gray-950/30'\n                          } ${task.Priority === 'Urgent' ? 'ring-2 ring-orange-200/50 dark:ring-orange-800/30' : ''}`}\n                          style={{ animationDelay: `${index * 30}ms` }}\n                        >\n                          <div className=\"flex items-center justify-between mb-3\">\n                            <div className=\"flex items-center gap-2\">\n                              {getStatusIcon(status)}\n                              <h3 className=\"text-sm font-semibold text-gray-900 dark:text-white group-hover:text-blue-900 dark:group-hover:text-blue-100 transition-colors\">\n                                {task.Task || 'Untitled Task'}\n                              </h3>\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(status)}`}>\n                                {status}\n                              </span>\n                              {task.Priority === 'Urgent' && (\n                                <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gradient-to-r from-orange-500 to-orange-600 text-white shadow-md\">\n                                  Urgent\n                                </span>\n                              )}\n                            </div>\n                          </div>\n\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center gap-4\">\n                              <div className=\"flex items-center gap-2\">\n                                <div className=\"p-1 bg-blue-100 dark:bg-blue-900/30 rounded-md\">\n                                  <FolderIcon className=\"w-3.5 h-3.5 text-blue-600 dark:text-blue-400\" />\n                                </div>\n                                <span className=\"text-xs text-gray-600 dark:text-gray-400\">{task.Project || 'No Project'}</span>\n                              </div>\n                              \n                              <div className=\"flex items-center gap-2\">\n                                <div className=\"p-1 bg-green-100 dark:bg-green-900/30 rounded-md\">\n                                  <UserIcon className=\"w-3.5 h-3.5 text-green-600 dark:text-green-400\" />\n                                </div>\n                                <span className=\"text-xs text-gray-600 dark:text-gray-400\">{responsibleNames}</span>\n                              </div>\n                            </div>\n\n                            <div className={`flex items-center gap-2 px-3 py-2 rounded-lg backdrop-blur-sm border ${\n                              status === 'Active' \n                                ? 'bg-blue-100/40 dark:bg-blue-900/20 border-blue-200/30 dark:border-blue-800/20' \n                                : status === 'Overdue'\n                                ? 'bg-red-100/40 dark:bg-red-900/20 border-red-200/30 dark:border-red-800/20'\n                                : status === 'Completed'\n                                ? 'bg-green-100/40 dark:bg-green-900/20 border-green-200/30 dark:border-green-800/20'\n                                : 'bg-gray-100/40 dark:bg-gray-900/20 border-gray-200/30 dark:border-gray-800/20'\n                            }`}>\n                              <div className={`p-1 rounded-md ${\n                                status === 'Active' \n                                  ? 'bg-blue-200/60 dark:bg-blue-800/40' \n                                  : status === 'Overdue'\n                                  ? 'bg-red-200/60 dark:bg-red-800/40'\n                                  : status === 'Completed'\n                                  ? 'bg-green-200/60 dark:bg-green-800/40'\n                                  : 'bg-gray-200/60 dark:bg-gray-800/40'\n                              }`}>\n                                <CalendarDaysIcon className={`w-3.5 h-3.5 ${\n                                  status === 'Active' \n                                    ? 'text-blue-700 dark:text-blue-300' \n                                    : status === 'Overdue'\n                                    ? 'text-red-700 dark:text-red-300'\n                                    : status === 'Completed'\n                                    ? 'text-green-700 dark:text-green-300'\n                                    : 'text-gray-700 dark:text-gray-300'\n                                }`} />\n                              </div>\n                              <div className=\"text-center\">\n                                <div className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide font-medium\">Due</div>\n                                <div className={`text-sm font-bold ${\n                                  status === 'Active' \n                                    ? 'text-blue-900 dark:text-blue-100' \n                                    : status === 'Overdue'\n                                    ? 'text-red-900 dark:text-red-100'\n                                    : status === 'Completed'\n                                    ? 'text-green-900 dark:text-green-100'\n                                    : 'text-gray-900 dark:text-gray-100'\n                                }`}>\n                                  {deadline ? format(deadline, 'MMM dd, yyyy') : 'No date'}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          {task.Notes && (\n                            <div className=\"mt-3 pt-3 border-t border-gray-200/50 dark:border-gray-600/30\">\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400 italic\">\n                                {task.Notes}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Legend */}\n        <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-4\">\n          <h3 className=\"text-sm font-semibold text-gray-900 dark:text-white mb-3\">Status Legend</h3>\n          <div className=\"flex flex-wrap gap-4 text-xs\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\n              <span className=\"text-gray-600 dark:text-gray-300\">Active</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n              <span className=\"text-gray-600 dark:text-gray-300\">Completed</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\n              <span className=\"text-gray-600 dark:text-gray-300\">Overdue</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-full bg-orange-500 ring-2 ring-orange-300 dark:ring-orange-600\"></div>\n              <span className=\"text-gray-600 dark:text-gray-300\">Urgent Priority</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GanttDeadlinesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}