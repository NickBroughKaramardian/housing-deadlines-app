{"ast":null,"code":"import{sharePointService}from'./graphService';export async function debugSharePoint(){console.log('=== SHAREPOINT DEBUG START ===');try{// Get all lists\nconst lists=await sharePointService.getLists();console.log('All lists:',lists.map(l=>({id:l.id,name:l.name,displayName:l.displayName})));// Find Tasks list\nconst tasksList=lists.find(l=>l.displayName==='Tasks'||l.name==='Tasks');if(!tasksList){console.log('Target list not found');console.log('=== SHAREPOINT DEBUG END ===');return;}console.log('Using Tasks list:',{id:tasksList.id,name:tasksList.name,displayName:tasksList.displayName});// Get columns\nconst columns=await sharePointService.getListColumns(tasksList.id);console.log('Tasks list columns:');columns.forEach(col=>{console.log(\"  - \".concat(col.displayName,\" (\").concat(col.name,\") [\").concat(col.columnGroup,\"]\"));});// Get existing items\nconst items=await sharePointService.getListItems(tasksList.id);console.log('Existing items:',items.length);// Log sample item details\nif(items.length>0){console.log('Sample item fields:',Object.keys(items[0].fields));console.log('Full sample item:',items[0]);// Log ResponsibleParty structure in detail\nconst rpField=items[0].fields.ResponsibleParty;console.log('ResponsibleParty field structure:',rpField);console.log('ResponsibleParty type:',typeof rpField,Array.isArray(rpField)?'Array':'Not Array');if(rpField){console.log('ResponsibleParty JSON:',JSON.stringify(rpField,null,2));}}}catch(error){console.error('Debug SharePoint error:',error);}console.log('=== SHAREPOINT DEBUG END ===');}","map":{"version":3,"names":["sharePointService","debugSharePoint","console","log","lists","getLists","map","l","id","name","displayName","tasksList","find","columns","getListColumns","forEach","col","concat","columnGroup","items","getListItems","length","Object","keys","fields","rpField","ResponsibleParty","Array","isArray","JSON","stringify","error"],"sources":["/Users/nic/housing-deadlines-app/VERSION_2.2.0_BACKUP/src/debugSharePoint.js"],"sourcesContent":["import { sharePointService } from './graphService';\n\nexport async function debugSharePoint() {\n  console.log('=== SHAREPOINT DEBUG START ===');\n  \n  try {\n    // Get all lists\n    const lists = await sharePointService.getLists();\n    console.log('All lists:', lists.map(l => ({ \n      id: l.id, \n      name: l.name, \n      displayName: l.displayName \n    })));\n\n    // Find Tasks list\n    const tasksList = lists.find(l => l.displayName === 'Tasks' || l.name === 'Tasks');\n    \n    if (!tasksList) {\n      console.log('Target list not found');\n      console.log('=== SHAREPOINT DEBUG END ===');\n      return;\n    }\n\n    console.log('Using Tasks list:', {\n      id: tasksList.id,\n      name: tasksList.name,\n      displayName: tasksList.displayName\n    });\n\n    // Get columns\n    const columns = await sharePointService.getListColumns(tasksList.id);\n    console.log('Tasks list columns:');\n    columns.forEach(col => {\n      console.log(`  - ${col.displayName} (${col.name}) [${col.columnGroup}]`);\n    });\n\n    // Get existing items\n    const items = await sharePointService.getListItems(tasksList.id);\n    console.log('Existing items:', items.length);\n    \n    // Log sample item details\n    if (items.length > 0) {\n      console.log('Sample item fields:', Object.keys(items[0].fields));\n      console.log('Full sample item:', items[0]);\n      \n      // Log ResponsibleParty structure in detail\n      const rpField = items[0].fields.ResponsibleParty;\n      console.log('ResponsibleParty field structure:', rpField);\n      console.log('ResponsibleParty type:', typeof rpField, Array.isArray(rpField) ? 'Array' : 'Not Array');\n      if (rpField) {\n        console.log('ResponsibleParty JSON:', JSON.stringify(rpField, null, 2));\n      }\n    }\n\n  } catch (error) {\n    console.error('Debug SharePoint error:', error);\n  }\n  \n  console.log('=== SHAREPOINT DEBUG END ===');\n}\n"],"mappings":"AAAA,OAASA,iBAAiB,KAAQ,gBAAgB,CAElD,MAAO,eAAe,CAAAC,eAAeA,CAAA,CAAG,CACtCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAE7C,GAAI,CACF;AACA,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAJ,iBAAiB,CAACK,QAAQ,CAAC,CAAC,CAChDH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEC,KAAK,CAACE,GAAG,CAACC,CAAC,GAAK,CACxCC,EAAE,CAAED,CAAC,CAACC,EAAE,CACRC,IAAI,CAAEF,CAAC,CAACE,IAAI,CACZC,WAAW,CAAEH,CAAC,CAACG,WACjB,CAAC,CAAC,CAAC,CAAC,CAEJ;AACA,KAAM,CAAAC,SAAS,CAAGP,KAAK,CAACQ,IAAI,CAACL,CAAC,EAAIA,CAAC,CAACG,WAAW,GAAK,OAAO,EAAIH,CAAC,CAACE,IAAI,GAAK,OAAO,CAAC,CAElF,GAAI,CAACE,SAAS,CAAE,CACdT,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACpCD,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3C,OACF,CAEAD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE,CAC/BK,EAAE,CAAEG,SAAS,CAACH,EAAE,CAChBC,IAAI,CAAEE,SAAS,CAACF,IAAI,CACpBC,WAAW,CAAEC,SAAS,CAACD,WACzB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAG,OAAO,CAAG,KAAM,CAAAb,iBAAiB,CAACc,cAAc,CAACH,SAAS,CAACH,EAAE,CAAC,CACpEN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClCU,OAAO,CAACE,OAAO,CAACC,GAAG,EAAI,CACrBd,OAAO,CAACC,GAAG,QAAAc,MAAA,CAAQD,GAAG,CAACN,WAAW,OAAAO,MAAA,CAAKD,GAAG,CAACP,IAAI,QAAAQ,MAAA,CAAMD,GAAG,CAACE,WAAW,KAAG,CAAC,CAC1E,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAnB,iBAAiB,CAACoB,YAAY,CAACT,SAAS,CAACH,EAAE,CAAC,CAChEN,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEgB,KAAK,CAACE,MAAM,CAAC,CAE5C;AACA,GAAIF,KAAK,CAACE,MAAM,CAAG,CAAC,CAAE,CACpBnB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEmB,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC,CAACK,MAAM,CAAC,CAAC,CAChEtB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEgB,KAAK,CAAC,CAAC,CAAC,CAAC,CAE1C;AACA,KAAM,CAAAM,OAAO,CAAGN,KAAK,CAAC,CAAC,CAAC,CAACK,MAAM,CAACE,gBAAgB,CAChDxB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEsB,OAAO,CAAC,CACzDvB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAE,MAAO,CAAAsB,OAAO,CAAEE,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,CAAG,OAAO,CAAG,WAAW,CAAC,CACrG,GAAIA,OAAO,CAAE,CACXvB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAE0B,IAAI,CAACC,SAAS,CAACL,OAAO,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CACzE,CACF,CAEF,CAAE,MAAOM,KAAK,CAAE,CACd7B,OAAO,CAAC6B,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CAEA7B,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}