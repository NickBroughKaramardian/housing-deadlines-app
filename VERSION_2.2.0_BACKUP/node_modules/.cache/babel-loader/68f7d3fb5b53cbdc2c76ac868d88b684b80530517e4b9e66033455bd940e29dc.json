{"ast":null,"code":"/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @class\n * Class that handles BatchResponseContent\n */\nexport class BatchResponseContent {\n  /**\n   * @public\n   * @constructor\n   * Creates the BatchResponseContent instance\n   * @param {BatchResponseBody} response - The response body returned for batch request from server\n   * @returns An instance of a BatchResponseContent\n   */\n  constructor(response) {\n    this.responses = new Map();\n    this.update(response);\n  }\n  /**\n   * @private\n   * Creates native Response object from the json representation of it.\n   * @param {KeyValuePairObject} responseJSON - The response json value\n   * @returns The Response Object instance\n   */\n  createResponseObject(responseJSON) {\n    const body = responseJSON.body;\n    const options = {};\n    options.status = responseJSON.status;\n    if (responseJSON.statusText !== undefined) {\n      options.statusText = responseJSON.statusText;\n    }\n    options.headers = responseJSON.headers;\n    if (options.headers !== undefined && options.headers[\"Content-Type\"] !== undefined) {\n      if (options.headers[\"Content-Type\"].split(\";\")[0] === \"application/json\") {\n        const bodyString = JSON.stringify(body);\n        return new Response(bodyString, options);\n      }\n    }\n    return new Response(body, options);\n  }\n  /**\n   * @public\n   * Updates the Batch response content instance with given responses.\n   * @param {BatchResponseBody} response - The response json representing batch response message\n   * @returns Nothing\n   */\n  update(response) {\n    this.nextLink = response[\"@odata.nextLink\"];\n    const responses = response.responses;\n    for (let i = 0, l = responses.length; i < l; i++) {\n      this.responses.set(responses[i].id, this.createResponseObject(responses[i]));\n    }\n  }\n  /**\n   * @public\n   * To get the response of a request for a given request id\n   * @param {string} requestId - The request id value\n   * @returns The Response object instance for the particular request\n   */\n  getResponseById(requestId) {\n    return this.responses.get(requestId);\n  }\n  /**\n   * @public\n   * To get all the responses of the batch request\n   * @returns The Map of id and Response objects\n   */\n  getResponses() {\n    return this.responses;\n  }\n  /**\n   * @public\n   * To get the iterator for the responses\n   * @returns The Iterable generator for the response objects\n   */\n  *getResponsesIterator() {\n    const iterator = this.responses.entries();\n    let cur = iterator.next();\n    while (!cur.done) {\n      yield cur.value;\n      cur = iterator.next();\n    }\n  }\n}","map":{"version":3,"names":["BatchResponseContent","constructor","response","responses","Map","update","createResponseObject","responseJSON","body","options","status","statusText","undefined","headers","split","bodyString","JSON","stringify","Response","nextLink","i","l","length","set","id","getResponseById","requestId","get","getResponses","getResponsesIterator","iterator","entries","cur","next","done","value"],"sources":["/Users/nic/housing-deadlines-app/node_modules/@microsoft/microsoft-graph-client/src/content/BatchResponseContent.ts"],"sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * @module BatchResponseContent\n */\n\n/**\n * @interface\n * Signature represents key value pair object\n */\ninterface KeyValuePairObject {\n\t[key: string]: any;\n}\n\n/**\n * @interface\n * Signature representing Batch response body\n * @property {KeyValuePairObject[]} responses - An array of key value pair representing response object for every request\n * @property {string} [@odata.nextLink] - The nextLink value to get next set of responses in case of asynchronous batch requests\n */\nexport interface BatchResponseBody {\n\tresponses: KeyValuePairObject[];\n\t\"@odata.nextLink\"?: string;\n}\n\n/**\n * @class\n * Class that handles BatchResponseContent\n */\nexport class BatchResponseContent {\n\t/**\n\t * To hold the responses\n\t */\n\tprivate responses: Map<string, Response>;\n\n\t/**\n\t * Holds the next link url\n\t */\n\tprivate nextLink: string;\n\n\t/**\n\t * @public\n\t * @constructor\n\t * Creates the BatchResponseContent instance\n\t * @param {BatchResponseBody} response - The response body returned for batch request from server\n\t * @returns An instance of a BatchResponseContent\n\t */\n\tpublic constructor(response: BatchResponseBody) {\n\t\tthis.responses = new Map();\n\t\tthis.update(response);\n\t}\n\n\t/**\n\t * @private\n\t * Creates native Response object from the json representation of it.\n\t * @param {KeyValuePairObject} responseJSON - The response json value\n\t * @returns The Response Object instance\n\t */\n\tprivate createResponseObject(responseJSON: KeyValuePairObject): Response {\n\t\tconst body = responseJSON.body;\n\t\tconst options: KeyValuePairObject = {};\n\t\toptions.status = responseJSON.status;\n\t\tif (responseJSON.statusText !== undefined) {\n\t\t\toptions.statusText = responseJSON.statusText;\n\t\t}\n\t\toptions.headers = responseJSON.headers;\n\t\tif (options.headers !== undefined && options.headers[\"Content-Type\"] !== undefined) {\n\t\t\tif (options.headers[\"Content-Type\"].split(\";\")[0] === \"application/json\") {\n\t\t\t\tconst bodyString = JSON.stringify(body);\n\t\t\t\treturn new Response(bodyString, options);\n\t\t\t}\n\t\t}\n\t\treturn new Response(body, options);\n\t}\n\n\t/**\n\t * @public\n\t * Updates the Batch response content instance with given responses.\n\t * @param {BatchResponseBody} response - The response json representing batch response message\n\t * @returns Nothing\n\t */\n\tpublic update(response: BatchResponseBody): void {\n\t\tthis.nextLink = response[\"@odata.nextLink\"];\n\t\tconst responses = response.responses;\n\t\tfor (let i = 0, l = responses.length; i < l; i++) {\n\t\t\tthis.responses.set(responses[i].id, this.createResponseObject(responses[i]));\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * To get the response of a request for a given request id\n\t * @param {string} requestId - The request id value\n\t * @returns The Response object instance for the particular request\n\t */\n\tpublic getResponseById(requestId: string): Response {\n\t\treturn this.responses.get(requestId);\n\t}\n\n\t/**\n\t * @public\n\t * To get all the responses of the batch request\n\t * @returns The Map of id and Response objects\n\t */\n\tpublic getResponses(): Map<string, Response> {\n\t\treturn this.responses;\n\t}\n\n\t/**\n\t * @public\n\t * To get the iterator for the responses\n\t * @returns The Iterable generator for the response objects\n\t */\n\tpublic *getResponsesIterator(): IterableIterator<[string, Response]> {\n\t\tconst iterator = this.responses.entries();\n\t\tlet cur = iterator.next();\n\t\twhile (!cur.done) {\n\t\t\tyield cur.value;\n\t\t\tcur = iterator.next();\n\t\t}\n\t}\n}\n"],"mappings":"AAAA;;;;;;AA8BA;;;;AAIA,OAAM,MAAOA,oBAAoB;EAWhC;;;;;;;EAOAC,YAAmBC,QAA2B;IAC7C,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,EAAE;IAC1B,IAAI,CAACC,MAAM,CAACH,QAAQ,CAAC;EACtB;EAEA;;;;;;EAMQI,oBAAoBA,CAACC,YAAgC;IAC5D,MAAMC,IAAI,GAAGD,YAAY,CAACC,IAAI;IAC9B,MAAMC,OAAO,GAAuB,EAAE;IACtCA,OAAO,CAACC,MAAM,GAAGH,YAAY,CAACG,MAAM;IACpC,IAAIH,YAAY,CAACI,UAAU,KAAKC,SAAS,EAAE;MAC1CH,OAAO,CAACE,UAAU,GAAGJ,YAAY,CAACI,UAAU;;IAE7CF,OAAO,CAACI,OAAO,GAAGN,YAAY,CAACM,OAAO;IACtC,IAAIJ,OAAO,CAACI,OAAO,KAAKD,SAAS,IAAIH,OAAO,CAACI,OAAO,CAAC,cAAc,CAAC,KAAKD,SAAS,EAAE;MACnF,IAAIH,OAAO,CAACI,OAAO,CAAC,cAAc,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,kBAAkB,EAAE;QACzE,MAAMC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC;QACvC,OAAO,IAAIU,QAAQ,CAACH,UAAU,EAAEN,OAAO,CAAC;;;IAG1C,OAAO,IAAIS,QAAQ,CAACV,IAAI,EAAEC,OAAO,CAAC;EACnC;EAEA;;;;;;EAMOJ,MAAMA,CAACH,QAA2B;IACxC,IAAI,CAACiB,QAAQ,GAAGjB,QAAQ,CAAC,iBAAiB,CAAC;IAC3C,MAAMC,SAAS,GAAGD,QAAQ,CAACC,SAAS;IACpC,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGlB,SAAS,CAACmB,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjD,IAAI,CAACjB,SAAS,CAACoB,GAAG,CAACpB,SAAS,CAACiB,CAAC,CAAC,CAACI,EAAE,EAAE,IAAI,CAAClB,oBAAoB,CAACH,SAAS,CAACiB,CAAC,CAAC,CAAC,CAAC;;EAE9E;EAEA;;;;;;EAMOK,eAAeA,CAACC,SAAiB;IACvC,OAAO,IAAI,CAACvB,SAAS,CAACwB,GAAG,CAACD,SAAS,CAAC;EACrC;EAEA;;;;;EAKOE,YAAYA,CAAA;IAClB,OAAO,IAAI,CAACzB,SAAS;EACtB;EAEA;;;;;EAKO,CAAC0B,oBAAoBA,CAAA;IAC3B,MAAMC,QAAQ,GAAG,IAAI,CAAC3B,SAAS,CAAC4B,OAAO,EAAE;IACzC,IAAIC,GAAG,GAAGF,QAAQ,CAACG,IAAI,EAAE;IACzB,OAAO,CAACD,GAAG,CAACE,IAAI,EAAE;MACjB,MAAMF,GAAG,CAACG,KAAK;MACfH,GAAG,GAAGF,QAAQ,CAACG,IAAI,EAAE;;EAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}