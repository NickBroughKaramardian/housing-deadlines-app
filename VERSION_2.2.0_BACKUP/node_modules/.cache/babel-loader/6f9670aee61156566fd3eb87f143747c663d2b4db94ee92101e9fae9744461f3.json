{"ast":null,"code":"/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @module CustomAuthenticationProvider\n */\nimport { GraphClientError } from \"./GraphClientError\";\n/**\n * @class\n * Class representing CustomAuthenticationProvider\n * @extends AuthenticationProvider\n */\nexport class CustomAuthenticationProvider {\n  /**\n   * @public\n   * @constructor\n   * Creates an instance of CustomAuthenticationProvider\n   * @param {AuthProviderCallback} provider - An authProvider function\n   * @returns An instance of CustomAuthenticationProvider\n   */\n  constructor(provider) {\n    this.provider = provider;\n  }\n  /**\n   * @public\n   * @async\n   * To get the access token\n   * @returns The promise that resolves to an access token\n   */\n  getAccessToken() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.provider((error, accessToken) => __awaiter(this, void 0, void 0, function* () {\n          if (accessToken) {\n            resolve(accessToken);\n          } else {\n            if (!error) {\n              const invalidTokenMessage = \"Access token is undefined or empty.\\\n\t\t\t\t\t\tPlease provide a valid token.\\\n\t\t\t\t\t\tFor more help - https://github.com/microsoftgraph/msgraph-sdk-javascript/blob/dev/docs/CustomAuthenticationProvider.md\";\n              error = new GraphClientError(invalidTokenMessage);\n            }\n            const err = yield GraphClientError.setGraphClientError(error);\n            reject(err);\n          }\n        }));\n      });\n    });\n  }\n}","map":{"version":3,"names":["GraphClientError","CustomAuthenticationProvider","constructor","provider","getAccessToken","Promise","resolve","reject","error","accessToken","__awaiter","invalidTokenMessage","err","setGraphClientError"],"sources":["/Users/nic/housing-deadlines-app/node_modules/@microsoft/microsoft-graph-client/src/CustomAuthenticationProvider.ts"],"sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * @module CustomAuthenticationProvider\n */\n\nimport { GraphClientError } from \"./GraphClientError\";\nimport { AuthenticationProvider } from \"./IAuthenticationProvider\";\nimport { AuthProvider } from \"./IAuthProvider\";\n\n/**\n * @class\n * Class representing CustomAuthenticationProvider\n * @extends AuthenticationProvider\n */\nexport class CustomAuthenticationProvider implements AuthenticationProvider {\n\t/**\n\t * @private\n\t * A member to hold authProvider callback\n\t */\n\tprivate provider: AuthProvider;\n\n\t/**\n\t * @public\n\t * @constructor\n\t * Creates an instance of CustomAuthenticationProvider\n\t * @param {AuthProviderCallback} provider - An authProvider function\n\t * @returns An instance of CustomAuthenticationProvider\n\t */\n\tpublic constructor(provider: AuthProvider) {\n\t\tthis.provider = provider;\n\t}\n\n\t/**\n\t * @public\n\t * @async\n\t * To get the access token\n\t * @returns The promise that resolves to an access token\n\t */\n\tpublic async getAccessToken(): Promise<any> {\n\t\treturn new Promise((resolve: (accessToken: string) => void, reject: (error: any) => void) => {\n\t\t\tthis.provider(async (error: any, accessToken: string | null) => {\n\t\t\t\tif (accessToken) {\n\t\t\t\t\tresolve(accessToken);\n\t\t\t\t} else {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tconst invalidTokenMessage = \"Access token is undefined or empty.\\\n\t\t\t\t\t\tPlease provide a valid token.\\\n\t\t\t\t\t\tFor more help - https://github.com/microsoftgraph/msgraph-sdk-javascript/blob/dev/docs/CustomAuthenticationProvider.md\";\n\t\t\t\t\t\terror = new GraphClientError(invalidTokenMessage);\n\t\t\t\t\t}\n\t\t\t\t\tconst err = await GraphClientError.setGraphClientError(error);\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n"],"mappings":"AAAA;;;;;;;AAOA;;;AAIA,SAASA,gBAAgB,QAAQ,oBAAoB;AAIrD;;;;;AAKA,OAAM,MAAOC,4BAA4B;EAOxC;;;;;;;EAOAC,YAAmBC,QAAsB;IACxC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EACzB;EAEA;;;;;;EAMaC,cAAcA,CAAA;;MAC1B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAsC,EAAEC,MAA4B,KAAI;QAC3F,IAAI,CAACJ,QAAQ,CAAC,CAAOK,KAAU,EAAEC,WAA0B,KAAIC,SAAA;UAC9D,IAAID,WAAW,EAAE;YAChBH,OAAO,CAACG,WAAW,CAAC;WACpB,MAAM;YACN,IAAI,CAACD,KAAK,EAAE;cACX,MAAMG,mBAAmB,GAAG;;6HAE2F;cACvHH,KAAK,GAAG,IAAIR,gBAAgB,CAACW,mBAAmB,CAAC;;YAElD,MAAMC,GAAG,GAAG,MAAMZ,gBAAgB,CAACa,mBAAmB,CAACL,KAAK,CAAC;YAC7DD,MAAM,CAACK,GAAG,CAAC;;QAEb,CAAC,EAAC;MACH,CAAC,CAAC;IACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}