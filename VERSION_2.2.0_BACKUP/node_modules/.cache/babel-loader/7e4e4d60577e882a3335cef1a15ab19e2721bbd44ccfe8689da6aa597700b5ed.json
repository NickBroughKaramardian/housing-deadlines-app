{"ast":null,"code":"import _objectSpread from\"/Users/nic/housing-deadlines-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{sharedDataService}from'./sharedDataService';import{parse,isValid,isThisWeek,format,differenceInDays,startOfYear,endOfYear,isWithinInterval}from'date-fns';import{microsoftDataService}from'./microsoftDataService';import{useAuth,getDepartmentFromResponsibleParty}from'./Auth';import{globalTaskStore}from'./globalTaskStore';import{CheckCircleIcon,ClockIcon,ExclamationTriangleIcon,CalendarDaysIcon,ChartBarIcon,BuildingOfficeIcon,FolderIcon}from'@heroicons/react/24/outline';import{CheckCircleIcon as CheckCircleIconSolid}from'@heroicons/react/24/solid';import TaskCard from'./TaskCard';import recurringTaskGenerator from'./recurringTaskGenerator';import taskUpdateService from'./taskUpdateService';// Department constants (matching the 4 departments you specified)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DEPARTMENTS={DEVELOPMENT:'development',ACCOUNTING:'accounting',COMPLIANCE:'compliance',MANAGEMENT:'management'};const DEPARTMENT_NAMES={[DEPARTMENTS.DEVELOPMENT]:'Development',[DEPARTMENTS.ACCOUNTING]:'Accounting',[DEPARTMENTS.COMPLIANCE]:'Compliance',[DEPARTMENTS.MANAGEMENT]:'Management'};const DEPARTMENT_COLORS={[DEPARTMENTS.DEVELOPMENT]:'bg-blue-500',[DEPARTMENTS.ACCOUNTING]:'bg-green-500',[DEPARTMENTS.COMPLIANCE]:'bg-purple-500',[DEPARTMENTS.MANAGEMENT]:'bg-orange-500'};const DEPARTMENT_TEXT_COLORS={[DEPARTMENTS.DEVELOPMENT]:'text-blue-500',[DEPARTMENTS.ACCOUNTING]:'text-green-500',[DEPARTMENTS.COMPLIANCE]:'text-purple-500',[DEPARTMENTS.MANAGEMENT]:'text-orange-500'};function Dashboard(_ref){let{tasks:propTasks,users,departmentMappings,onToggleCompleted,onTaskLinkClick,aliases=[]}=_ref;const[tasks,setTasks]=useState([]);const[loading,setLoading]=useState(true);const[updating,setUpdating]=useState(false);const[departmentProgressKey,setDepartmentProgressKey]=useState(0);// Toggle task completion - uses centralized update service\nconst toggleTaskCompletion=async(taskId,currentStatus)=>{const newStatus=!currentStatus;await taskUpdateService.updateTaskField(taskId,{Completed_x003f_:newStatus},()=>setUpdating(true),// onStart: show loading\n()=>{// onComplete: hide loading and refresh local state\nsetUpdating(false);const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);});};const{userProfile,hasPermission,ROLES,isUserInDepartment,getUsersByDepartment}=useAuth();// Load tasks and instances from global store\nuseEffect(()=>{const loadTasks=async()=>{try{setLoading(true);// Subscribe to global task store updates\nconst unsubscribe=globalTaskStore.subscribe(()=>{const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);console.log('Dashboard: Updated from global store -',allTasks.length,'total items');});// Get initial data\nconst allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);console.log('Dashboard: Loaded',allTasks.length,'total items from global store');return unsubscribe;}catch(error){console.error('Dashboard: Error loading tasks:',error);}finally{setLoading(false);}};loadTasks();},[]);// Helper function to parse deadline dates\nfunction parseDeadlineDate(dateStr){if(!dateStr)return null;try{// Parse date string carefully to avoid timezone issues\n// If in yyyy-MM-dd format, parse components directly\nif(typeof dateStr==='string'&&dateStr.includes('-')){const datePart=dateStr.split('T')[0];// Get just the date part\nconst parts=datePart.split('-');if(parts.length===3){const year=parseInt(parts[0],10);const month=parseInt(parts[1],10)-1;// JS months are 0-indexed\nconst day=parseInt(parts[2],10);if(!isNaN(year)&&!isNaN(month)&&!isNaN(day)){// Create date at noon local time to avoid timezone shifts\nreturn new Date(year,month,day,12,0,0);}}}// Fallback to date-fns parsing for other formats\nconst parsed=parse(dateStr,'yyyy-MM-dd',new Date());if(isValid(parsed)){parsed.setHours(12,0,0,0);return parsed;}return null;}catch(_unused){return null;}}// Get current year tasks for progress tracking using correct SharePoint fields\nconst getCurrentYearTasks=()=>{const currentYear=new Date().getFullYear();const yearStart=startOfYear(new Date(currentYear,0,1));const yearEnd=endOfYear(new Date(currentYear,11,31));return tasks.filter(task=>{const deadline=parseDeadlineDate(task.Deadline||task.deadline);return deadline&&isWithinInterval(deadline,{start:yearStart,end:yearEnd});});};const currentYearTasks=getCurrentYearTasks();// Calculate status the same way as Database component\nconst getCalculatedStatus=task=>{// Use the \"Completed?\" field from SharePoint (Yes/No) - field name is Completed_x003f_\nconst isCompleted=task.Completed_x003f_===true||task.Completed_x003f_==='Yes'||task.Completed_x003f_==='yes'||task.Completed===true||task.Completed==='Yes'||task.Completed==='yes';if(isCompleted)return'Completed';// Check if deadline is overdue\nconst deadline=parseDeadlineDate(task.Deadline||task.deadline);if(deadline&&deadline<new Date())return'Overdue';return'Active';};// Calculate top metrics using correct SharePoint fields - CURRENT YEAR ONLY\nconst getTopMetrics=()=>{// Only count current year tasks\nconst totalTasks=currentYearTasks.length;// Use the \"Completed?\" field from SharePoint (Yes/No) - field name is Completed_x003f_\nconst completedTasks=currentYearTasks.filter(task=>task.Completed_x003f_===true||task.Completed_x003f_==='Yes'||task.Completed_x003f_==='yes'||task.Completed===true||task.Completed==='Yes'||task.Completed==='yes').length;// Count urgent tasks in current year\nconst urgentTasks=currentYearTasks.filter(task=>task.Priority==='Urgent').length;const tasksThisWeek=tasks.filter(task=>{const deadline=parseDeadlineDate(task.Deadline||task.deadline);return deadline&&isThisWeek(deadline);}).length;// Count overdue tasks using calculated status (from all tasks, not just current year)\nconst overdueTasks=tasks.filter(task=>getCalculatedStatus(task)==='Overdue').length;return{total:totalTasks,completed:completedTasks,urgent:urgentTasks,dueThisWeek:tasksThisWeek,overdue:overdueTasks};};const metrics=getTopMetrics();// Get tasks due this week with details using correct SharePoint fields\nconst getTasksThisWeek=()=>{return tasks.filter(task=>{const deadline=parseDeadlineDate(task.Deadline||task.deadline);return deadline&&isThisWeek(deadline);}).map(task=>{const deadline=parseDeadlineDate(task.Deadline||task.deadline);// Create today's date at noon to match our deadline parsing\nconst today=new Date();const todayAtNoon=new Date(today.getFullYear(),today.getMonth(),today.getDate(),12,0,0);// Normalize both dates to start of day for accurate day difference calculation\nconst deadlineStartOfDay=deadline?new Date(deadline.getFullYear(),deadline.getMonth(),deadline.getDate()):null;const todayStartOfDay=new Date(today.getFullYear(),today.getMonth(),today.getDate());const daysUntil=deadlineStartOfDay?differenceInDays(deadlineStartOfDay,todayStartOfDay):0;// Debug logging for date calculations\nconsole.log('getTasksThisWeek: Task date calculation:',{taskName:task.Task,deadline:deadline,today:today,deadlineStartOfDay:deadlineStartOfDay,todayStartOfDay:todayStartOfDay,daysUntil:daysUntil,deadlineFormatted:deadline?format(deadline,'yyyy-MM-dd'):'null',todayFormatted:format(today,'yyyy-MM-dd')});// Use the \"Completed?\" field from SharePoint - field name is Completed_x003f_\nconst isCompleted=task.Completed_x003f_===true||task.Completed_x003f_==='Yes'||task.Completed_x003f_==='yes'||task.Completed===true||task.Completed==='Yes'||task.Completed==='yes';return _objectSpread(_objectSpread({},task),{},{deadline,daysUntil,isCompleted});}).sort((a,b)=>{if(a.isCompleted!==b.isCompleted){return a.isCompleted?1:-1;// Incomplete tasks first\n}return a.daysUntil-b.daysUntil;// Then by days until deadline\n});};const tasksThisWeek=getTasksThisWeek();// Helper function to convert responsible party emails to names\nconst getResponsiblePartyNames=responsibleParty=>{console.log('getResponsiblePartyNames: Input responsibleParty:',responsibleParty);console.log('getResponsiblePartyNames: Available users:',users);console.log('getResponsiblePartyNames: User details:',users.map(u=>({id:u.id,email:u.email,Email:u.Email,displayName:u.displayName,DisplayName:u.DisplayName,mail:u.mail,userPrincipalName:u.userPrincipalName})));// Log each user individually for better visibility\nusers.forEach((user,index)=>{console.log(\"getResponsiblePartyNames: User \".concat(index,\":\"),{id:user.id,email:user.email,Email:user.Email,displayName:user.displayName,DisplayName:user.DisplayName,mail:user.mail,userPrincipalName:user.userPrincipalName,allKeys:Object.keys(user)});});if(!responsibleParty||responsibleParty.trim()===''){return'Unassigned';}// Split by semicolon to handle multiple responsible parties\nconst emailStrings=responsibleParty.split(';').map(s=>s.trim()).filter(s=>s);console.log('getResponsiblePartyNames: Split emailStrings:',emailStrings);const names=emailStrings.map(emailOrName=>{console.log('getResponsiblePartyNames: Processing:',emailOrName);// Try to find user by email first (using the correct field names from Microsoft Graph)\nconst userByEmail=users.find(u=>{var _u$mail,_u$userPrincipalName,_u$email,_u$Email;return((_u$mail=u.mail)===null||_u$mail===void 0?void 0:_u$mail.toLowerCase())===emailOrName.toLowerCase()||((_u$userPrincipalName=u.userPrincipalName)===null||_u$userPrincipalName===void 0?void 0:_u$userPrincipalName.toLowerCase())===emailOrName.toLowerCase()||((_u$email=u.email)===null||_u$email===void 0?void 0:_u$email.toLowerCase())===emailOrName.toLowerCase()||((_u$Email=u.Email)===null||_u$Email===void 0?void 0:_u$Email.toLowerCase())===emailOrName.toLowerCase();});if(userByEmail){console.log('getResponsiblePartyNames: Found user by email:',userByEmail.displayName||userByEmail.mail);return userByEmail.displayName||userByEmail.DisplayName||userByEmail.mail||userByEmail.email;}// If not found by email, check if it's already a display name\nconst userByName=users.find(u=>{var _u$displayName,_u$DisplayName;return((_u$displayName=u.displayName)===null||_u$displayName===void 0?void 0:_u$displayName.toLowerCase())===emailOrName.toLowerCase()||((_u$DisplayName=u.DisplayName)===null||_u$DisplayName===void 0?void 0:_u$DisplayName.toLowerCase())===emailOrName.toLowerCase();});if(userByName){console.log('getResponsiblePartyNames: Found user by name:',userByName.displayName||userByName.mail);return userByName.displayName||userByName.DisplayName||userByName.mail||userByName.email;}console.log('getResponsiblePartyNames: No user found for:',emailOrName,'Returning as is.');return emailOrName;// Return the original string if no match found\n});console.log('getResponsiblePartyNames: Final names array:',names);return names.join(', ');};// Get department progress for current year based on user assignments\nconst getDepartmentProgress=()=>{const progress={};// Load user assignments from localStorage\nconst USER_ASSIGNMENTS_KEY='user_assignments';let localAssignments={};try{const storedAssignments=localStorage.getItem(USER_ASSIGNMENTS_KEY);console.log('Dashboard: Raw localStorage data:',{key:USER_ASSIGNMENTS_KEY,rawValue:storedAssignments,userAgent:navigator.userAgent});if(storedAssignments){localAssignments=JSON.parse(storedAssignments);}}catch(error){console.error('Dashboard: Error parsing localStorage assignments:',error,{userAgent:navigator.userAgent});}console.log('Dashboard: Department progress calculation:',{currentYearTasks:currentYearTasks.length,users:(users===null||users===void 0?void 0:users.length)||0,usersArray:users,localAssignments:localAssignments,userAgent:navigator.userAgent,timestamp:new Date().toISOString()});// Initialize all departments\nObject.values(DEPARTMENTS).forEach(dept=>{progress[dept]={name:DEPARTMENT_NAMES[dept],completed:0,total:0,percentage:0,color:DEPARTMENT_COLORS[dept],textColor:DEPARTMENT_TEXT_COLORS[dept]};});// If users haven't loaded yet, return empty progress\nif(!users||users.length===0){console.log('Dashboard: Users not loaded yet, returning empty progress',{users:users,usersType:typeof users,usersLength:users===null||users===void 0?void 0:users.length,userAgent:navigator.userAgent});return Object.values(progress);}// If no local assignments found, try to create default assignments for testing\nif(Object.keys(localAssignments).length===0){console.log('Dashboard: No local assignments found, creating default assignments for testing',{userAgent:navigator.userAgent,usersCount:users.length});// Create default assignments for the first user (usually the current user)\nif(users.length>0){const defaultAssignments={[users[0].id]:{departments:['DEVELOPMENT'],// Default to Development\nrole:'ADMIN'}};try{localStorage.setItem(USER_ASSIGNMENTS_KEY,JSON.stringify(defaultAssignments));localAssignments=defaultAssignments;console.log('Dashboard: Created default assignments:',defaultAssignments);}catch(error){console.error('Dashboard: Failed to save default assignments:',error);}}}// Count tasks for each department based on user assignments\nconsole.log('getDepartmentProgress: Starting task processing with:',{currentYearTasksCount:currentYearTasks.length,usersCount:users.length,users:users.map(u=>({id:u.id,email:u.email||u.Email||u.mail||u.userPrincipalName,displayName:u.displayName||u.DisplayName,departments:u.departments,localAssignments:localAssignments[u.id]})),localAssignmentsKeys:Object.keys(localAssignments),userAgent:navigator.userAgent});currentYearTasks.forEach(task=>{const responsibleParty=task.ResponsibleParty||task.responsibleParty||'';console.log('getDepartmentProgress: Processing task:',{taskId:task.id,taskName:task.Task,responsibleParty:responsibleParty,project:task.Project,deadline:task.Deadline,completedField:task.Completed_x003f_,completedField2:task.Completed,allFields:Object.keys(task)});// Find all users assigned to this task (responsible party can contain multiple emails)\nconst assignedUsers=users.filter(user=>{const userEmail=user.email||user.Email||user.mail||user.userPrincipalName||'';const userDisplayName=user.displayName||user.DisplayName||'';// Only match if responsible party is not empty and contains the user's email or display name\nconst matches=responsibleParty&&responsibleParty.trim()!==''&&(responsibleParty.includes(userEmail)||responsibleParty.includes(userDisplayName));if(matches){console.log('getDepartmentProgress: Found matching user:',{userId:user.id,userEmail:userEmail,userDisplayName:userDisplayName,userDepartments:user.departments,responsibleParty:responsibleParty});}return matches;});// Collect all unique departments from all assigned users\nconst taskDepartments=new Set();assignedUsers.forEach(assignedUser=>{const userDepartments=assignedUser.departments||[];userDepartments.forEach(department=>{taskDepartments.add(department);});});console.log('getDepartmentProgress: Task departments (unique):',{taskId:task.id,taskName:task.Task,taskDepartments:Array.from(taskDepartments),assignedUsers:assignedUsers.map(u=>({id:u.id,departments:u.departments}))});// Determine completion status\nconst calculatedStatus=getCalculatedStatus(task);const isCompleted=calculatedStatus==='Completed';console.log('getDepartmentProgress: Task completion analysis:',{taskId:task.id,taskName:task.Task,rawCompleted_x003f_:task.Completed_x003f_,rawCompleted:task.Completed,calculatedStatus:calculatedStatus,isCompleted:isCompleted});// Count this task once for each unique department\ntaskDepartments.forEach(department=>{if(progress[department]){progress[department].total++;if(isCompleted){progress[department].completed++;}console.log('getDepartmentProgress: Added task to department:',{department:department,taskId:task.id,taskName:task.Task,isCompleted:isCompleted,newTotal:progress[department].total,newCompleted:progress[department].completed});}});if(assignedUsers.length===0){console.log('getDepartmentProgress: No user found for task:',{taskId:task.id,taskName:task.Task,responsibleParty:responsibleParty,availableUsers:users.map(u=>({id:u.id,email:u.email||u.Email||u.mail||u.userPrincipalName,displayName:u.displayName||u.DisplayName,departments:u.departments}))});}});console.log('getDepartmentProgress: Final progress before percentage calculation:',progress);// Calculate percentages\nObject.values(DEPARTMENTS).forEach(dept=>{const stats=progress[dept];stats.percentage=stats.total>0?Math.round(stats.completed/stats.total*100):0;});console.log('Dashboard: Final department progress:',progress);return Object.values(progress);};const departmentProgress=React.useMemo(()=>{return getDepartmentProgress();},[users,tasks,departmentProgressKey]);// Recalculate department progress when users load\nReact.useEffect(()=>{console.log('Dashboard: useEffect triggered for users change:',{users:users,usersLength:users===null||users===void 0?void 0:users.length,userAgent:navigator.userAgent,timestamp:new Date().toISOString()});if(users&&users.length>0){console.log('Dashboard: Users loaded, recalculating department progress',{usersCount:users.length,userAgent:navigator.userAgent});// Force re-render by updating a state variable\nsetDepartmentProgressKey(prev=>prev+1);}else{console.log('Dashboard: Users not ready yet, will retry',{users:users,userAgent:navigator.userAgent});}},[users]);// Get project progress for current year using correct SharePoint fields\nconst getProjectProgress=()=>{const projects={};currentYearTasks.forEach(task=>{const projectName=task.Project||task.projectName||task.project||'Unassigned';if(!projects[projectName]){projects[projectName]={completed:0,total:0};}projects[projectName].total++;// Use the \"Completed?\" field from SharePoint - field name is Completed_x003f_\nif(task.Completed_x003f_===true||task.Completed_x003f_==='Yes'||task.Completed_x003f_==='yes'||task.Completed===true||task.Completed==='Yes'||task.Completed==='yes'){projects[projectName].completed++;}});return Object.entries(projects).map(_ref2=>{let[name,data]=_ref2;return{name,completed:data.completed,total:data.total,percentage:data.total>0?Math.round(data.completed/data.total*100):0};}).sort((a,b)=>b.total-a.total)// Sort by total tasks descending\n.slice(0,8);// Show top 8 projects\n};const projectProgress=getProjectProgress();// Circular progress component\nconst CircularProgress=_ref3=>{let{percentage,size=120,strokeWidth=8,color='text-blue-500'}=_ref3;const radius=(size-strokeWidth)/2;const circumference=radius*2*Math.PI;const strokeDasharray=circumference;// Ensure minimum visibility by showing at least 2% of the circle\nconst adjustedPercentage=Math.max(percentage,2);const strokeDashoffset=circumference-adjustedPercentage/100*circumference;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative inline-flex items-center justify-center\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:size,height:size,className:\"transform -rotate-90\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:size/2,cy:size/2,r:radius,stroke:\"currentColor\",strokeWidth:strokeWidth,fill:\"transparent\",className:\"text-gray-200 dark:text-gray-700\"}),/*#__PURE__*/_jsx(\"circle\",{cx:size/2,cy:size/2,r:radius,stroke:\"currentColor\",strokeWidth:strokeWidth,fill:\"transparent\",strokeDasharray:strokeDasharray,strokeDashoffset:strokeDashoffset,className:\"\".concat(color,\" transition-all duration-500 ease-in-out\"),strokeLinecap:\"round\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:[percentage,\"%\"]})})]});};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Loading dashboard...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6 pb-16 relative\",children:[updating&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 flex flex-col items-center gap-4 border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-4 border-blue-200 border-t-blue-600\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Updating...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-1\",children:\"Syncing with database\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 dark:text-white\",children:\"Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 dark:text-gray-400 mt-1\",children:[\"Welcome back, \",(userProfile===null||userProfile===void 0?void 0:userProfile.displayName)||'User',\"! Here's your project overview.\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:format(new Date(),'EEEE, MMMM do, yyyy')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600 dark:text-gray-400\",children:\"Total Tasks\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-gray-900 dark:text-white mt-2\",children:metrics.total}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:\"This year\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-blue-100 dark:bg-blue-900/30 rounded-full\",children:/*#__PURE__*/_jsx(ChartBarIcon,{className:\"w-8 h-8 text-blue-600 dark:text-blue-400\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600 dark:text-gray-400\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-green-600 dark:text-green-400 mt-2\",children:metrics.completed}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:\"This year\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:[metrics.total>0?Math.round(metrics.completed/metrics.total*100):0,\"% completion rate\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-green-100 dark:bg-green-900/30 rounded-full\",children:/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"w-8 h-8 text-green-600 dark:text-green-400\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600 dark:text-gray-400\",children:\"Urgent\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-orange-600 dark:text-orange-400 mt-2\",children:metrics.urgent}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:\"This year\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-orange-100 dark:bg-orange-900/30 rounded-full\",children:/*#__PURE__*/_jsx(ExclamationTriangleIcon,{className:\"w-8 h-8 text-orange-600 dark:text-orange-400\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600 dark:text-gray-400\",children:\"Due This Week\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-yellow-600 dark:text-yellow-400 mt-2\",children:metrics.dueThisWeek}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:\"Deadlines approaching\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-yellow-100 dark:bg-yellow-900/30 rounded-full\",children:/*#__PURE__*/_jsx(CalendarDaysIcon,{className:\"w-8 h-8 text-yellow-600 dark:text-yellow-400\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600 dark:text-gray-400\",children:\"Overdue\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-red-600 dark:text-red-400 mt-2\",children:metrics.overdue}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:\"Need attention\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-red-100 dark:bg-red-900/30 rounded-full\",children:/*#__PURE__*/_jsx(ExclamationTriangleIcon,{className:\"w-8 h-8 text-red-600 dark:text-red-400\"})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-2 bg-yellow-100 dark:bg-yellow-900/30 rounded-lg\",children:/*#__PURE__*/_jsx(CalendarDaysIcon,{className:\"w-6 h-6 text-yellow-600 dark:text-yellow-400\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Deadlines This Week\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:[tasksThisWeek.length,\" tasks due\"]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:tasksThisWeek.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",children:tasksThisWeek.map(task=>/*#__PURE__*/_jsx(TaskCard,{task:task,showCompletion:true,onToggleCompletion:toggleTaskCompletion,users:users},task.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(CalendarDaysIcon,{className:\"w-12 h-12 text-gray-400 dark:text-gray-500 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 dark:text-gray-400\",children:\"No deadlines this week\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 dark:text-gray-500 mt-1\",children:\"You're all caught up!\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg\",children:/*#__PURE__*/_jsx(BuildingOfficeIcon,{className:\"w-6 h-6 text-blue-600 dark:text-blue-400\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Department Progress\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Current year completion\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 gap-6\",children:departmentProgress.map(dept=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(CircularProgress,{percentage:dept.percentage,size:100,strokeWidth:6,color:dept.textColor}),console.log(\"Department \".concat(dept.name,\" color:\"),dept.color,'textColor:',dept.textColor)]}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 dark:text-white text-sm\",children:dept.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:[dept.completed,\" of \",dept.total,\" tasks\"]})]},dept.name))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-2 bg-purple-100 dark:bg-purple-900/30 rounded-lg\",children:/*#__PURE__*/_jsx(FolderIcon,{className:\"w-6 h-6 text-purple-600 dark:text-purple-400\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Project Progress\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Current year completion\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:projectProgress.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:projectProgress.map(project=>/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 dark:text-white text-sm truncate\",children:project.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-gray-600 dark:text-gray-400\",children:[project.percentage,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full transition-all duration-500 ease-in-out\",style:{width:\"\".concat(project.percentage,\"%\")}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:[project.completed,\" of \",project.total,\" tasks completed\"]})]})},project.name))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(FolderIcon,{className:\"w-12 h-12 text-gray-400 dark:text-gray-500 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 dark:text-gray-400\",children:\"No projects this year\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 dark:text-gray-500 mt-1\",children:\"Start adding tasks to see progress\"})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Year-to-Date Summary\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:[currentYearTasks.length,\" tasks created this year across \",projectProgress.length,\" projects\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl font-bold text-blue-600 dark:text-blue-400\",children:[currentYearTasks.length>0?Math.round(currentYearTasks.filter(task=>task.Completed_x003f_===true||task.Completed_x003f_==='Yes'||task.Completed_x003f_==='yes'||task.Completed===true||task.Completed==='Yes'||task.Completed==='yes').length/currentYearTasks.length*100):0,\"%\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:\"Overall completion\"})]})]})})]})]});}export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","sharedDataService","parse","isValid","isThisWeek","format","differenceInDays","startOfYear","endOfYear","isWithinInterval","microsoftDataService","useAuth","getDepartmentFromResponsibleParty","globalTaskStore","CheckCircleIcon","ClockIcon","ExclamationTriangleIcon","CalendarDaysIcon","ChartBarIcon","BuildingOfficeIcon","FolderIcon","CheckCircleIconSolid","TaskCard","recurringTaskGenerator","taskUpdateService","jsx","_jsx","jsxs","_jsxs","DEPARTMENTS","DEVELOPMENT","ACCOUNTING","COMPLIANCE","MANAGEMENT","DEPARTMENT_NAMES","DEPARTMENT_COLORS","DEPARTMENT_TEXT_COLORS","Dashboard","_ref","tasks","propTasks","users","departmentMappings","onToggleCompleted","onTaskLinkClick","aliases","setTasks","loading","setLoading","updating","setUpdating","departmentProgressKey","setDepartmentProgressKey","toggleTaskCompletion","taskId","currentStatus","newStatus","updateTaskField","Completed_x003f_","allTasks","getAllTasks","userProfile","hasPermission","ROLES","isUserInDepartment","getUsersByDepartment","loadTasks","unsubscribe","subscribe","console","log","length","error","parseDeadlineDate","dateStr","includes","datePart","split","parts","year","parseInt","month","day","isNaN","Date","parsed","setHours","_unused","getCurrentYearTasks","currentYear","getFullYear","yearStart","yearEnd","filter","task","deadline","Deadline","start","end","currentYearTasks","getCalculatedStatus","isCompleted","Completed","getTopMetrics","totalTasks","completedTasks","urgentTasks","Priority","tasksThisWeek","overdueTasks","total","completed","urgent","dueThisWeek","overdue","metrics","getTasksThisWeek","map","today","todayAtNoon","getMonth","getDate","deadlineStartOfDay","todayStartOfDay","daysUntil","taskName","Task","deadlineFormatted","todayFormatted","_objectSpread","sort","a","b","getResponsiblePartyNames","responsibleParty","u","id","email","Email","displayName","DisplayName","mail","userPrincipalName","forEach","user","index","concat","allKeys","Object","keys","trim","emailStrings","s","names","emailOrName","userByEmail","find","_u$mail","_u$userPrincipalName","_u$email","_u$Email","toLowerCase","userByName","_u$displayName","_u$DisplayName","join","getDepartmentProgress","progress","USER_ASSIGNMENTS_KEY","localAssignments","storedAssignments","localStorage","getItem","key","rawValue","userAgent","navigator","JSON","usersArray","timestamp","toISOString","values","dept","name","percentage","color","textColor","usersType","usersLength","usersCount","defaultAssignments","departments","role","setItem","stringify","currentYearTasksCount","localAssignmentsKeys","ResponsibleParty","project","Project","completedField","completedField2","allFields","assignedUsers","userEmail","userDisplayName","matches","userId","userDepartments","taskDepartments","Set","assignedUser","department","add","Array","from","calculatedStatus","rawCompleted_x003f_","rawCompleted","newTotal","newCompleted","availableUsers","stats","Math","round","departmentProgress","useMemo","prev","getProjectProgress","projects","projectName","entries","_ref2","data","slice","projectProgress","CircularProgress","_ref3","size","strokeWidth","radius","circumference","PI","strokeDasharray","adjustedPercentage","max","strokeDashoffset","className","children","width","height","cx","cy","r","stroke","fill","strokeLinecap","showCompletion","onToggleCompletion","style"],"sources":["/Users/nic/housing-deadlines-app/VERSION_2.2.0_BACKUP/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { sharedDataService } from './sharedDataService';\nimport { parse, isValid, isThisWeek, format, differenceInDays, startOfYear, endOfYear, isWithinInterval } from 'date-fns';\nimport { microsoftDataService } from './microsoftDataService';\nimport { useAuth, getDepartmentFromResponsibleParty } from './Auth';\nimport { globalTaskStore } from './globalTaskStore';\nimport { \n  CheckCircleIcon, \n  ClockIcon, \n  ExclamationTriangleIcon, \n  CalendarDaysIcon,\n  ChartBarIcon,\n  BuildingOfficeIcon,\n  FolderIcon\n} from '@heroicons/react/24/outline';\nimport { CheckCircleIcon as CheckCircleIconSolid } from '@heroicons/react/24/solid';\nimport TaskCard from './TaskCard';\nimport recurringTaskGenerator from './recurringTaskGenerator';\nimport taskUpdateService from './taskUpdateService';\n\n// Department constants (matching the 4 departments you specified)\nconst DEPARTMENTS = {\n  DEVELOPMENT: 'development',\n  ACCOUNTING: 'accounting', \n  COMPLIANCE: 'compliance',\n  MANAGEMENT: 'management'\n};\n\nconst DEPARTMENT_NAMES = {\n  [DEPARTMENTS.DEVELOPMENT]: 'Development',\n  [DEPARTMENTS.ACCOUNTING]: 'Accounting',\n  [DEPARTMENTS.COMPLIANCE]: 'Compliance',\n  [DEPARTMENTS.MANAGEMENT]: 'Management'\n};\n\nconst DEPARTMENT_COLORS = {\n  [DEPARTMENTS.DEVELOPMENT]: 'bg-blue-500',\n  [DEPARTMENTS.ACCOUNTING]: 'bg-green-500',\n  [DEPARTMENTS.COMPLIANCE]: 'bg-purple-500',\n  [DEPARTMENTS.MANAGEMENT]: 'bg-orange-500'\n};\n\nconst DEPARTMENT_TEXT_COLORS = {\n  [DEPARTMENTS.DEVELOPMENT]: 'text-blue-500',\n  [DEPARTMENTS.ACCOUNTING]: 'text-green-500',\n  [DEPARTMENTS.COMPLIANCE]: 'text-purple-500',\n  [DEPARTMENTS.MANAGEMENT]: 'text-orange-500'\n};\n\nfunction Dashboard({ tasks: propTasks, users, departmentMappings, onToggleCompleted, onTaskLinkClick, aliases = [] }) {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [departmentProgressKey, setDepartmentProgressKey] = useState(0);\n\n  // Toggle task completion - uses centralized update service\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\n    const newStatus = !currentStatus;\n    \n    await taskUpdateService.updateTaskField(\n      taskId,\n      { Completed_x003f_: newStatus },\n      () => setUpdating(true),  // onStart: show loading\n      () => {                    // onComplete: hide loading and refresh local state\n        setUpdating(false);\n        const allTasks = globalTaskStore.getAllTasks();\n        setTasks(allTasks);\n      }\n    );\n  };\n  const { \n    userProfile, \n    hasPermission, \n    ROLES, \n    isUserInDepartment,\n    getUsersByDepartment \n  } = useAuth();\n\n  // Load tasks and instances from global store\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        setLoading(true);\n        // Subscribe to global task store updates\n        const unsubscribe = globalTaskStore.subscribe(() => {\n          const allTasks = globalTaskStore.getAllTasks();\n          setTasks(allTasks);\n          console.log('Dashboard: Updated from global store -', allTasks.length, 'total items');\n        });\n        \n        // Get initial data\n        const allTasks = globalTaskStore.getAllTasks();\n        setTasks(allTasks);\n        console.log('Dashboard: Loaded', allTasks.length, 'total items from global store');\n        \n        return unsubscribe;\n      } catch (error) {\n        console.error('Dashboard: Error loading tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTasks();\n  }, []);\n\n  // Helper function to parse deadline dates\n  function parseDeadlineDate(dateStr) {\n    if (!dateStr) return null;\n    try {\n      // Parse date string carefully to avoid timezone issues\n      // If in yyyy-MM-dd format, parse components directly\n      if (typeof dateStr === 'string' && dateStr.includes('-')) {\n        const datePart = dateStr.split('T')[0]; // Get just the date part\n        const parts = datePart.split('-');\n        if (parts.length === 3) {\n          const year = parseInt(parts[0], 10);\n          const month = parseInt(parts[1], 10) - 1; // JS months are 0-indexed\n          const day = parseInt(parts[2], 10);\n          \n          if (!isNaN(year) && !isNaN(month) && !isNaN(day)) {\n            // Create date at noon local time to avoid timezone shifts\n            return new Date(year, month, day, 12, 0, 0);\n          }\n        }\n      }\n      \n      // Fallback to date-fns parsing for other formats\n      const parsed = parse(dateStr, 'yyyy-MM-dd', new Date());\n      if (isValid(parsed)) {\n        parsed.setHours(12, 0, 0, 0);\n        return parsed;\n      }\n      return null;\n    } catch {\n      return null;\n    }\n  }\n\n  // Get current year tasks for progress tracking using correct SharePoint fields\n  const getCurrentYearTasks = () => {\n    const currentYear = new Date().getFullYear();\n    const yearStart = startOfYear(new Date(currentYear, 0, 1));\n    const yearEnd = endOfYear(new Date(currentYear, 11, 31));\n    \n    return tasks.filter(task => {\n      const deadline = parseDeadlineDate(task.Deadline || task.deadline);\n      return deadline && isWithinInterval(deadline, { start: yearStart, end: yearEnd });\n    });\n  };\n\n  const currentYearTasks = getCurrentYearTasks();\n\n  // Calculate status the same way as Database component\n  const getCalculatedStatus = (task) => {\n    // Use the \"Completed?\" field from SharePoint (Yes/No) - field name is Completed_x003f_\n    const isCompleted = task.Completed_x003f_ === true || task.Completed_x003f_ === 'Yes' || task.Completed_x003f_ === 'yes' ||\n                        task.Completed === true || task.Completed === 'Yes' || task.Completed === 'yes';\n    if (isCompleted) return 'Completed';\n    \n    // Check if deadline is overdue\n    const deadline = parseDeadlineDate(task.Deadline || task.deadline);\n    if (deadline && deadline < new Date()) return 'Overdue';\n    \n    return 'Active';\n  };\n\n  // Calculate top metrics using correct SharePoint fields - CURRENT YEAR ONLY\n  const getTopMetrics = () => {\n    // Only count current year tasks\n    const totalTasks = currentYearTasks.length;\n    \n    // Use the \"Completed?\" field from SharePoint (Yes/No) - field name is Completed_x003f_\n    const completedTasks = currentYearTasks.filter(task => \n      task.Completed_x003f_ === true || task.Completed_x003f_ === 'Yes' || task.Completed_x003f_ === 'yes' ||\n      task.Completed === true || task.Completed === 'Yes' || task.Completed === 'yes'\n    ).length;\n    \n    // Count urgent tasks in current year\n    const urgentTasks = currentYearTasks.filter(task => \n      task.Priority === 'Urgent'\n    ).length;\n    \n  const tasksThisWeek = tasks.filter(task => {\n      const deadline = parseDeadlineDate(task.Deadline || task.deadline);\n      return deadline && isThisWeek(deadline);\n    }).length;\n\n    // Count overdue tasks using calculated status (from all tasks, not just current year)\n    const overdueTasks = tasks.filter(task => getCalculatedStatus(task) === 'Overdue').length;\n\n    return {\n      total: totalTasks,\n      completed: completedTasks,\n      urgent: urgentTasks,\n      dueThisWeek: tasksThisWeek,\n      overdue: overdueTasks\n    };\n  };\n\n  const metrics = getTopMetrics();\n\n  // Get tasks due this week with details using correct SharePoint fields\n  const getTasksThisWeek = () => {\n    return tasks.filter(task => {\n      const deadline = parseDeadlineDate(task.Deadline || task.deadline);\n    return deadline && isThisWeek(deadline);\n    }).map(task => {\n      const deadline = parseDeadlineDate(task.Deadline || task.deadline);\n      // Create today's date at noon to match our deadline parsing\n      const today = new Date();\n      const todayAtNoon = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 12, 0, 0);\n      // Normalize both dates to start of day for accurate day difference calculation\n      const deadlineStartOfDay = deadline ? new Date(deadline.getFullYear(), deadline.getMonth(), deadline.getDate()) : null;\n      const todayStartOfDay = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n      const daysUntil = deadlineStartOfDay ? differenceInDays(deadlineStartOfDay, todayStartOfDay) : 0;\n      \n      // Debug logging for date calculations\n      console.log('getTasksThisWeek: Task date calculation:', {\n        taskName: task.Task,\n        deadline: deadline,\n        today: today,\n        deadlineStartOfDay: deadlineStartOfDay,\n        todayStartOfDay: todayStartOfDay,\n        daysUntil: daysUntil,\n        deadlineFormatted: deadline ? format(deadline, 'yyyy-MM-dd') : 'null',\n        todayFormatted: format(today, 'yyyy-MM-dd')\n      });\n      \n      // Use the \"Completed?\" field from SharePoint - field name is Completed_x003f_\n      const isCompleted = task.Completed_x003f_ === true || task.Completed_x003f_ === 'Yes' || task.Completed_x003f_ === 'yes' ||\n                          task.Completed === true || task.Completed === 'Yes' || task.Completed === 'yes';\n      \n      return {\n        ...task,\n        deadline,\n        daysUntil,\n        isCompleted\n      };\n    }).sort((a, b) => {\n      if (a.isCompleted !== b.isCompleted) {\n        return a.isCompleted ? 1 : -1; // Incomplete tasks first\n      }\n      return a.daysUntil - b.daysUntil; // Then by days until deadline\n    });\n  };\n\n  const tasksThisWeek = getTasksThisWeek();\n\n  // Helper function to convert responsible party emails to names\n  const getResponsiblePartyNames = (responsibleParty) => {\n    console.log('getResponsiblePartyNames: Input responsibleParty:', responsibleParty);\n    console.log('getResponsiblePartyNames: Available users:', users);\n    console.log('getResponsiblePartyNames: User details:', users.map(u => ({\n      id: u.id,\n      email: u.email,\n      Email: u.Email,\n      displayName: u.displayName,\n      DisplayName: u.DisplayName,\n      mail: u.mail,\n      userPrincipalName: u.userPrincipalName\n    })));\n    \n    // Log each user individually for better visibility\n    users.forEach((user, index) => {\n      console.log(`getResponsiblePartyNames: User ${index}:`, {\n        id: user.id,\n        email: user.email,\n        Email: user.Email,\n        displayName: user.displayName,\n        DisplayName: user.DisplayName,\n        mail: user.mail,\n        userPrincipalName: user.userPrincipalName,\n        allKeys: Object.keys(user)\n      });\n    });\n\n    if (!responsibleParty || responsibleParty.trim() === '') {\n      return 'Unassigned';\n    }\n\n    // Split by semicolon to handle multiple responsible parties\n    const emailStrings = responsibleParty.split(';').map(s => s.trim()).filter(s => s);\n    console.log('getResponsiblePartyNames: Split emailStrings:', emailStrings);\n\n    const names = emailStrings.map(emailOrName => {\n      console.log('getResponsiblePartyNames: Processing:', emailOrName);\n      \n      // Try to find user by email first (using the correct field names from Microsoft Graph)\n      const userByEmail = users.find(u => \n        u.mail?.toLowerCase() === emailOrName.toLowerCase() || \n        u.userPrincipalName?.toLowerCase() === emailOrName.toLowerCase() ||\n        u.email?.toLowerCase() === emailOrName.toLowerCase() || \n        u.Email?.toLowerCase() === emailOrName.toLowerCase()\n      );\n\n      if (userByEmail) {\n        console.log('getResponsiblePartyNames: Found user by email:', userByEmail.displayName || userByEmail.mail);\n        return userByEmail.displayName || userByEmail.DisplayName || userByEmail.mail || userByEmail.email;\n      }\n\n      // If not found by email, check if it's already a display name\n      const userByName = users.find(u => \n        u.displayName?.toLowerCase() === emailOrName.toLowerCase() || \n        u.DisplayName?.toLowerCase() === emailOrName.toLowerCase()\n      );\n\n      if (userByName) {\n        console.log('getResponsiblePartyNames: Found user by name:', userByName.displayName || userByName.mail);\n        return userByName.displayName || userByName.DisplayName || userByName.mail || userByName.email;\n      }\n\n      console.log('getResponsiblePartyNames: No user found for:', emailOrName, 'Returning as is.');\n      return emailOrName; // Return the original string if no match found\n    });\n\n    console.log('getResponsiblePartyNames: Final names array:', names);\n    return names.join(', ');\n  };\n\n  // Get department progress for current year based on user assignments\n  const getDepartmentProgress = () => {\n    const progress = {};\n    \n    // Load user assignments from localStorage\n    const USER_ASSIGNMENTS_KEY = 'user_assignments';\n    let localAssignments = {};\n    \n    try {\n      const storedAssignments = localStorage.getItem(USER_ASSIGNMENTS_KEY);\n      console.log('Dashboard: Raw localStorage data:', {\n        key: USER_ASSIGNMENTS_KEY,\n        rawValue: storedAssignments,\n        userAgent: navigator.userAgent\n      });\n      \n      if (storedAssignments) {\n        localAssignments = JSON.parse(storedAssignments);\n      }\n    } catch (error) {\n      console.error('Dashboard: Error parsing localStorage assignments:', error, {\n        userAgent: navigator.userAgent\n      });\n    }\n    \n    console.log('Dashboard: Department progress calculation:', {\n      currentYearTasks: currentYearTasks.length,\n      users: users?.length || 0,\n      usersArray: users,\n      localAssignments: localAssignments,\n      userAgent: navigator.userAgent,\n      timestamp: new Date().toISOString()\n    });\n    \n    // Initialize all departments\n    Object.values(DEPARTMENTS).forEach(dept => {\n      progress[dept] = {\n        name: DEPARTMENT_NAMES[dept],\n        completed: 0,\n        total: 0,\n        percentage: 0,\n        color: DEPARTMENT_COLORS[dept],\n        textColor: DEPARTMENT_TEXT_COLORS[dept]\n      };\n    });\n    \n    // If users haven't loaded yet, return empty progress\n    if (!users || users.length === 0) {\n      console.log('Dashboard: Users not loaded yet, returning empty progress', {\n        users: users,\n        usersType: typeof users,\n        usersLength: users?.length,\n        userAgent: navigator.userAgent\n      });\n      return Object.values(progress);\n    }\n\n    // If no local assignments found, try to create default assignments for testing\n    if (Object.keys(localAssignments).length === 0) {\n      console.log('Dashboard: No local assignments found, creating default assignments for testing', {\n        userAgent: navigator.userAgent,\n        usersCount: users.length\n      });\n      \n      // Create default assignments for the first user (usually the current user)\n      if (users.length > 0) {\n        const defaultAssignments = {\n          [users[0].id]: {\n            departments: ['DEVELOPMENT'], // Default to Development\n            role: 'ADMIN'\n          }\n        };\n        \n        try {\n          localStorage.setItem(USER_ASSIGNMENTS_KEY, JSON.stringify(defaultAssignments));\n          localAssignments = defaultAssignments;\n          console.log('Dashboard: Created default assignments:', defaultAssignments);\n        } catch (error) {\n          console.error('Dashboard: Failed to save default assignments:', error);\n        }\n      }\n    }\n    \n    // Count tasks for each department based on user assignments\n    console.log('getDepartmentProgress: Starting task processing with:', {\n      currentYearTasksCount: currentYearTasks.length,\n      usersCount: users.length,\n      users: users.map(u => ({ \n        id: u.id, \n        email: u.email || u.Email || u.mail || u.userPrincipalName, \n        displayName: u.displayName || u.DisplayName, \n        departments: u.departments,\n        localAssignments: localAssignments[u.id]\n      })),\n      localAssignmentsKeys: Object.keys(localAssignments),\n      userAgent: navigator.userAgent\n    });\n\n    currentYearTasks.forEach(task => {\n      const responsibleParty = task.ResponsibleParty || task.responsibleParty || '';\n      \n      console.log('getDepartmentProgress: Processing task:', {\n        taskId: task.id,\n        taskName: task.Task,\n        responsibleParty: responsibleParty,\n        project: task.Project,\n        deadline: task.Deadline,\n        completedField: task.Completed_x003f_,\n        completedField2: task.Completed,\n        allFields: Object.keys(task)\n      });\n      \n      // Find all users assigned to this task (responsible party can contain multiple emails)\n      const assignedUsers = users.filter(user => {\n        const userEmail = user.email || user.Email || user.mail || user.userPrincipalName || '';\n        const userDisplayName = user.displayName || user.DisplayName || '';\n        \n        // Only match if responsible party is not empty and contains the user's email or display name\n        const matches = responsibleParty && responsibleParty.trim() !== '' && \n                       (responsibleParty.includes(userEmail) || responsibleParty.includes(userDisplayName));\n        \n        if (matches) {\n          console.log('getDepartmentProgress: Found matching user:', {\n            userId: user.id,\n            userEmail: userEmail,\n            userDisplayName: userDisplayName,\n            userDepartments: user.departments,\n            responsibleParty: responsibleParty\n          });\n        }\n        \n        return matches;\n      });\n      \n      // Collect all unique departments from all assigned users\n      const taskDepartments = new Set();\n      assignedUsers.forEach(assignedUser => {\n        const userDepartments = assignedUser.departments || [];\n        userDepartments.forEach(department => {\n          taskDepartments.add(department);\n        });\n      });\n      \n      console.log('getDepartmentProgress: Task departments (unique):', {\n        taskId: task.id,\n        taskName: task.Task,\n        taskDepartments: Array.from(taskDepartments),\n        assignedUsers: assignedUsers.map(u => ({ id: u.id, departments: u.departments }))\n      });\n      \n      // Determine completion status\n      const calculatedStatus = getCalculatedStatus(task);\n      const isCompleted = calculatedStatus === 'Completed';\n      \n      console.log('getDepartmentProgress: Task completion analysis:', {\n        taskId: task.id,\n        taskName: task.Task,\n        rawCompleted_x003f_: task.Completed_x003f_,\n        rawCompleted: task.Completed,\n        calculatedStatus: calculatedStatus,\n        isCompleted: isCompleted\n      });\n      \n      // Count this task once for each unique department\n      taskDepartments.forEach(department => {\n        if (progress[department]) {\n          progress[department].total++;\n          \n          if (isCompleted) {\n            progress[department].completed++;\n          }\n          \n          console.log('getDepartmentProgress: Added task to department:', {\n            department: department,\n            taskId: task.id,\n            taskName: task.Task,\n            isCompleted: isCompleted,\n            newTotal: progress[department].total,\n            newCompleted: progress[department].completed\n          });\n        }\n      });\n\n      if (assignedUsers.length === 0) {\n        console.log('getDepartmentProgress: No user found for task:', {\n          taskId: task.id,\n          taskName: task.Task,\n          responsibleParty: responsibleParty,\n          availableUsers: users.map(u => ({ \n            id: u.id, \n            email: u.email || u.Email || u.mail || u.userPrincipalName, \n            displayName: u.displayName || u.DisplayName,\n            departments: u.departments\n          }))\n        });\n      }\n    });\n    \n    console.log('getDepartmentProgress: Final progress before percentage calculation:', progress);\n    \n    // Calculate percentages\n    Object.values(DEPARTMENTS).forEach(dept => {\n      const stats = progress[dept];\n      stats.percentage = stats.total > 0 ? Math.round((stats.completed / stats.total) * 100) : 0;\n    });\n    \n    console.log('Dashboard: Final department progress:', progress);\n    \n    return Object.values(progress);\n  };\n\n  const departmentProgress = React.useMemo(() => {\n    return getDepartmentProgress();\n  }, [users, tasks, departmentProgressKey]);\n\n  // Recalculate department progress when users load\n  React.useEffect(() => {\n    console.log('Dashboard: useEffect triggered for users change:', {\n      users: users,\n      usersLength: users?.length,\n      userAgent: navigator.userAgent,\n      timestamp: new Date().toISOString()\n    });\n    \n    if (users && users.length > 0) {\n      console.log('Dashboard: Users loaded, recalculating department progress', {\n        usersCount: users.length,\n        userAgent: navigator.userAgent\n      });\n      // Force re-render by updating a state variable\n      setDepartmentProgressKey(prev => prev + 1);\n    } else {\n      console.log('Dashboard: Users not ready yet, will retry', {\n        users: users,\n        userAgent: navigator.userAgent\n      });\n    }\n  }, [users]);\n\n  // Get project progress for current year using correct SharePoint fields\n  const getProjectProgress = () => {\n    const projects = {};\n    \n    currentYearTasks.forEach(task => {\n      const projectName = task.Project || task.projectName || task.project || 'Unassigned';\n      \n      if (!projects[projectName]) {\n        projects[projectName] = { completed: 0, total: 0 };\n      }\n      projects[projectName].total++;\n      \n      // Use the \"Completed?\" field from SharePoint - field name is Completed_x003f_\n      if (task.Completed_x003f_ === true || task.Completed_x003f_ === 'Yes' || task.Completed_x003f_ === 'yes' ||\n          task.Completed === true || task.Completed === 'Yes' || task.Completed === 'yes') {\n        projects[projectName].completed++;\n      }\n    });\n    \n    return Object.entries(projects)\n      .map(([name, data]) => ({\n        name,\n      completed: data.completed,\n      total: data.total,\n      percentage: data.total > 0 ? Math.round((data.completed / data.total) * 100) : 0\n      }))\n      .sort((a, b) => b.total - a.total) // Sort by total tasks descending\n      .slice(0, 8); // Show top 8 projects\n  };\n\n  const projectProgress = getProjectProgress();\n\n  // Circular progress component\n  const CircularProgress = ({ percentage, size = 120, strokeWidth = 8, color = 'text-blue-500' }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = radius * 2 * Math.PI;\n    const strokeDasharray = circumference;\n    // Ensure minimum visibility by showing at least 2% of the circle\n    const adjustedPercentage = Math.max(percentage, 2);\n    const strokeDashoffset = circumference - (adjustedPercentage / 100) * circumference;\n\n    return (\n      <div className=\"relative inline-flex items-center justify-center\">\n        <svg width={size} height={size} className=\"transform -rotate-90\">\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"currentColor\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            className=\"text-gray-200 dark:text-gray-700\"\n          />\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"currentColor\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            strokeDasharray={strokeDasharray}\n            strokeDashoffset={strokeDashoffset}\n            className={`${color} transition-all duration-500 ease-in-out`}\n            strokeLinecap=\"round\"\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">{percentage}%</span>\n        </div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6 pb-16 relative\">\n      {/* Updating Overlay */}\n      {updating && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 flex flex-col items-center gap-4 border border-gray-200 dark:border-gray-700\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-4 border-blue-200 border-t-blue-600\"></div>\n            <div className=\"text-center\">\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">Updating...</p>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">Syncing with database</p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"max-w-7xl mx-auto space-y-8\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n          <div>\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">Dashboard</h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              Welcome back, {userProfile?.displayName || 'User'}! Here's your project overview.\n            </p>\n          </div>\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n            {format(new Date(), 'EEEE, MMMM do, yyyy')}\n        </div>\n      </div>\n\n        {/* Top Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6\">\n          {/* Total Tasks */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Tasks</p>\n                <p className=\"text-3xl font-bold text-gray-900 dark:text-white mt-2\">{metrics.total}</p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">This year</p>\n            </div>\n              <div className=\"p-3 bg-blue-100 dark:bg-blue-900/30 rounded-full\">\n                <ChartBarIcon className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\n            </div>\n          </div>\n        </div>\n\n          {/* Completed Tasks */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Completed</p>\n                <p className=\"text-3xl font-bold text-green-600 dark:text-green-400 mt-2\">{metrics.completed}</p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">This year</p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                  {metrics.total > 0 ? Math.round((metrics.completed / metrics.total) * 100) : 0}% completion rate\n              </p>\n              </div>\n              <div className=\"p-3 bg-green-100 dark:bg-green-900/30 rounded-full\">\n                <CheckCircleIcon className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n              </div>\n            </div>\n          </div>\n\n          {/* Urgent Tasks */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Urgent</p>\n                <p className=\"text-3xl font-bold text-orange-600 dark:text-orange-400 mt-2\">{metrics.urgent}</p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">This year</p>\n        </div>\n              <div className=\"p-3 bg-orange-100 dark:bg-orange-900/30 rounded-full\">\n                <ExclamationTriangleIcon className=\"w-8 h-8 text-orange-600 dark:text-orange-400\" />\n            </div>\n            </div>\n          </div>\n\n          {/* Due This Week */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Due This Week</p>\n                <p className=\"text-3xl font-bold text-yellow-600 dark:text-yellow-400 mt-2\">{metrics.dueThisWeek}</p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">Deadlines approaching</p>\n              </div>\n              <div className=\"p-3 bg-yellow-100 dark:bg-yellow-900/30 rounded-full\">\n                <CalendarDaysIcon className=\"w-8 h-8 text-yellow-600 dark:text-yellow-400\" />\n        </div>\n            </div>\n          </div>\n\n          {/* Overdue Tasks */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Overdue</p>\n                <p className=\"text-3xl font-bold text-red-600 dark:text-red-400 mt-2\">{metrics.overdue}</p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">Need attention</p>\n        </div>\n              <div className=\"p-3 bg-red-100 dark:bg-red-900/30 rounded-full\">\n                <ExclamationTriangleIcon className=\"w-8 h-8 text-red-600 dark:text-red-400\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n        {/* Deadlines This Week - Full Width */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700\">\n          <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 bg-yellow-100 dark:bg-yellow-900/30 rounded-lg\">\n                <CalendarDaysIcon className=\"w-6 h-6 text-yellow-600 dark:text-yellow-400\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Deadlines This Week</h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">{tasksThisWeek.length} tasks due</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"p-6\">\n            {tasksThisWeek.length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n                {tasksThisWeek.map(task => (\n              <TaskCard\n                      key={task.id} \n                task={task}\n                showCompletion={true}\n                onToggleCompletion={toggleTaskCompletion}\n                users={users}\n              />\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <CalendarDaysIcon className=\"w-12 h-12 text-gray-400 dark:text-gray-500 mx-auto mb-4\" />\n                <p className=\"text-gray-500 dark:text-gray-400\">No deadlines this week</p>\n                <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-1\">You're all caught up!</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Progress Charts - Side by Side */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Department Progress */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700\">\n          <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg\">\n                  <BuildingOfficeIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Department Progress</h3>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Current year completion</p>\n                </div>\n              </div>\n          </div>\n          <div className=\"p-6\">\n              <div className=\"grid grid-cols-2 gap-6\">\n                {departmentProgress.map(dept => (\n                  <div key={dept.name} className=\"text-center\">\n                    <div className=\"mb-4\">\n                      <CircularProgress \n                        percentage={dept.percentage} \n                        size={100} \n                        strokeWidth={6}\n                        color={dept.textColor}\n                      />\n                      {/* Debug: Log the color being used */}\n                      {console.log(`Department ${dept.name} color:`, dept.color, 'textColor:', dept.textColor)}\n                    </div>\n                    <h4 className=\"font-medium text-gray-900 dark:text-white text-sm\">{dept.name}</h4>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                      {dept.completed} of {dept.total} tasks\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Project Progress */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700\">\n            <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"p-2 bg-purple-100 dark:bg-purple-900/30 rounded-lg\">\n                  <FolderIcon className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Project Progress</h3>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Current year completion</p>\n        </div>\n      </div>\n          </div>\n          <div className=\"p-6\">\n              {projectProgress.length > 0 ? (\n            <div className=\"space-y-4\">\n                  {projectProgress.map(project => (\n                    <div key={project.name} className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <h4 className=\"font-medium text-gray-900 dark:text-white text-sm truncate\">\n                            {project.name}\n                          </h4>\n                          <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            {project.percentage}%\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div \n                            className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full transition-all duration-500 ease-in-out\"\n                            style={{ width: `${project.percentage}%` }}\n                    ></div>\n                  </div>\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                          {project.completed} of {project.total} tasks completed\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <FolderIcon className=\"w-12 h-12 text-gray-400 dark:text-gray-500 mx-auto mb-4\" />\n                  <p className=\"text-gray-500 dark:text-gray-400\">No projects this year</p>\n                  <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-1\">Start adding tasks to see progress</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Summary */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\">\n          <div className=\"flex items-center justify-between\">\n                    <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Year-to-Date Summary</h3>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                {currentYearTasks.length} tasks created this year across {projectProgress.length} projects\n                      </p>\n                    </div>\n            <div className=\"text-right\">\n              <p className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                {currentYearTasks.length > 0 \n                  ? Math.round((currentYearTasks.filter(task => \n                      task.Completed_x003f_ === true || task.Completed_x003f_ === 'Yes' || task.Completed_x003f_ === 'yes' ||\n                      task.Completed === true || task.Completed === 'Yes' || task.Completed === 'yes'\n                    ).length / currentYearTasks.length) * 100)\n                  : 0}%\n              </p>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Overall completion</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}