{"ast":null,"code":"import _objectSpread from\"/Users/nic/housing-deadlines-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import{microsoftDataService}from'./microsoftDataService';import{sharedDataService}from'./sharedDataService';import{globalTaskStore}from'./globalTaskStore';import{sharePointService}from'./graphService';import{debugSharePoint}from'./debugSharePoint';import{useAuth}from'./Auth';import recurringInstanceService from'./recurringInstanceService';import recurringTaskGenerator from'./recurringTaskGenerator';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Database=()=>{const{userProfile,hasPermission}=useAuth();const[activeTab,setActiveTab]=useState('sharepoint');const[tasks,setTasks]=useState([]);const[instances,setInstances]=useState([]);const[loading,setLoading]=useState(true);const[updating,setUpdating]=useState(false);const[error,setError]=useState(null);const[editingCell,setEditingCell]=useState(null);const[selectedCells,setSelectedCells]=useState(new Set());const[profiles,setProfiles]=useState([]);const[showPeoplePicker,setShowPeoplePicker]=useState(false);const[peoplePickerTaskId,setPeoplePickerTaskId]=useState(null);const[selectedPeople,setSelectedPeople]=useState([]);const[peopleSearchTerm,setPeopleSearchTerm]=useState('');const[clipboard,setClipboard]=useState('');const[isSelecting,setIsSelecting]=useState(false);const[selectionStart,setSelectionStart]=useState(null);const[autoScrollDirection,setAutoScrollDirection]=useState(null);const[autoScrollInterval,setAutoScrollInterval]=useState(null);const tableRef=useRef(null);const containerRef=useRef(null);// Column definitions - base columns for all views\nconst allColumns=[{key:'Task',label:'Task',type:'text',width:200},{key:'Project',label:'Project',type:'text',width:150},{key:'Deadline',label:'Deadline',type:'date',width:120},{key:'ResponsibleParty',label:'Responsible Party',type:'people',width:200},{key:'Recurring',label:'Recurring',type:'select',width:100,options:['Yes','No']},{key:'Interval',label:'Interval (months)',type:'number',width:120},{key:'FinalDate',label:'Final Date',type:'date',width:120},{key:'Priority',label:'Priority',type:'select',width:100,options:['Normal','Urgent']},{key:'Status',label:'Status',type:'computed',width:100},{key:'Completed',label:'Completed?',type:'select',width:100,options:['Yes','No']},{key:'Notes',label:'Notes',type:'text',width:200},{key:'Link',label:'Link',type:'url',width:150}];// Filter columns based on active tab\n// SharePoint tab: Hide Priority, Status, Completed (parent tasks are just configuration)\n// Sub-Database tab: Show all columns (these are the working instances)\nconst columns=activeTab==='sharepoint'?allColumns.filter(col=>!['Priority','Status','Completed'].includes(col.key)):allColumns;// Load real Microsoft users\nconst loadProfiles=async()=>{try{const users=await sharePointService.getUsers();const formattedProfiles=users.map(user=>({id:user.id,name:user.displayName,email:user.mail||user.userPrincipalName,department:user.department||'No Department',jobTitle:user.jobTitle||'',initials:getInitials(user.displayName)}));setProfiles(formattedProfiles);console.log('Database: Loaded',formattedProfiles.length,'profiles');}catch(err){console.error('Database: Error loading profiles:',err);setProfiles([]);}};// Get initials from name\nconst getInitials=name=>{if(!name)return'?';const parts=name.trim().split(' ');if(parts.length===1)return parts[0].charAt(0).toUpperCase();return(parts[0].charAt(0)+parts[parts.length-1].charAt(0)).toUpperCase();};// Load tasks and generate instances\nconst loadTasks=async()=>{try{setLoading(true);await debugSharePoint();const tasksData=await sharedDataService.getAllTasks();setTasks(tasksData);globalTaskStore.setTasks(tasksData);console.log('Database: Loaded',tasksData.length,'tasks');// Generate instances for recurring tasks\nawait recurringTaskGenerator.generateAllInstances(tasksData);// Load instances and update global store\nawait loadInstances();// Update global store with combined data\nconst allInstances=await recurringTaskGenerator.getAllTaskInstances();globalTaskStore.setAllTasks([...tasksData,...allInstances]);}catch(err){console.error('Database: Error loading tasks:',err);setError('Failed to load tasks from Microsoft Lists');}finally{setLoading(false);}};// Load instances from IndexedDB\nconst loadInstances=async()=>{try{const instancesData=await recurringTaskGenerator.getAllTaskInstances();setInstances(instancesData);globalTaskStore.setInstances(instancesData);console.log('Database: Loaded',instancesData.length,'instances');}catch(err){console.error('Database: Error loading instances:',err);}};// Parse responsible party - SAFE version that handles any type\nconst parseResponsibleParty=rpValue=>{if(!rpValue)return[];if(Array.isArray(rpValue))return rpValue;if(typeof rpValue==='string'){return rpValue.split(';').map(item=>item.trim()).filter(item=>item.length>0);}if(typeof rpValue==='object'){if(rpValue.lookupValue)return[rpValue.lookupValue];if(rpValue.Email)return[rpValue.Email];if(rpValue.title)return[rpValue.title];}return[];};// Format responsible party array to string\nconst formatResponsibleParty=emails=>{if(!Array.isArray(emails))return'';return emails.join('; ');};// Open people picker\nconst openPeoplePicker=(taskId,currentValue)=>{setPeoplePickerTaskId(taskId);setSelectedPeople(parseResponsibleParty(currentValue));setPeopleSearchTerm('');setShowPeoplePicker(true);};// Toggle person selection\nconst togglePersonSelection=personEmail=>{setSelectedPeople(prev=>{if(prev.includes(personEmail)){return prev.filter(email=>email!==personEmail);}else{return[...prev,personEmail];}});};// Save people picker selection\nconst savePeoplePickerSelection=async()=>{console.log('Database: savePeoplePickerSelection called!');try{if(peoplePickerTaskId){const formattedValue=formatResponsibleParty(selectedPeople);console.log('Database: Saving ResponsibleParty:',{taskId:peoplePickerTaskId,selectedPeople:selectedPeople,formattedValue:formattedValue});if(!formattedValue||formattedValue.trim()===''){console.warn('Database: No people selected, skipping save');setShowPeoplePicker(false);setPeoplePickerTaskId(null);setSelectedPeople([]);return;}await updateCell(peoplePickerTaskId,'ResponsibleParty',formattedValue);console.log('Database: ResponsibleParty saved successfully!');}else{console.warn('Database: No task ID set for people picker');}}catch(error){console.error('Database: Error saving ResponsibleParty:',error);setError(\"Failed to save ResponsibleParty: \".concat(error.message));}finally{setShowPeoplePicker(false);setPeoplePickerTaskId(null);setSelectedPeople([]);}};// Update a single cell\nconst updateCell=async function(taskId,field,value){let isInstance=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// Don't allow editing of Status column - it's calculated automatically\nif(field==='Status'){return;}// Check if user has permission to edit\nif(!hasPermission(userProfile===null||userProfile===void 0?void 0:userProfile.role,'ADMIN')){alert('You do not have permission to edit tasks. Contact an administrator.');return;}// Handle instance updates differently\nif(isInstance){await updateInstanceCell(taskId,field,value);return;}try{const task=tasks.find(t=>t.id===taskId);if(!task)return;let processedValue=value;if(field==='Recurring'||field==='Completed'){processedValue=value==='Yes';}// Special handling for date fields to prevent timezone issues\nif(field==='Deadline'||field==='FinalDate'){if(value&&value.includes('-')){// Value is in format \"2024-10-05\"\n// Convert to ISO string at noon local time to avoid timezone shifts\nconst[year,month,day]=value.split('-');const localDate=new Date(parseInt(year),parseInt(month)-1,parseInt(day),12,0,0);processedValue=localDate.toISOString();console.log('Database: Converted date to ISO with local timezone:',{input:value,output:processedValue,localDate:localDate.toLocaleDateString()});}}console.log('Database: Updating task:',taskId,field,'=',processedValue);// Show loading indicator\nsetUpdating(true);// Update local state immediately (optimistic update)\nconst updatedTask=_objectSpread(_objectSpread({},task),{},{[field]:processedValue});setTasks(prevTasks=>prevTasks.map(t=>t.id===taskId?updatedTask:t));// Update SharePoint\nawait sharedDataService.updateTask(taskId,{[field]:processedValue});setEditingCell(null);// Clear cache and reload fresh data\nsharedDataService.clearCache();const freshTasks=await sharedDataService.getAllTasks();setTasks(freshTasks);// Update global store\nglobalTaskStore.setTasks(freshTasks);const updatedTaskFromFresh=freshTasks.find(t=>t.id===taskId);// If this was a recurring field, regenerate instances\nif(field==='Recurring'||field==='Interval'||field==='FinalDate'||field==='Deadline'){console.log('Database: Recurring field changed, regenerating instances...');if(updatedTaskFromFresh){await recurringTaskGenerator.updateTaskInstances(updatedTaskFromFresh);await loadInstances();}}else if(field==='Completed_x003f_'||field==='Priority'){// For status fields (Completed, Priority), do NOT cascade to instances\n// These should remain independent\nconsole.log('Database: Status field changed, NOT cascading to instances to maintain independence');}else{// For non-recurring, non-status fields, cascade changes to all instances\nconsole.log('Database: Non-recurring field changed, cascading to instances...');if(updatedTaskFromFresh&&(updatedTaskFromFresh.Recurring===true||updatedTaskFromFresh.Recurring==='Yes')){await recurringTaskGenerator.cascadeParentChanges(updatedTaskFromFresh);await loadInstances();}}// Refresh instances for global store\nconst allInstances=await recurringTaskGenerator.getAllTaskInstances();globalTaskStore.setAllTasks([...freshTasks,...allInstances]);setUpdating(false);console.log('Database: Cell updated successfully');}catch(err){console.error('Database: Error updating cell:',err);setError(\"Failed to update: \".concat(err.message));setUpdating(false);}};// Update instance cell\nconst updateInstanceCell=async(instanceId,field,value)=>{try{let processedValue=value;if(field==='Completed_x003f_'||field==='Completed'){processedValue=value==='Yes'||value===true;}// Update the instance in IndexedDB\nawait recurringTaskGenerator.updateInstanceModifications(instanceId,{[field]:processedValue});// If it's a completion status update, also update the completion status\nif(field==='Completed_x003f_'||field==='Completed'){await recurringTaskGenerator.updateInstanceCompletion(instanceId,processedValue);}await loadInstances();setEditingCell(null);console.log('Database: Instance cell updated successfully');}catch(err){console.error('Database: Error updating instance cell:',err);setError(\"Failed to update instance: \".concat(err.message));}};// Add new row\nconst addNewRow=async()=>{try{const newTask={Task:'New Task',Project:'',Deadline:new Date().toISOString().split('T')[0],ResponsibleParty:'',Recurring:false,Interval:'',FinalDate:'',Priority:'Normal',Completed:false,Notes:'',Link:''};const result=await microsoftDataService.tasks.add(newTask);setTasks(prevTasks=>[...prevTasks,_objectSpread(_objectSpread({},newTask),{},{id:result.id})]);}catch(err){console.error('Database: Error adding row:',err);setError('Failed to add new task');}};// Delete row\nconst deleteRow=async taskId=>{if(window.confirm('Are you sure you want to delete this task?')){try{await microsoftDataService.tasks.delete(taskId);setTasks(prevTasks=>prevTasks.filter(t=>t.id!==taskId));// Delete associated instances\nawait recurringTaskGenerator.deleteTaskInstances(taskId);await loadInstances();}catch(err){console.error('Database: Error deleting row:',err);setError('Failed to delete task');}}};// Delete instance\nconst deleteInstance=async instanceId=>{if(window.confirm('Are you sure you want to delete this instance?')){try{await recurringInstanceService.deleteInstance(instanceId);await loadInstances();console.log('Database: Deleted instance:',instanceId);}catch(err){console.error('Database: Error deleting instance:',err);setError('Failed to delete instance');}}};// Calculate status\nconst getCalculatedStatus=task=>{if(task.Completed)return'Completed';if(new Date(task.Deadline)<new Date())return'Overdue';return'Active';};// Get cell value for display\nconst getCellValue=function(task,column){let isInstance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(column.key==='Status'){return getCalculatedStatus(task);}if(column.key==='ResponsibleParty'){const emails=parseResponsibleParty(task[column.key]);return emails.length>0?emails.join('; '):'';}if(column.type==='date'&&task[column.key]){const dateStr=task[column.key];// Parse date string carefully to avoid timezone issues\nlet year,month,day;// If in yyyy-MM-dd format, parse directly\nif(typeof dateStr==='string'&&dateStr.includes('-')){const datePart=dateStr.split('T')[0];const parts=datePart.split('-');if(parts.length===3){year=parts[0];month=parts[1];day=parts[2];return\"\".concat(month,\"/\").concat(day,\"/\").concat(year);}}// Fallback to Date parsing\nconst date=new Date(dateStr);year=date.getFullYear();month=String(date.getMonth()+1).padStart(2,'0');day=String(date.getDate()).padStart(2,'0');return\"\".concat(month,\"/\").concat(day,\"/\").concat(year);}if(column.key==='Link'){const linkValue=task[column.key];if(typeof linkValue==='object'&&linkValue!==null){return linkValue.Url||linkValue.Description||'';}return linkValue||'';}if(column.type==='select'){if(column.key==='Recurring'||column.key==='Completed'||column.key==='Completed_x003f_'){return task[column.key]?'Yes':'No';}return task[column.key]||'';}return task[column.key]||'';};// Handle cell selection\nconst handleCellClick=(taskId,columnKey,event)=>{const cellId=\"\".concat(taskId,\"-\").concat(columnKey);if(event.ctrlKey||event.metaKey){// Multi-select with Ctrl/Cmd\nsetSelectedCells(prev=>{const newSet=new Set(prev);if(newSet.has(cellId)){newSet.delete(cellId);}else{newSet.add(cellId);}return newSet;});}else if(event.shiftKey&&selectedCells.size>0){// Range select with Shift\n// Implementation for range selection would go here\n}else{// Single select\nsetSelectedCells(new Set([cellId]));}};// Handle cell double-click to edit\nconst handleCellDoubleClick=function(taskId,columnKey){let isInstance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;// Don't allow editing of Status column - it's calculated automatically\nif(columnKey==='Status'){return;}if(columnKey==='ResponsibleParty'){const dataSource=isInstance?instances:tasks;const task=dataSource.find(t=>t.id===taskId);openPeoplePicker(taskId,task.ResponsibleParty);}else{setEditingCell(\"\".concat(taskId,\"-\").concat(columnKey));}};// Handle copy\nconst handleCopy=useCallback(event=>{if(selectedCells.size===0)return;const selectedData=Array.from(selectedCells).map(cellId=>{const[taskId,columnKey]=cellId.split('-');const task=tasks.find(t=>t.id===taskId);const column=columns.find(c=>c.key===columnKey);return getCellValue(task,column);});const copyText=selectedData.join('\\t');setClipboard(copyText);if(navigator.clipboard){navigator.clipboard.writeText(copyText);}event.preventDefault();},[selectedCells,tasks,columns]);// Handle paste\nconst handlePaste=useCallback(async event=>{if(selectedCells.size===0)return;let pasteData;if(navigator.clipboard){try{pasteData=await navigator.clipboard.readText();}catch(err){pasteData=clipboard;}}else{pasteData=clipboard;}if(!pasteData)return;const rows=pasteData.split('\\n').filter(row=>row.trim());const selectedCellsArray=Array.from(selectedCells);// Handle bulk paste\nfor(let i=0;i<rows.length&&i<selectedCellsArray.length;i++){const cellId=selectedCellsArray[i];const[taskId,columnKey]=cellId.split('-');const values=rows[i].split('\\t');for(let j=0;j<values.length&&i+j<selectedCellsArray.length;j++){const targetCellId=selectedCellsArray[i+j];const[targetTaskId,targetColumnKey]=targetCellId.split('-');const value=values[j].trim();if(value&&targetColumnKey!=='Status'){await updateCell(targetTaskId,targetColumnKey,value);}}}event.preventDefault();},[selectedCells,clipboard]);// Handle delete\nconst handleDelete=useCallback(async event=>{if(selectedCells.size===0)return;for(const cellId of selectedCells){const[taskId,columnKey]=cellId.split('-');if(columnKey!=='Status'&&columnKey!=='Task'){await updateCell(taskId,columnKey,'');}}event.preventDefault();},[selectedCells]);// Handle add row\nconst handleAddRow=async()=>{if(!hasPermission(userProfile===null||userProfile===void 0?void 0:userProfile.role,'ADMIN')){alert('You do not have permission to add tasks. Contact an administrator.');return;}try{const newTask={Task:'New Task',Project:'',Deadline:new Date().toISOString().split('T')[0],ResponsibleParty:'',Recurring:false,Interval:'',FinalDate:'',Priority:'Normal',Completed:false,Notes:'',Link:''};const result=await sharedDataService.addTask(newTask);await loadTasks();console.log('Database: Added new task:',result.id);}catch(error){console.error('Database: Error adding task:',error);alert('Failed to add task');}};// Auto-scroll functionality\nconst handleMouseMove=useCallback(event=>{if(!containerRef.current)return;const container=containerRef.current;const rect=container.getBoundingClientRect();const scrollThreshold=50;const isNearLeft=event.clientX-rect.left<scrollThreshold;const isNearRight=event.clientX-rect.left>rect.width-scrollThreshold;if(isNearLeft&&autoScrollDirection!=='left'){setAutoScrollDirection('left');const interval=setInterval(()=>{container.scrollLeft-=10;},16);setAutoScrollInterval(interval);}else if(isNearRight&&autoScrollDirection!=='right'){setAutoScrollDirection('right');const interval=setInterval(()=>{container.scrollLeft+=10;},16);setAutoScrollInterval(interval);}else if(!isNearLeft&&!isNearRight&&autoScrollDirection){setAutoScrollDirection(null);if(autoScrollInterval){clearInterval(autoScrollInterval);setAutoScrollInterval(null);}}},[autoScrollDirection,autoScrollInterval]);const handleMouseLeave=useCallback(()=>{setAutoScrollDirection(null);if(autoScrollInterval){clearInterval(autoScrollInterval);setAutoScrollInterval(null);}},[autoScrollInterval]);// Keyboard shortcuts\nuseEffect(()=>{const handleKeyDown=event=>{if(event.ctrlKey||event.metaKey){switch(event.key){case'c':handleCopy(event);break;case'v':handlePaste(event);break;}}else if(event.key==='Delete'||event.key==='Backspace'){handleDelete(event);}else if(event.key==='Escape'){setEditingCell(null);setSelectedCells(new Set());}};document.addEventListener('keydown',handleKeyDown);return()=>document.removeEventListener('keydown',handleKeyDown);},[handleCopy,handlePaste,handleDelete]);// Filter profiles\nconst filteredProfiles=profiles.filter(profile=>profile.name.toLowerCase().includes(peopleSearchTerm.toLowerCase())||profile.email.toLowerCase().includes(peopleSearchTerm.toLowerCase()));useEffect(()=>{loadProfiles();loadTasks();},[]);// Load instances when switching to sub-database tab\nuseEffect(()=>{if(activeTab==='subdatabase'){loadInstances();}},[activeTab]);// Auto-update instances every minute\nuseEffect(()=>{const interval=setInterval(async()=>{console.log('Database: Auto-updating instances...');try{await recurringTaskGenerator.refreshAllInstances(tasks);await loadInstances();// Update global store with fresh data\nconst allInstances=await recurringTaskGenerator.getAllTaskInstances();globalTaskStore.setAllTasks([...tasks,...allInstances]);console.log('Database: Auto-update completed');}catch(error){console.error('Database: Error in auto-update:',error);}},60000);// 1 minute\nreturn()=>clearInterval(interval);},[tasks]);// Auto-update instances when any task deadline changes\nuseEffect(()=>{const updateInstances=async()=>{if(tasks.length>0){console.log('Database: Deadline change detected, updating instances...');try{await recurringTaskGenerator.refreshAllInstances(tasks);await loadInstances();// Update global store with fresh data\nconst allInstances=await recurringTaskGenerator.getAllTaskInstances();globalTaskStore.setAllTasks([...tasks,...allInstances]);console.log('Database: Instance update completed');}catch(error){console.error('Database: Error updating instances on deadline change:',error);}}};// Debounce the update to avoid excessive calls\nconst timeoutId=setTimeout(updateInstances,1000);return()=>clearTimeout(timeoutId);},[tasks.map(t=>t.Deadline).join(',')]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Loading...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 relative\",children:[updating&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 flex flex-col items-center gap-4 border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-4 border-blue-200 border-t-blue-600\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Updating...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-1\",children:\"Syncing with SharePoint\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full px-4 py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 dark:text-white mb-2\",children:\"Database Management\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Excel-like grid view with copy/paste and bulk import support\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"nav\",{className:\"-mb-px flex space-x-8\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('sharepoint'),className:\"py-2 px-1 border-b-2 font-medium text-sm \".concat(activeTab==='sharepoint'?'border-blue-500 text-blue-600 dark:text-blue-400':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'),children:\"SharePoint Database\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('subdatabase'),className:\"py-2 px-1 border-b-2 font-medium text-sm \".concat(activeTab==='subdatabase'?'border-blue-500 text-blue-600 dark:text-blue-400':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'),children:[\"Sub-Database\",instances.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded-full\",children:instances.length})]})]})})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-6 bg-red-50 dark:bg-red-900/20 border border-red-200 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-red-800 dark:text-red-200\",children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(null),className:\"text-red-600\",children:\"\\u2715\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:activeTab==='sharepoint'?\"\".concat(tasks.length,\" tasks \\u2022 \").concat(profiles.length,\" users \\u2022 \").concat(selectedCells.size,\" cells selected\"):\"\".concat(instances.length,\" instances \\u2022 \").concat(profiles.length,\" users \\u2022 \").concat(selectedCells.size,\" cells selected\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[hasPermission(userProfile===null||userProfile===void 0?void 0:userProfile.role,'ADMIN')&&activeTab==='sharepoint'&&/*#__PURE__*/_jsx(\"button\",{onClick:addNewRow,className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium\",children:\"Add Row\"}),activeTab==='subdatabase'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{console.log('Database: Manual refresh triggered');console.log('Database: Current tasks:',tasks.length,tasks);await recurringTaskGenerator.refreshAllInstances(tasks);await loadInstances();const allInstances=await recurringTaskGenerator.getAllTaskInstances();globalTaskStore.setAllTasks([...tasks,...allInstances]);console.log('Database: Manual refresh completed');},className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium\",children:\"Refresh Instances\"}),/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{if(window.confirm('Are you sure you want to clear all instances? This cannot be undone.')){await recurringInstanceService.clearAllInstances();await loadInstances();const allInstances=await recurringTaskGenerator.getAllTaskInstances();globalTaskStore.setAllTasks([...tasks,...allInstances]);console.log('Database: All instances cleared');}},className:\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium\",children:\"Clear All Instances\"})]})]})]}),showPeoplePicker&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-2xl w-full max-h-[80vh] flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"Select Responsible Party\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search users...\",value:peopleSearchTerm,onChange:e=>setPeopleSearchTerm(e.target.value),className:\"w-full px-4 py-2 border rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\",autoFocus:true})]}),selectedPeople.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b bg-blue-50 dark:bg-blue-900/20\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font-medium mb-2\",children:[\"Selected (\",selectedPeople.length,\"):\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:selectedPeople.map(email=>{const profile=profiles.find(p=>p.email===email);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center bg-white dark:bg-gray-700 rounded-full px-3 py-1 border border-gray-200 dark:border-gray-600\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 rounded-full bg-blue-500 text-white flex items-center justify-center text-xs font-semibold mr-2\",children:(profile===null||profile===void 0?void 0:profile.initials)||'?'}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm mr-2 text-gray-900 dark:text-white\",children:(profile===null||profile===void 0?void 0:profile.name)||email}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>togglePersonSelection(email),className:\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\",children:\"\\u2715\"})]},email);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:filteredProfiles.map(profile=>{const isSelected=selectedPeople.includes(profile.email);return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>togglePersonSelection(profile.email),className:\"flex items-center p-3 rounded-lg cursor-pointer transition-colors \".concat(isSelected?'bg-blue-100 dark:bg-blue-900/40 border-2 border-blue-500 dark:border-blue-400':'bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-10 h-10 rounded-full bg-blue-500 text-white flex items-center justify-center font-semibold mr-3\",children:profile.initials}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-900 dark:text-white\",children:profile.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:profile.email})]}),isSelected&&/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white\",children:\"\\u2713\"})]},profile.id);})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-t flex justify-end gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowPeoplePicker(false);setPeoplePickerTaskId(null);setSelectedPeople([]);},className:\"px-4 py-2 text-gray-600\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:savePeoplePickerSelection,className:\"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium\",children:\"Save\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{ref:containerRef,className:\"bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-auto\",onMouseMove:handleMouseMove,onMouseLeave:handleMouseLeave,style:{maxHeight:'70vh'},children:/*#__PURE__*/_jsx(\"div\",{className:\"inline-block min-w-full\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-700 sticky top-0 z-10\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[columns.map(column=>/*#__PURE__*/_jsx(\"th\",{className:\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase border-r border-gray-200 dark:border-gray-600\",style:{width:column.width,minWidth:column.width},children:column.label},column.key)),activeTab==='subdatabase'&&/*#__PURE__*/_jsx(\"th\",{className:\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase w-20\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\",children:(activeTab==='sharepoint'?tasks:instances).map(item=>{const isInstance=activeTab==='subdatabase';return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50 dark:hover:bg-gray-700 \".concat(isInstance?'bg-blue-50/30 dark:bg-blue-900/10':''),children:[columns.map(column=>{const cellId=\"\".concat(item.id,\"-\").concat(column.key);const isSelected=selectedCells.has(cellId);const isEditing=editingCell===cellId;const cellValue=getCellValue(item,column,isInstance);return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 border-r border-gray-200 dark:border-gray-600 \".concat(isSelected?'bg-blue-100 dark:bg-blue-900/30':''),style:{width:column.width,minWidth:column.width},onClick:e=>hasPermission(userProfile===null||userProfile===void 0?void 0:userProfile.role,'ADMIN')&&column.key!=='Status'&&handleCellClick(item.id,column.key,e),onDoubleClick:()=>hasPermission(userProfile===null||userProfile===void 0?void 0:userProfile.role,'ADMIN')&&handleCellDoubleClick(item.id,column.key,isInstance),children:isEditing?/*#__PURE__*/_jsx(\"div\",{className:\"w-full\",children:column.type==='select'?/*#__PURE__*/_jsx(\"select\",{defaultValue:cellValue,onChange:e=>updateCell(item.id,column.key,e.target.value,isInstance),className:\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\",autoFocus:true,children:column.options.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option,children:option||'Select'},option))}):column.type==='date'?/*#__PURE__*/_jsx(\"input\",{type:\"date\",defaultValue:item[column.key]?(()=>{const dateStr=item[column.key];// If already in yyyy-MM-dd format, return as-is\nif(typeof dateStr==='string'&&/^\\d{4}-\\d{2}-\\d{2}$/.test(dateStr)){return dateStr;}// Otherwise parse carefully to avoid timezone issues\nconst datePart=dateStr.split('T')[0];return datePart;})():'',onBlur:e=>updateCell(item.id,column.key,e.target.value,isInstance),className:\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\",autoFocus:true}):column.type==='url'?/*#__PURE__*/_jsx(\"input\",{type:\"url\",defaultValue:item[column.key],onBlur:e=>updateCell(item.id,column.key,e.target.value,isInstance),className:\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\",autoFocus:true}):column.type==='number'?/*#__PURE__*/_jsx(\"input\",{type:\"number\",defaultValue:item[column.key]||'',onBlur:e=>updateCell(item.id,column.key,e.target.value,isInstance),onKeyPress:e=>e.key==='Enter'&&updateCell(item.id,column.key,e.target.value,isInstance),className:\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\",autoFocus:true,min:\"1\",placeholder:\"Enter months\"}):column.key==='Notes'?/*#__PURE__*/_jsx(\"textarea\",{defaultValue:item[column.key],onBlur:e=>updateCell(item.id,column.key,e.target.value,isInstance),className:\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\",rows:2,autoFocus:true}):/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:item[column.key],onBlur:e=>updateCell(item.id,column.key,e.target.value,isInstance),onKeyPress:e=>e.key==='Enter'&&updateCell(item.id,column.key,e.target.value,isInstance),className:\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\",autoFocus:true})}):/*#__PURE__*/_jsx(\"div\",{className:\"w-full\",children:column.key==='ResponsibleParty'?/*#__PURE__*/_jsx(\"div\",{className:\"cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-600 px-2 py-1 rounded text-sm\",children:cellValue?/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1\",children:parseResponsibleParty(item.ResponsibleParty).map((email,idx)=>{const emailStr=String(email||'');const profile=profiles.find(p=>p.email===emailStr);const displayName=(profile===null||profile===void 0?void 0:profile.name)||(emailStr.includes('@')?emailStr.split('@')[0]:emailStr);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center bg-blue-100 dark:bg-blue-900/30 rounded-full px-2 py-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded-full bg-blue-500 text-white flex items-center justify-center text-xs font-semibold mr-1\",children:(profile===null||profile===void 0?void 0:profile.initials)||getInitials(displayName)}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-900 dark:text-white\",children:displayName})]},idx);})}):/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"Click to assign\"})}):column.key==='Priority'?/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs rounded-full \".concat(item.Priority==='Urgent'?'bg-red-100 text-red-800':'bg-blue-100 text-blue-800'),children:item.Priority||'Normal'}):column.key==='Status'?/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs rounded-full \".concat(getCalculatedStatus(item)==='Completed'?'bg-green-100 text-green-800':getCalculatedStatus(item)==='Overdue'?'bg-red-100 text-red-800':'bg-blue-100 text-blue-800'),children:getCalculatedStatus(item)}):column.key==='Link'&&item.Link?/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700 dark:text-gray-300 text-sm break-all\",children:typeof item.Link==='object'&&item.Link!==null?item.Link.Url||item.Link.Description||'':item.Link}):column.key==='Task'&&isInstance?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-900 dark:text-white\",children:item.Task}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs bg-blue-100 text-blue-800 px-1.5 py-0.5 rounded-full\",children:[\"#\",item.instanceNumber]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-900 dark:text-white truncate\",children:cellValue||'Click to edit'})})},column.key);}),activeTab==='subdatabase'&&/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteInstance(item.id),className:\"text-red-600 hover:text-red-900 text-sm\",children:\"Delete\"})})]},item.id);})})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-blue-900 dark:text-blue-100 mb-2\",children:activeTab==='sharepoint'?'SharePoint Database Features:':'Sub-Database Features:'}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-sm text-blue-800 dark:text-blue-200 space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Click\"}),\" to select cells, \",/*#__PURE__*/_jsx(\"strong\",{children:\"Ctrl+Click\"}),\" for multi-select\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Double-click\"}),\" to edit cells directly\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Ctrl+C\"}),\" to copy, \",/*#__PURE__*/_jsx(\"strong\",{children:\"Ctrl+V\"}),\" to paste\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Delete/Backspace\"}),\" to clear selected cells\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Hover near edges\"}),\" to auto-scroll horizontally\"]}),activeTab==='sharepoint'?/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Bulk import:\"}),\" Copy data from Excel and paste into the grid\"]}):/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Instance Management:\"}),\" Each instance acts independently from its parent task\"]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"h-32\"})]});};export default Database;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","microsoftDataService","sharedDataService","globalTaskStore","sharePointService","debugSharePoint","useAuth","recurringInstanceService","recurringTaskGenerator","jsx","_jsx","jsxs","_jsxs","Database","userProfile","hasPermission","activeTab","setActiveTab","tasks","setTasks","instances","setInstances","loading","setLoading","updating","setUpdating","error","setError","editingCell","setEditingCell","selectedCells","setSelectedCells","Set","profiles","setProfiles","showPeoplePicker","setShowPeoplePicker","peoplePickerTaskId","setPeoplePickerTaskId","selectedPeople","setSelectedPeople","peopleSearchTerm","setPeopleSearchTerm","clipboard","setClipboard","isSelecting","setIsSelecting","selectionStart","setSelectionStart","autoScrollDirection","setAutoScrollDirection","autoScrollInterval","setAutoScrollInterval","tableRef","containerRef","allColumns","key","label","type","width","options","columns","filter","col","includes","loadProfiles","users","getUsers","formattedProfiles","map","user","id","name","displayName","email","mail","userPrincipalName","department","jobTitle","initials","getInitials","console","log","length","err","parts","trim","split","charAt","toUpperCase","loadTasks","tasksData","getAllTasks","generateAllInstances","loadInstances","allInstances","getAllTaskInstances","setAllTasks","instancesData","parseResponsibleParty","rpValue","Array","isArray","item","lookupValue","Email","title","formatResponsibleParty","emails","join","openPeoplePicker","taskId","currentValue","togglePersonSelection","personEmail","prev","savePeoplePickerSelection","formattedValue","warn","updateCell","concat","message","field","value","isInstance","arguments","undefined","role","alert","updateInstanceCell","task","find","t","processedValue","year","month","day","localDate","Date","parseInt","toISOString","input","output","toLocaleDateString","updatedTask","_objectSpread","prevTasks","updateTask","clearCache","freshTasks","updatedTaskFromFresh","updateTaskInstances","Recurring","cascadeParentChanges","instanceId","updateInstanceModifications","updateInstanceCompletion","addNewRow","newTask","Task","Project","Deadline","ResponsibleParty","Interval","FinalDate","Priority","Completed","Notes","Link","result","add","deleteRow","window","confirm","delete","deleteTaskInstances","deleteInstance","getCalculatedStatus","getCellValue","column","dateStr","datePart","date","getFullYear","String","getMonth","padStart","getDate","linkValue","Url","Description","handleCellClick","columnKey","event","cellId","ctrlKey","metaKey","newSet","has","shiftKey","size","handleCellDoubleClick","dataSource","handleCopy","selectedData","from","c","copyText","navigator","writeText","preventDefault","handlePaste","pasteData","readText","rows","row","selectedCellsArray","i","values","j","targetCellId","targetTaskId","targetColumnKey","handleDelete","handleAddRow","addTask","handleMouseMove","current","container","rect","getBoundingClientRect","scrollThreshold","isNearLeft","clientX","left","isNearRight","interval","setInterval","scrollLeft","clearInterval","handleMouseLeave","handleKeyDown","document","addEventListener","removeEventListener","filteredProfiles","profile","toLowerCase","refreshAllInstances","updateInstances","timeoutId","setTimeout","clearTimeout","className","children","onClick","clearAllInstances","placeholder","onChange","e","target","autoFocus","p","isSelected","ref","onMouseMove","onMouseLeave","style","maxHeight","minWidth","isEditing","cellValue","onDoubleClick","defaultValue","option","test","onBlur","onKeyPress","min","idx","emailStr","instanceNumber"],"sources":["/Users/nic/housing-deadlines-app/VERSION_2.2.0_BACKUP/src/Database.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { microsoftDataService } from './microsoftDataService';\nimport { sharedDataService } from './sharedDataService';\nimport { globalTaskStore } from './globalTaskStore';\nimport { sharePointService } from './graphService';\nimport { debugSharePoint } from './debugSharePoint';\nimport { useAuth } from './Auth';\nimport recurringInstanceService from './recurringInstanceService';\nimport recurringTaskGenerator from './recurringTaskGenerator';\n\nconst Database = () => {\n  const { userProfile, hasPermission } = useAuth();\n  const [activeTab, setActiveTab] = useState('sharepoint');\n  const [tasks, setTasks] = useState([]);\n  const [instances, setInstances] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [error, setError] = useState(null);\n  const [editingCell, setEditingCell] = useState(null);\n  const [selectedCells, setSelectedCells] = useState(new Set());\n  const [profiles, setProfiles] = useState([]);\n  const [showPeoplePicker, setShowPeoplePicker] = useState(false);\n  const [peoplePickerTaskId, setPeoplePickerTaskId] = useState(null);\n  const [selectedPeople, setSelectedPeople] = useState([]);\n  const [peopleSearchTerm, setPeopleSearchTerm] = useState('');\n  const [clipboard, setClipboard] = useState('');\n  const [isSelecting, setIsSelecting] = useState(false);\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [autoScrollDirection, setAutoScrollDirection] = useState(null);\n  const [autoScrollInterval, setAutoScrollInterval] = useState(null);\n  \n  const tableRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Column definitions - base columns for all views\n  const allColumns = [\n    { key: 'Task', label: 'Task', type: 'text', width: 200 },\n    { key: 'Project', label: 'Project', type: 'text', width: 150 },\n    { key: 'Deadline', label: 'Deadline', type: 'date', width: 120 },\n    { key: 'ResponsibleParty', label: 'Responsible Party', type: 'people', width: 200 },\n    { key: 'Recurring', label: 'Recurring', type: 'select', width: 100, options: ['Yes', 'No'] },\n    { key: 'Interval', label: 'Interval (months)', type: 'number', width: 120 },\n    { key: 'FinalDate', label: 'Final Date', type: 'date', width: 120 },\n    { key: 'Priority', label: 'Priority', type: 'select', width: 100, options: ['Normal', 'Urgent'] },\n    { key: 'Status', label: 'Status', type: 'computed', width: 100 },\n    { key: 'Completed', label: 'Completed?', type: 'select', width: 100, options: ['Yes', 'No'] },\n    { key: 'Notes', label: 'Notes', type: 'text', width: 200 },\n    { key: 'Link', label: 'Link', type: 'url', width: 150 }\n  ];\n  \n  // Filter columns based on active tab\n  // SharePoint tab: Hide Priority, Status, Completed (parent tasks are just configuration)\n  // Sub-Database tab: Show all columns (these are the working instances)\n  const columns = activeTab === 'sharepoint' \n    ? allColumns.filter(col => !['Priority', 'Status', 'Completed'].includes(col.key))\n    : allColumns;\n\n  // Load real Microsoft users\n  const loadProfiles = async () => {\n    try {\n      const users = await sharePointService.getUsers();\n      const formattedProfiles = users.map(user => ({\n        id: user.id,\n        name: user.displayName,\n        email: user.mail || user.userPrincipalName,\n        department: user.department || 'No Department',\n        jobTitle: user.jobTitle || '',\n        initials: getInitials(user.displayName)\n      }));\n      setProfiles(formattedProfiles);\n      console.log('Database: Loaded', formattedProfiles.length, 'profiles');\n    } catch (err) {\n      console.error('Database: Error loading profiles:', err);\n      setProfiles([]);\n    }\n  };\n\n  // Get initials from name\n  const getInitials = (name) => {\n    if (!name) return '?';\n    const parts = name.trim().split(' ');\n    if (parts.length === 1) return parts[0].charAt(0).toUpperCase();\n    return (parts[0].charAt(0) + parts[parts.length - 1].charAt(0)).toUpperCase();\n  };\n\n  // Load tasks and generate instances\n  const loadTasks = async () => {\n    try {\n      setLoading(true);\n      await debugSharePoint();\n      const tasksData = await sharedDataService.getAllTasks();\n      setTasks(tasksData);\n      globalTaskStore.setTasks(tasksData);\n      console.log('Database: Loaded', tasksData.length, 'tasks');\n      \n      // Generate instances for recurring tasks\n      await recurringTaskGenerator.generateAllInstances(tasksData);\n      \n      // Load instances and update global store\n      await loadInstances();\n      \n      // Update global store with combined data\n      const allInstances = await recurringTaskGenerator.getAllTaskInstances();\n      globalTaskStore.setAllTasks([...tasksData, ...allInstances]);\n    } catch (err) {\n      console.error('Database: Error loading tasks:', err);\n      setError('Failed to load tasks from Microsoft Lists');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load instances from IndexedDB\n  const loadInstances = async () => {\n    try {\n      const instancesData = await recurringTaskGenerator.getAllTaskInstances();\n      setInstances(instancesData);\n      globalTaskStore.setInstances(instancesData);\n      console.log('Database: Loaded', instancesData.length, 'instances');\n    } catch (err) {\n      console.error('Database: Error loading instances:', err);\n    }\n  };\n\n  // Parse responsible party - SAFE version that handles any type\n  const parseResponsibleParty = (rpValue) => {\n    if (!rpValue) return [];\n    \n    if (Array.isArray(rpValue)) return rpValue;\n    \n    if (typeof rpValue === 'string') {\n      return rpValue.split(';').map(item => item.trim()).filter(item => item.length > 0);\n    }\n    \n    if (typeof rpValue === 'object') {\n      if (rpValue.lookupValue) return [rpValue.lookupValue];\n      if (rpValue.Email) return [rpValue.Email];\n      if (rpValue.title) return [rpValue.title];\n    }\n    \n    return [];\n  };\n\n  // Format responsible party array to string\n  const formatResponsibleParty = (emails) => {\n    if (!Array.isArray(emails)) return '';\n    return emails.join('; ');\n  };\n\n  // Open people picker\n  const openPeoplePicker = (taskId, currentValue) => {\n    setPeoplePickerTaskId(taskId);\n    setSelectedPeople(parseResponsibleParty(currentValue));\n    setPeopleSearchTerm('');\n    setShowPeoplePicker(true);\n  };\n\n  // Toggle person selection\n  const togglePersonSelection = (personEmail) => {\n    setSelectedPeople(prev => {\n      if (prev.includes(personEmail)) {\n        return prev.filter(email => email !== personEmail);\n      } else {\n        return [...prev, personEmail];\n      }\n    });\n  };\n\n  // Save people picker selection\n  const savePeoplePickerSelection = async () => {\n    console.log('Database: savePeoplePickerSelection called!');\n    try {\n      if (peoplePickerTaskId) {\n        const formattedValue = formatResponsibleParty(selectedPeople);\n        console.log('Database: Saving ResponsibleParty:', {\n          taskId: peoplePickerTaskId,\n          selectedPeople: selectedPeople,\n          formattedValue: formattedValue\n        });\n        \n        if (!formattedValue || formattedValue.trim() === '') {\n          console.warn('Database: No people selected, skipping save');\n          setShowPeoplePicker(false);\n          setPeoplePickerTaskId(null);\n          setSelectedPeople([]);\n          return;\n        }\n        \n        await updateCell(peoplePickerTaskId, 'ResponsibleParty', formattedValue);\n        console.log('Database: ResponsibleParty saved successfully!');\n      } else {\n        console.warn('Database: No task ID set for people picker');\n      }\n    } catch (error) {\n      console.error('Database: Error saving ResponsibleParty:', error);\n      setError(`Failed to save ResponsibleParty: ${error.message}`);\n    } finally {\n      setShowPeoplePicker(false);\n      setPeoplePickerTaskId(null);\n      setSelectedPeople([]);\n    }\n  };\n\n  // Update a single cell\n  const updateCell = async (taskId, field, value, isInstance = false) => {\n    // Don't allow editing of Status column - it's calculated automatically\n    if (field === 'Status') {\n      return;\n    }\n    \n    // Check if user has permission to edit\n    if (!hasPermission(userProfile?.role, 'ADMIN')) {\n      alert('You do not have permission to edit tasks. Contact an administrator.');\n      return;\n    }\n\n    // Handle instance updates differently\n    if (isInstance) {\n      await updateInstanceCell(taskId, field, value);\n      return;\n    }\n\n    try {\n      const task = tasks.find(t => t.id === taskId);\n      if (!task) return;\n\n      let processedValue = value;\n      if (field === 'Recurring' || field === 'Completed') {\n        processedValue = value === 'Yes';\n      }\n      \n      // Special handling for date fields to prevent timezone issues\n      if (field === 'Deadline' || field === 'FinalDate') {\n        if (value && value.includes('-')) {\n          // Value is in format \"2024-10-05\"\n          // Convert to ISO string at noon local time to avoid timezone shifts\n          const [year, month, day] = value.split('-');\n          const localDate = new Date(parseInt(year), parseInt(month) - 1, parseInt(day), 12, 0, 0);\n          processedValue = localDate.toISOString();\n          console.log('Database: Converted date to ISO with local timezone:', {\n            input: value,\n            output: processedValue,\n            localDate: localDate.toLocaleDateString()\n          });\n        }\n      }\n      \n      console.log('Database: Updating task:', taskId, field, '=', processedValue);\n      \n      // Show loading indicator\n      setUpdating(true);\n      \n      // Update local state immediately (optimistic update)\n      const updatedTask = { ...task, [field]: processedValue };\n      setTasks(prevTasks => \n        prevTasks.map(t => t.id === taskId ? updatedTask : t)\n      );\n      \n      // Update SharePoint\n      await sharedDataService.updateTask(taskId, { [field]: processedValue });\n      \n      setEditingCell(null);\n      \n      // Clear cache and reload fresh data\n      sharedDataService.clearCache();\n      const freshTasks = await sharedDataService.getAllTasks();\n      setTasks(freshTasks);\n      \n      // Update global store\n      globalTaskStore.setTasks(freshTasks);\n      \n      const updatedTaskFromFresh = freshTasks.find(t => t.id === taskId);\n      \n      // If this was a recurring field, regenerate instances\n      if (field === 'Recurring' || field === 'Interval' || field === 'FinalDate' || field === 'Deadline') {\n        console.log('Database: Recurring field changed, regenerating instances...');\n        if (updatedTaskFromFresh) {\n          await recurringTaskGenerator.updateTaskInstances(updatedTaskFromFresh);\n          await loadInstances();\n        }\n      } else if (field === 'Completed_x003f_' || field === 'Priority') {\n        // For status fields (Completed, Priority), do NOT cascade to instances\n        // These should remain independent\n        console.log('Database: Status field changed, NOT cascading to instances to maintain independence');\n      } else {\n        // For non-recurring, non-status fields, cascade changes to all instances\n        console.log('Database: Non-recurring field changed, cascading to instances...');\n        if (updatedTaskFromFresh && (updatedTaskFromFresh.Recurring === true || updatedTaskFromFresh.Recurring === 'Yes')) {\n          await recurringTaskGenerator.cascadeParentChanges(updatedTaskFromFresh);\n          await loadInstances();\n        }\n      }\n      \n      // Refresh instances for global store\n      const allInstances = await recurringTaskGenerator.getAllTaskInstances();\n      globalTaskStore.setAllTasks([...freshTasks, ...allInstances]);\n      \n      setUpdating(false);\n      console.log('Database: Cell updated successfully');\n    } catch (err) {\n      console.error('Database: Error updating cell:', err);\n      setError(`Failed to update: ${err.message}`);\n      setUpdating(false);\n    }\n  };\n\n  // Update instance cell\n  const updateInstanceCell = async (instanceId, field, value) => {\n    try {\n      let processedValue = value;\n      if (field === 'Completed_x003f_' || field === 'Completed') {\n        processedValue = value === 'Yes' || value === true;\n      }\n\n      // Update the instance in IndexedDB\n      await recurringTaskGenerator.updateInstanceModifications(instanceId, { [field]: processedValue });\n      \n      // If it's a completion status update, also update the completion status\n      if (field === 'Completed_x003f_' || field === 'Completed') {\n        await recurringTaskGenerator.updateInstanceCompletion(instanceId, processedValue);\n      }\n      \n      await loadInstances();\n      setEditingCell(null);\n      console.log('Database: Instance cell updated successfully');\n    } catch (err) {\n      console.error('Database: Error updating instance cell:', err);\n      setError(`Failed to update instance: ${err.message}`);\n    }\n  };\n\n  // Add new row\n  const addNewRow = async () => {\n    try {\n      const newTask = {\n        Task: 'New Task',\n        Project: '',\n        Deadline: new Date().toISOString().split('T')[0],\n        ResponsibleParty: '',\n        Recurring: false,\n        Interval: '',\n        FinalDate: '',\n        Priority: 'Normal',\n        Completed: false,\n        Notes: '',\n        Link: ''\n      };\n\n      const result = await microsoftDataService.tasks.add(newTask);\n      setTasks(prevTasks => [...prevTasks, { ...newTask, id: result.id }]);\n    } catch (err) {\n      console.error('Database: Error adding row:', err);\n      setError('Failed to add new task');\n    }\n  };\n\n  // Delete row\n  const deleteRow = async (taskId) => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      try {\n        await microsoftDataService.tasks.delete(taskId);\n        setTasks(prevTasks => prevTasks.filter(t => t.id !== taskId));\n        \n        // Delete associated instances\n        await recurringTaskGenerator.deleteTaskInstances(taskId);\n        await loadInstances();\n      } catch (err) {\n        console.error('Database: Error deleting row:', err);\n        setError('Failed to delete task');\n      }\n    }\n  };\n\n  // Delete instance\n  const deleteInstance = async (instanceId) => {\n    if (window.confirm('Are you sure you want to delete this instance?')) {\n      try {\n        await recurringInstanceService.deleteInstance(instanceId);\n        await loadInstances();\n        console.log('Database: Deleted instance:', instanceId);\n      } catch (err) {\n        console.error('Database: Error deleting instance:', err);\n        setError('Failed to delete instance');\n      }\n    }\n  };\n\n  // Calculate status\n  const getCalculatedStatus = (task) => {\n    if (task.Completed) return 'Completed';\n    if (new Date(task.Deadline) < new Date()) return 'Overdue';\n    return 'Active';\n  };\n\n  // Get cell value for display\n  const getCellValue = (task, column, isInstance = false) => {\n    if (column.key === 'Status') {\n      return getCalculatedStatus(task);\n    }\n    \n    if (column.key === 'ResponsibleParty') {\n      const emails = parseResponsibleParty(task[column.key]);\n      return emails.length > 0 ? emails.join('; ') : '';\n    }\n    \n    if (column.type === 'date' && task[column.key]) {\n      const dateStr = task[column.key];\n      // Parse date string carefully to avoid timezone issues\n      let year, month, day;\n      \n      // If in yyyy-MM-dd format, parse directly\n      if (typeof dateStr === 'string' && dateStr.includes('-')) {\n        const datePart = dateStr.split('T')[0];\n        const parts = datePart.split('-');\n        if (parts.length === 3) {\n          year = parts[0];\n          month = parts[1];\n          day = parts[2];\n          return `${month}/${day}/${year}`;\n        }\n      }\n      \n      // Fallback to Date parsing\n      const date = new Date(dateStr);\n      year = date.getFullYear();\n      month = String(date.getMonth() + 1).padStart(2, '0');\n      day = String(date.getDate()).padStart(2, '0');\n      return `${month}/${day}/${year}`;\n    }\n    \n    if (column.key === 'Link') {\n      const linkValue = task[column.key];\n      if (typeof linkValue === 'object' && linkValue !== null) {\n        return linkValue.Url || linkValue.Description || '';\n      }\n      return linkValue || '';\n    }\n    \n    if (column.type === 'select') {\n      if (column.key === 'Recurring' || column.key === 'Completed' || column.key === 'Completed_x003f_') {\n        return task[column.key] ? 'Yes' : 'No';\n      }\n      return task[column.key] || '';\n    }\n    \n    return task[column.key] || '';\n  };\n\n  // Handle cell selection\n  const handleCellClick = (taskId, columnKey, event) => {\n    const cellId = `${taskId}-${columnKey}`;\n    \n    if (event.ctrlKey || event.metaKey) {\n      // Multi-select with Ctrl/Cmd\n      setSelectedCells(prev => {\n        const newSet = new Set(prev);\n        if (newSet.has(cellId)) {\n          newSet.delete(cellId);\n        } else {\n          newSet.add(cellId);\n        }\n        return newSet;\n      });\n    } else if (event.shiftKey && selectedCells.size > 0) {\n      // Range select with Shift\n      // Implementation for range selection would go here\n    } else {\n      // Single select\n      setSelectedCells(new Set([cellId]));\n    }\n  };\n\n  // Handle cell double-click to edit\n  const handleCellDoubleClick = (taskId, columnKey, isInstance = false) => {\n    // Don't allow editing of Status column - it's calculated automatically\n    if (columnKey === 'Status') {\n      return;\n    }\n    \n    if (columnKey === 'ResponsibleParty') {\n      const dataSource = isInstance ? instances : tasks;\n      const task = dataSource.find(t => t.id === taskId);\n      openPeoplePicker(taskId, task.ResponsibleParty);\n    } else {\n      setEditingCell(`${taskId}-${columnKey}`);\n    }\n  };\n\n  // Handle copy\n  const handleCopy = useCallback((event) => {\n    if (selectedCells.size === 0) return;\n    \n    const selectedData = Array.from(selectedCells).map(cellId => {\n      const [taskId, columnKey] = cellId.split('-');\n      const task = tasks.find(t => t.id === taskId);\n      const column = columns.find(c => c.key === columnKey);\n      return getCellValue(task, column);\n    });\n    \n    const copyText = selectedData.join('\\t');\n    setClipboard(copyText);\n    \n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(copyText);\n    }\n    \n    event.preventDefault();\n  }, [selectedCells, tasks, columns]);\n\n  // Handle paste\n  const handlePaste = useCallback(async (event) => {\n    if (selectedCells.size === 0) return;\n    \n    let pasteData;\n    if (navigator.clipboard) {\n      try {\n        pasteData = await navigator.clipboard.readText();\n      } catch (err) {\n        pasteData = clipboard;\n      }\n    } else {\n      pasteData = clipboard;\n    }\n    \n    if (!pasteData) return;\n    \n    const rows = pasteData.split('\\n').filter(row => row.trim());\n    const selectedCellsArray = Array.from(selectedCells);\n    \n    // Handle bulk paste\n    for (let i = 0; i < rows.length && i < selectedCellsArray.length; i++) {\n      const cellId = selectedCellsArray[i];\n      const [taskId, columnKey] = cellId.split('-');\n      const values = rows[i].split('\\t');\n      \n      for (let j = 0; j < values.length && (i + j) < selectedCellsArray.length; j++) {\n        const targetCellId = selectedCellsArray[i + j];\n        const [targetTaskId, targetColumnKey] = targetCellId.split('-');\n        const value = values[j].trim();\n        \n        if (value && targetColumnKey !== 'Status') {\n          await updateCell(targetTaskId, targetColumnKey, value);\n        }\n      }\n    }\n    \n    event.preventDefault();\n  }, [selectedCells, clipboard]);\n\n  // Handle delete\n  const handleDelete = useCallback(async (event) => {\n    if (selectedCells.size === 0) return;\n    \n    for (const cellId of selectedCells) {\n      const [taskId, columnKey] = cellId.split('-');\n      if (columnKey !== 'Status' && columnKey !== 'Task') {\n        await updateCell(taskId, columnKey, '');\n      }\n    }\n    \n    event.preventDefault();\n  }, [selectedCells]);\n\n  // Handle add row\n  const handleAddRow = async () => {\n    if (!hasPermission(userProfile?.role, 'ADMIN')) {\n      alert('You do not have permission to add tasks. Contact an administrator.');\n      return;\n    }\n\n    try {\n      const newTask = {\n        Task: 'New Task',\n        Project: '',\n        Deadline: new Date().toISOString().split('T')[0],\n        ResponsibleParty: '',\n        Recurring: false,\n        Interval: '',\n        FinalDate: '',\n        Priority: 'Normal',\n        Completed: false,\n        Notes: '',\n        Link: ''\n      };\n\n      const result = await sharedDataService.addTask(newTask);\n      await loadTasks();\n      console.log('Database: Added new task:', result.id);\n    } catch (error) {\n      console.error('Database: Error adding task:', error);\n      alert('Failed to add task');\n    }\n  };\n\n\n  // Auto-scroll functionality\n  const handleMouseMove = useCallback((event) => {\n    if (!containerRef.current) return;\n    \n    const container = containerRef.current;\n    const rect = container.getBoundingClientRect();\n    const scrollThreshold = 50;\n    \n    const isNearLeft = event.clientX - rect.left < scrollThreshold;\n    const isNearRight = event.clientX - rect.left > rect.width - scrollThreshold;\n    \n    if (isNearLeft && autoScrollDirection !== 'left') {\n      setAutoScrollDirection('left');\n      const interval = setInterval(() => {\n        container.scrollLeft -= 10;\n      }, 16);\n      setAutoScrollInterval(interval);\n    } else if (isNearRight && autoScrollDirection !== 'right') {\n      setAutoScrollDirection('right');\n      const interval = setInterval(() => {\n        container.scrollLeft += 10;\n      }, 16);\n      setAutoScrollInterval(interval);\n    } else if (!isNearLeft && !isNearRight && autoScrollDirection) {\n      setAutoScrollDirection(null);\n      if (autoScrollInterval) {\n        clearInterval(autoScrollInterval);\n        setAutoScrollInterval(null);\n      }\n    }\n  }, [autoScrollDirection, autoScrollInterval]);\n\n  const handleMouseLeave = useCallback(() => {\n    setAutoScrollDirection(null);\n    if (autoScrollInterval) {\n      clearInterval(autoScrollInterval);\n      setAutoScrollInterval(null);\n    }\n  }, [autoScrollInterval]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.ctrlKey || event.metaKey) {\n        switch (event.key) {\n          case 'c':\n            handleCopy(event);\n            break;\n          case 'v':\n            handlePaste(event);\n            break;\n        }\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        handleDelete(event);\n      } else if (event.key === 'Escape') {\n        setEditingCell(null);\n        setSelectedCells(new Set());\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleCopy, handlePaste, handleDelete]);\n\n  // Filter profiles\n  const filteredProfiles = profiles.filter(profile => \n    profile.name.toLowerCase().includes(peopleSearchTerm.toLowerCase()) ||\n    profile.email.toLowerCase().includes(peopleSearchTerm.toLowerCase())\n  );\n\n  useEffect(() => {\n    loadProfiles();\n    loadTasks();\n  }, []);\n\n  // Load instances when switching to sub-database tab\n  useEffect(() => {\n    if (activeTab === 'subdatabase') {\n      loadInstances();\n    }\n  }, [activeTab]);\n\n  // Auto-update instances every minute\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      console.log('Database: Auto-updating instances...');\n      try {\n        await recurringTaskGenerator.refreshAllInstances(tasks);\n        await loadInstances();\n        \n        // Update global store with fresh data\n        const allInstances = await recurringTaskGenerator.getAllTaskInstances();\n        globalTaskStore.setAllTasks([...tasks, ...allInstances]);\n        console.log('Database: Auto-update completed');\n      } catch (error) {\n        console.error('Database: Error in auto-update:', error);\n      }\n    }, 60000); // 1 minute\n\n    return () => clearInterval(interval);\n  }, [tasks]);\n\n  // Auto-update instances when any task deadline changes\n  useEffect(() => {\n    const updateInstances = async () => {\n      if (tasks.length > 0) {\n        console.log('Database: Deadline change detected, updating instances...');\n        try {\n          await recurringTaskGenerator.refreshAllInstances(tasks);\n          await loadInstances();\n          \n          // Update global store with fresh data\n          const allInstances = await recurringTaskGenerator.getAllTaskInstances();\n          globalTaskStore.setAllTasks([...tasks, ...allInstances]);\n          console.log('Database: Instance update completed');\n        } catch (error) {\n          console.error('Database: Error updating instances on deadline change:', error);\n        }\n      }\n    };\n\n    // Debounce the update to avoid excessive calls\n    const timeoutId = setTimeout(updateInstances, 1000);\n    return () => clearTimeout(timeoutId);\n  }, [tasks.map(t => t.Deadline).join(',')]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 relative\">\n      {/* Updating Overlay */}\n      {updating && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 flex flex-col items-center gap-4 border border-gray-200 dark:border-gray-700\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-4 border-blue-200 border-t-blue-600\"></div>\n            <div className=\"text-center\">\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">Updating...</p>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">Syncing with SharePoint</p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"w-full px-4 py-8\">\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">Database Management</h1>\n              <p className=\"text-gray-600 dark:text-gray-400\">Excel-like grid view with copy/paste and bulk import support</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"mb-6\">\n          <div className=\"border-b border-gray-200 dark:border-gray-700\">\n            <nav className=\"-mb-px flex space-x-8\">\n              <button\n                onClick={() => setActiveTab('sharepoint')}\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'sharepoint'\n                    ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'\n                }`}\n              >\n                SharePoint Database\n              </button>\n              <button\n                onClick={() => setActiveTab('subdatabase')}\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'subdatabase'\n                    ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'\n                }`}\n              >\n                Sub-Database\n                {instances.length > 0 && (\n                  <span className=\"ml-2 bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded-full\">\n                    {instances.length}\n                  </span>\n                )}\n              </button>\n            </nav>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"mb-6 bg-red-50 dark:bg-red-900/20 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex justify-between\">\n              <p className=\"text-red-800 dark:text-red-200\">{error}</p>\n              <button onClick={() => setError(null)} className=\"text-red-600\">✕</button>\n            </div>\n          </div>\n        )}\n\n        <div className=\"mb-6 flex justify-between items-center\">\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n            {activeTab === 'sharepoint' ? (\n              `${tasks.length} tasks • ${profiles.length} users • ${selectedCells.size} cells selected`\n            ) : (\n              `${instances.length} instances • ${profiles.length} users • ${selectedCells.size} cells selected`\n            )}\n          </div>\n          <div className=\"flex gap-2\">\n            {hasPermission(userProfile?.role, 'ADMIN') && activeTab === 'sharepoint' && (\n              <button \n                onClick={addNewRow} \n                className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium\"\n              >\n                Add Row\n              </button>\n            )}\n            {activeTab === 'subdatabase' && (\n              <div className=\"flex gap-2\">\n                <button \n                  onClick={async () => {\n                    console.log('Database: Manual refresh triggered');\n                    console.log('Database: Current tasks:', tasks.length, tasks);\n                    await recurringTaskGenerator.refreshAllInstances(tasks);\n                    await loadInstances();\n                    const allInstances = await recurringTaskGenerator.getAllTaskInstances();\n                    globalTaskStore.setAllTasks([...tasks, ...allInstances]);\n                    console.log('Database: Manual refresh completed');\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium\"\n                >\n                  Refresh Instances\n                </button>\n                <button \n                  onClick={async () => {\n                    if (window.confirm('Are you sure you want to clear all instances? This cannot be undone.')) {\n                      await recurringInstanceService.clearAllInstances();\n                      await loadInstances();\n                      const allInstances = await recurringTaskGenerator.getAllTaskInstances();\n                      globalTaskStore.setAllTasks([...tasks, ...allInstances]);\n                      console.log('Database: All instances cleared');\n                    }\n                  }}\n                  className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium\"\n                >\n                  Clear All Instances\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* People Picker Modal */}\n        {showPeoplePicker && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-2xl w-full max-h-[80vh] flex flex-col\">\n              <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Select Responsible Party</h3>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search users...\"\n                  value={peopleSearchTerm}\n                  onChange={(e) => setPeopleSearchTerm(e.target.value)}\n                  className=\"w-full px-4 py-2 border rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  autoFocus\n                />\n              </div>\n\n              {selectedPeople.length > 0 && (\n                <div className=\"p-4 border-b bg-blue-50 dark:bg-blue-900/20\">\n                  <div className=\"text-sm font-medium mb-2\">Selected ({selectedPeople.length}):</div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {selectedPeople.map(email => {\n                      const profile = profiles.find(p => p.email === email);\n                      return (\n                        <div key={email} className=\"flex items-center bg-white dark:bg-gray-700 rounded-full px-3 py-1 border border-gray-200 dark:border-gray-600\">\n                          <div className=\"w-6 h-6 rounded-full bg-blue-500 text-white flex items-center justify-center text-xs font-semibold mr-2\">\n                            {profile?.initials || '?'}\n                          </div>\n                          <span className=\"text-sm mr-2 text-gray-900 dark:text-white\">{profile?.name || email}</span>\n                          <button \n                            onClick={() => togglePersonSelection(email)}\n                            className=\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\"\n                          >\n                            ✕\n                          </button>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex-1 overflow-y-auto p-4\">\n                <div className=\"space-y-2\">\n                  {filteredProfiles.map(profile => {\n                    const isSelected = selectedPeople.includes(profile.email);\n                    return (\n                      <div\n                        key={profile.id}\n                        onClick={() => togglePersonSelection(profile.email)}\n                        className={`flex items-center p-3 rounded-lg cursor-pointer transition-colors ${\n                          isSelected \n                            ? 'bg-blue-100 dark:bg-blue-900/40 border-2 border-blue-500 dark:border-blue-400' \n                            : 'bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600'\n                        }`}\n                      >\n                        <div className=\"w-10 h-10 rounded-full bg-blue-500 text-white flex items-center justify-center font-semibold mr-3\">\n                          {profile.initials}\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">{profile.name}</div>\n                          <div className=\"text-xs text-gray-500 dark:text-gray-400\">{profile.email}</div>\n                        </div>\n                        {isSelected && <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white\">✓</div>}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              <div className=\"p-4 border-t flex justify-end gap-3\">\n                <button onClick={() => { setShowPeoplePicker(false); setPeoplePickerTaskId(null); setSelectedPeople([]); }} className=\"px-4 py-2 text-gray-600\">Cancel</button>\n                <button onClick={savePeoplePickerSelection} className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium\">Save</button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Excel-like Grid */}\n        <div \n          ref={containerRef}\n          className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-auto\"\n          onMouseMove={handleMouseMove}\n          onMouseLeave={handleMouseLeave}\n          style={{ maxHeight: '70vh' }}\n        >\n          <div className=\"inline-block min-w-full\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700 sticky top-0 z-10\">\n                <tr>\n                  {columns.map((column) => (\n                    <th \n                      key={column.key}\n                      className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase border-r border-gray-200 dark:border-gray-600\"\n                      style={{ width: column.width, minWidth: column.width }}\n                    >\n                      {column.label}\n                    </th>\n                  ))}\n                  {/* Only show Actions column in Sub-Database tab */}\n                  {activeTab === 'subdatabase' && (\n                    <th className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase w-20\">Actions</th>\n                  )}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                {(activeTab === 'sharepoint' ? tasks : instances).map((item) => {\n                  const isInstance = activeTab === 'subdatabase';\n                  return (\n                    <tr key={item.id} className={`hover:bg-gray-50 dark:hover:bg-gray-700 ${isInstance ? 'bg-blue-50/30 dark:bg-blue-900/10' : ''}`}>\n                      {columns.map((column) => {\n                        const cellId = `${item.id}-${column.key}`;\n                        const isSelected = selectedCells.has(cellId);\n                        const isEditing = editingCell === cellId;\n                        const cellValue = getCellValue(item, column, isInstance);\n                        \n                        return (\n                          <td \n                            key={column.key}\n                            className={`px-3 py-2 border-r border-gray-200 dark:border-gray-600 ${isSelected ? 'bg-blue-100 dark:bg-blue-900/30' : ''}`}\n                            style={{ width: column.width, minWidth: column.width }}\n                            onClick={(e) => hasPermission(userProfile?.role, 'ADMIN') && column.key !== 'Status' && handleCellClick(item.id, column.key, e)}\n                            onDoubleClick={() => hasPermission(userProfile?.role, 'ADMIN') && handleCellDoubleClick(item.id, column.key, isInstance)}\n                          >\n                            {isEditing ? (\n                              <div className=\"w-full\">\n                                {column.type === 'select' ? (\n                                  <select \n                                    defaultValue={cellValue} \n                                    onChange={(e) => updateCell(item.id, column.key, e.target.value, isInstance)} \n                                    className=\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\" \n                                    autoFocus\n                                  >\n                                    {column.options.map(option => (\n                                      <option key={option} value={option}>{option || 'Select'}</option>\n                                    ))}\n                                  </select>\n                                ) : column.type === 'date' ? (\n                                  <input \n                                    type=\"date\" \n                                    defaultValue={item[column.key] ? (() => {\n                                      const dateStr = item[column.key];\n                                      // If already in yyyy-MM-dd format, return as-is\n                                      if (typeof dateStr === 'string' && /^\\d{4}-\\d{2}-\\d{2}$/.test(dateStr)) {\n                                        return dateStr;\n                                      }\n                                      // Otherwise parse carefully to avoid timezone issues\n                                      const datePart = dateStr.split('T')[0];\n                                      return datePart;\n                                    })() : ''} \n                                    onBlur={(e) => updateCell(item.id, column.key, e.target.value, isInstance)} \n                                    className=\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\" \n                                    autoFocus \n                                  />\n                                ) : column.type === 'url' ? (\n                                  <input \n                                    type=\"url\" \n                                    defaultValue={item[column.key]} \n                                    onBlur={(e) => updateCell(item.id, column.key, e.target.value, isInstance)} \n                                    className=\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\" \n                                    autoFocus \n                                  />\n                                ) : column.type === 'number' ? (\n                                  <input \n                                    type=\"number\" \n                                    defaultValue={item[column.key] || ''} \n                                    onBlur={(e) => updateCell(item.id, column.key, e.target.value, isInstance)} \n                                    onKeyPress={(e) => e.key === 'Enter' && updateCell(item.id, column.key, e.target.value, isInstance)} \n                                    className=\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\" \n                                    autoFocus \n                                    min=\"1\"\n                                    placeholder=\"Enter months\"\n                                  />\n                                ) : column.key === 'Notes' ? (\n                                  <textarea \n                                    defaultValue={item[column.key]} \n                                    onBlur={(e) => updateCell(item.id, column.key, e.target.value, isInstance)} \n                                    className=\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\" \n                                    rows={2} \n                                    autoFocus \n                                  />\n                                ) : (\n                                  <input \n                                    type=\"text\" \n                                    defaultValue={item[column.key]} \n                                    onBlur={(e) => updateCell(item.id, column.key, e.target.value, isInstance)} \n                                    onKeyPress={(e) => e.key === 'Enter' && updateCell(item.id, column.key, e.target.value, isInstance)} \n                                    className=\"w-full px-2 py-1 border rounded bg-white dark:bg-gray-700 text-sm\" \n                                    autoFocus \n                                  />\n                                )}\n                              </div>\n                            ) : (\n                              <div className=\"w-full\">\n                                {column.key === 'ResponsibleParty' ? (\n                                  <div className=\"cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-600 px-2 py-1 rounded text-sm\">\n                                    {cellValue ? (\n                                      <div className=\"flex flex-wrap gap-1\">\n                                        {parseResponsibleParty(item.ResponsibleParty).map((email, idx) => {\n                                          const emailStr = String(email || '');\n                                          const profile = profiles.find(p => p.email === emailStr);\n                                          const displayName = profile?.name || (emailStr.includes('@') ? emailStr.split('@')[0] : emailStr);\n                                          return (\n                                            <div key={idx} className=\"flex items-center bg-blue-100 dark:bg-blue-900/30 rounded-full px-2 py-1\">\n                                              <div className=\"w-5 h-5 rounded-full bg-blue-500 text-white flex items-center justify-center text-xs font-semibold mr-1\">\n                                                {profile?.initials || getInitials(displayName)}\n                                              </div>\n                                              <span className=\"text-xs text-gray-900 dark:text-white\">{displayName}</span>\n                                            </div>\n                                          );\n                                        })}\n                                      </div>\n                                    ) : (\n                                      <span className=\"text-gray-500\">Click to assign</span>\n                                    )}\n                                  </div>\n                                ) : column.key === 'Priority' ? (\n                                  <span className={`px-2 py-1 text-xs rounded-full ${item.Priority === 'Urgent' ? 'bg-red-100 text-red-800' : 'bg-blue-100 text-blue-800'}`}>\n                                    {item.Priority || 'Normal'}\n                                  </span>\n                                ) : column.key === 'Status' ? (\n                                  <span className={`px-2 py-1 text-xs rounded-full ${getCalculatedStatus(item) === 'Completed' ? 'bg-green-100 text-green-800' : getCalculatedStatus(item) === 'Overdue' ? 'bg-red-100 text-red-800' : 'bg-blue-100 text-blue-800'}`}>\n                                    {getCalculatedStatus(item)}\n                                  </span>\n                                ) : column.key === 'Link' && item.Link ? (\n                                  <span className=\"text-gray-700 dark:text-gray-300 text-sm break-all\">\n                                    {typeof item.Link === 'object' && item.Link !== null ? (item.Link.Url || item.Link.Description || '') : item.Link}\n                                  </span>\n                                ) : column.key === 'Task' && isInstance ? (\n                                  <div className=\"flex items-center gap-2\">\n                                    <span className=\"text-sm text-gray-900 dark:text-white\">{item.Task}</span>\n                                    <span className=\"text-xs bg-blue-100 text-blue-800 px-1.5 py-0.5 rounded-full\">#{item.instanceNumber}</span>\n                                  </div>\n                                ) : (\n                                  <div className=\"text-sm text-gray-900 dark:text-white truncate\">\n                                    {cellValue || 'Click to edit'}\n                                  </div>\n                                )}\n                              </div>\n                            )}\n                          </td>\n                        );\n                      })}\n                      {/* Only show Actions (Delete button) in Sub-Database tab */}\n                      {activeTab === 'subdatabase' && (\n                        <td className=\"px-3 py-2\">\n                          <button \n                            onClick={() => deleteInstance(item.id)} \n                            className=\"text-red-600 hover:text-red-900 text-sm\"\n                          >\n                            Delete\n                          </button>\n                        </td>\n                      )}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n          <h3 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2\">\n            {activeTab === 'sharepoint' ? 'SharePoint Database Features:' : 'Sub-Database Features:'}\n          </h3>\n          <ul className=\"text-sm text-blue-800 dark:text-blue-200 space-y-1\">\n            <li>• <strong>Click</strong> to select cells, <strong>Ctrl+Click</strong> for multi-select</li>\n            <li>• <strong>Double-click</strong> to edit cells directly</li>\n            <li>• <strong>Ctrl+C</strong> to copy, <strong>Ctrl+V</strong> to paste</li>\n            <li>• <strong>Delete/Backspace</strong> to clear selected cells</li>\n            <li>• <strong>Hover near edges</strong> to auto-scroll horizontally</li>\n            {activeTab === 'sharepoint' ? (\n              <li>• <strong>Bulk import:</strong> Copy data from Excel and paste into the grid</li>\n            ) : (\n              <li>• <strong>Instance Management:</strong> Each instance acts independently from its parent task</li>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"h-32\"></div>\n    </div>\n  );\n};\n\nexport default Database;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}