{"ast":null,"code":"import _objectSpread from\"/Users/nic/housing-deadlines-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useMemo,useEffect}from'react';import{CalendarDaysIcon,ChevronLeftIcon,ChevronRightIcon,CheckCircleIcon,ExclamationTriangleIcon,ClockIcon,UserIcon,FolderIcon}from'@heroicons/react/24/outline';import{format,startOfMonth,endOfMonth,startOfWeek,endOfWeek,addDays,addMonths,subMonths,isSameMonth,isSameDay,isToday,parseISO,isValid}from'date-fns';import{sharedDataService}from'./sharedDataService';import{microsoftDataService}from'./microsoftDataService';import{globalTaskStore}from'./globalTaskStore';import TaskCard from'./TaskCard';import recurringTaskGenerator from'./recurringTaskGenerator';import taskUpdateService from'./taskUpdateService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CalendarDeadlinesPage(){const[tasks,setTasks]=useState([]);const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[updating,setUpdating]=useState(false);const[currentDate,setCurrentDate]=useState(new Date());const[selectedDate,setSelectedDate]=useState(null);// Toggle task completion - uses centralized update service\nconst toggleTaskCompletion=async(taskId,currentStatus)=>{const newStatus=!currentStatus;await taskUpdateService.updateTaskField(taskId,{Completed_x003f_:newStatus},()=>setUpdating(true),()=>{setUpdating(false);const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);});};// Toggle task urgency - uses centralized update service\nconst toggleTaskUrgency=async(taskId,currentUrgency)=>{const newPriority=currentUrgency?'Normal':'Urgent';await taskUpdateService.updateTaskField(taskId,{Priority:newPriority},()=>setUpdating(true),()=>{setUpdating(false);const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);});};// Delete task - uses centralized update service\nconst deleteTask=async taskId=>{await taskUpdateService.deleteTask(taskId,()=>setUpdating(true),()=>{setUpdating(false);const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);});};// Load tasks, instances, and users\nuseEffect(()=>{const loadData=async()=>{try{setLoading(true);// Subscribe to global task store updates\nconst unsubscribe=globalTaskStore.subscribe(()=>{const allTasks=globalTaskStore.getAllTasks();setTasks(allTasks);console.log('CalendarDeadlines: Updated from global store -',allTasks.length,'total items');});// Get initial data\nconst[allTasks,usersData]=await Promise.all([globalTaskStore.getAllTasks(),microsoftDataService.users.getEnterpriseUsers()]);setTasks(allTasks);setUsers(usersData);console.log('CalendarDeadlines: Loaded',allTasks.length,'total items and',usersData.length,'users');return unsubscribe;}catch(error){console.error('CalendarDeadlines: Error loading data:',error);}finally{setLoading(false);}};loadData();},[]);// Parse deadline date helper\nconst parseDeadlineDate=dateStr=>{if(!dateStr)return null;try{// Parse date string carefully to avoid timezone issues\n// If in yyyy-MM-dd format, parse components directly\nif(typeof dateStr==='string'&&dateStr.includes('-')){const datePart=dateStr.split('T')[0];// Get just the date part\nconst parts=datePart.split('-');if(parts.length===3){const year=parseInt(parts[0],10);const month=parseInt(parts[1],10)-1;// JS months are 0-indexed\nconst day=parseInt(parts[2],10);if(!isNaN(year)&&!isNaN(month)&&!isNaN(day)){// Create date at noon local time to avoid timezone shifts\nreturn new Date(year,month,day,12,0,0);}}}// Fallback to date-fns parsing for other formats\nconst parsed=parseISO(dateStr);if(isValid(parsed)){parsed.setHours(12,0,0,0);return parsed;}return null;}catch(error){return null;}};// Get calculated status\nconst getCalculatedStatus=task=>{if(task.Completed_x003f_===true||task.Completed_x003f_==='Yes'||task.Completed_x003f_==='yes'||task.Completed===true||task.Completed==='Yes'||task.Completed==='yes'){return'Completed';}const deadline=parseDeadlineDate(task.Deadline||task.deadline);if(deadline&&deadline<new Date()){return'Overdue';}return'Active';};// Convert responsible party emails to display names\nconst getResponsiblePartyNames=responsibleParty=>{if(!responsibleParty||!users||users.length===0){return responsibleParty||'Unassigned';}const emails=responsibleParty.split(';').map(email=>email.trim());const names=emails.map(email=>{const user=users.find(u=>u.mail===email||u.userPrincipalName===email||u.email===email||u.Email===email);return user?user.displayName:email;});return names.join(', ');};// Get tasks for a specific date\nconst getTasksForDate=date=>{return tasks.filter(task=>{const deadline=parseDeadlineDate(task.Deadline);return deadline&&isSameDay(deadline,date);});};// Calendar generation\nconst calendarDays=useMemo(()=>{const monthStart=startOfMonth(currentDate);const monthEnd=endOfMonth(currentDate);const startDate=startOfWeek(monthStart);const endDate=endOfWeek(monthEnd);const days=[];let day=startDate;while(day<=endDate){const tasksForDay=getTasksForDate(day);days.push({date:day,tasks:tasksForDay,isCurrentMonth:isSameMonth(day,currentDate),isToday:isToday(day)});day=addDays(day,1);}return days;},[currentDate,tasks]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Loading tasks...\"})]})});}// Get status color for task\nconst getStatusColor=status=>{switch(status){case'Completed':return'bg-green-500';case'Overdue':return'bg-red-500';case'Active':return'bg-blue-500';default:return'bg-gray-500';}};// Get status icon\nconst getStatusIcon=status=>{switch(status){case'Completed':return/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"w-3 h-3 text-white\"});case'Overdue':return/*#__PURE__*/_jsx(ExclamationTriangleIcon,{className:\"w-3 h-3 text-white\"});case'Active':return/*#__PURE__*/_jsx(ClockIcon,{className:\"w-3 h-3 text-white\"});default:return/*#__PURE__*/_jsx(ClockIcon,{className:\"w-3 h-3 text-white\"});}};const navigateMonth=direction=>{if(direction==='prev'){setCurrentDate(subMonths(currentDate,1));}else{setCurrentDate(addMonths(currentDate,1));}};const weekDays=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 dark:from-gray-900 dark:via-blue-950/30 dark:to-indigo-950/20 relative\",children:[updating&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 flex flex-col items-center gap-4 border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-4 border-blue-200 border-t-blue-600\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Updating...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-1\",children:\"Syncing with database\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold bg-gradient-to-r from-gray-900 via-blue-900 to-indigo-900 dark:from-white dark:via-blue-100 dark:to-indigo-100 bg-clip-text text-transparent\",children:\"Calendar View\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xl font-bold text-gray-900 dark:text-white\",children:tasks.length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\",children:\"Total Tasks\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-6\",onClick:e=>{// Only deselect if clicking on the container itself, not on child elements\nif(e.target===e.currentTarget){setSelectedDate(null);}},children:[/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateMonth('prev'),className:\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\",children:/*#__PURE__*/_jsx(ChevronLeftIcon,{className:\"w-5 h-5 text-gray-600 dark:text-gray-400\"})}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold text-gray-900 dark:text-white\",children:format(currentDate,'MMMM yyyy')}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateMonth('next'),className:\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\",children:/*#__PURE__*/_jsx(ChevronRightIcon,{className:\"w-5 h-5 text-gray-600 dark:text-gray-400\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-7 gap-1\",children:[weekDays.map(day=>/*#__PURE__*/_jsx(\"div\",{className:\"p-2 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide\",children:day},day)),calendarDays.map((day,index)=>{const isSelected=selectedDate&&isSameDay(day.date,selectedDate);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-[80px] p-2 border border-gray-200/50 dark:border-gray-600/50 cursor-pointer transition-all rounded-lg \".concat(day.isCurrentMonth?'bg-white/60 dark:bg-gray-800/60 hover:bg-white dark:hover:bg-gray-800':'bg-gray-50/50 dark:bg-gray-900/50 text-gray-400 dark:text-gray-500',\" \").concat(day.isToday?'ring-2 ring-blue-500 ring-opacity-50 bg-blue-50/50 dark:bg-blue-950/30':'',\" \").concat(isSelected?'ring-2 ring-blue-500 bg-blue-50 dark:bg-blue-950/30':''),onClick:()=>setSelectedDate(day.date),onMouseEnter:()=>!selectedDate&&setSelectedDate(day.date),children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium mb-1 \".concat(day.isToday?'text-blue-600 dark:text-blue-400':day.isCurrentMonth?'text-gray-900 dark:text-white':'text-gray-400 dark:text-gray-500'),children:format(day.date,'d')}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1\",children:[day.tasks.slice(0,2).map((task,taskIndex)=>{const status=getCalculatedStatus(task);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1 px-1 py-0.5 rounded text-xs text-white \".concat(getStatusColor(status)),title:\"\".concat(task.Task||'Untitled Task',\" - \").concat(status),children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-1.5 h-1.5 rounded-full bg-white/80\"}),/*#__PURE__*/_jsx(\"span\",{className:\"truncate text-xs\",children:(task.Task||'Untitled Task').substring(0,12)})]},taskIndex);}),day.tasks.length>2&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 px-1\",children:[\"+\",day.tasks.length-2,\" more\"]})]})]},index);})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"lg:col-span-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-4 h-fit\",children:selectedDate?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(CalendarDaysIcon,{className:\"w-5 h-5 text-blue-500\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:format(selectedDate,'MMM dd, yyyy')})]}),getTasksForDate(selectedDate).length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:getTasksForDate(selectedDate).map(task=>{// Add daysUntil calculation for TaskCard\nconst deadline=parseISO(task.Deadline);const today=new Date();const daysUntil=deadline?Math.ceil((deadline-today)/(1000*60*60*24)):null;return/*#__PURE__*/_jsx(TaskCard,{task:_objectSpread(_objectSpread({},task),{},{daysUntil:daysUntil}),showCompletion:true,showUrgency:true,showDelete:true,onToggleCompletion:toggleTaskCompletion,onToggleUrgency:toggleTaskUrgency,onDelete:deleteTask,className:\"backdrop-blur-sm hover:scale-[1.02]\",users:users},task.id);})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(CalendarDaysIcon,{className:\"w-8 h-8 text-gray-400 dark:text-gray-500 mx-auto mb-3\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:\"No tasks scheduled\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(CalendarDaysIcon,{className:\"w-8 h-8 text-gray-400 dark:text-gray-500 mx-auto mb-3\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:\"Select a date to view tasks\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-4 mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 uppercase tracking-wide\",children:\"Status Legend\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-green-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-600 dark:text-gray-400\",children:\"Completed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-red-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-600 dark:text-gray-400\",children:\"Overdue\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-blue-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-600 dark:text-gray-400\",children:\"Active\"})]})]})]})]})]})]})]});}export default CalendarDeadlinesPage;","map":{"version":3,"names":["React","useState","useMemo","useEffect","CalendarDaysIcon","ChevronLeftIcon","ChevronRightIcon","CheckCircleIcon","ExclamationTriangleIcon","ClockIcon","UserIcon","FolderIcon","format","startOfMonth","endOfMonth","startOfWeek","endOfWeek","addDays","addMonths","subMonths","isSameMonth","isSameDay","isToday","parseISO","isValid","sharedDataService","microsoftDataService","globalTaskStore","TaskCard","recurringTaskGenerator","taskUpdateService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CalendarDeadlinesPage","tasks","setTasks","users","setUsers","loading","setLoading","updating","setUpdating","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","toggleTaskCompletion","taskId","currentStatus","newStatus","updateTaskField","Completed_x003f_","allTasks","getAllTasks","toggleTaskUrgency","currentUrgency","newPriority","Priority","deleteTask","loadData","unsubscribe","subscribe","console","log","length","usersData","Promise","all","getEnterpriseUsers","error","parseDeadlineDate","dateStr","includes","datePart","split","parts","year","parseInt","month","day","isNaN","parsed","setHours","getCalculatedStatus","task","Completed","deadline","Deadline","getResponsiblePartyNames","responsibleParty","emails","map","email","trim","names","user","find","u","mail","userPrincipalName","Email","displayName","join","getTasksForDate","date","filter","calendarDays","monthStart","monthEnd","startDate","endDate","days","tasksForDay","push","isCurrentMonth","className","children","getStatusColor","status","getStatusIcon","navigateMonth","direction","weekDays","onClick","e","target","currentTarget","index","isSelected","concat","onMouseEnter","slice","taskIndex","title","Task","substring","today","daysUntil","Math","ceil","_objectSpread","showCompletion","showUrgency","showDelete","onToggleCompletion","onToggleUrgency","onDelete","id"],"sources":["/Users/nic/housing-deadlines-app/VERSION_2.2.0_BACKUP/src/CalendarDeadlinesPage.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { \n  CalendarDaysIcon, \n  ChevronLeftIcon, \n  ChevronRightIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  UserIcon,\n  FolderIcon\n} from '@heroicons/react/24/outline';\nimport { format, startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays, addMonths, subMonths, isSameMonth, isSameDay, isToday, parseISO, isValid } from 'date-fns';\nimport { sharedDataService } from './sharedDataService';\nimport { microsoftDataService } from './microsoftDataService';\nimport { globalTaskStore } from './globalTaskStore';\nimport TaskCard from './TaskCard';\nimport recurringTaskGenerator from './recurringTaskGenerator';\nimport taskUpdateService from './taskUpdateService';\n\nfunction CalendarDeadlinesPage() {\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Toggle task completion - uses centralized update service\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\n    const newStatus = !currentStatus;\n    \n    await taskUpdateService.updateTaskField(\n      taskId,\n      { Completed_x003f_: newStatus },\n      () => setUpdating(true),\n      () => {\n        setUpdating(false);\n        const allTasks = globalTaskStore.getAllTasks();\n        setTasks(allTasks);\n      }\n    );\n  };\n\n  // Toggle task urgency - uses centralized update service\n  const toggleTaskUrgency = async (taskId, currentUrgency) => {\n    const newPriority = currentUrgency ? 'Normal' : 'Urgent';\n    \n    await taskUpdateService.updateTaskField(\n      taskId,\n      { Priority: newPriority },\n      () => setUpdating(true),\n      () => {\n        setUpdating(false);\n        const allTasks = globalTaskStore.getAllTasks();\n        setTasks(allTasks);\n      }\n    );\n  };\n\n  // Delete task - uses centralized update service\n  const deleteTask = async (taskId) => {\n    await taskUpdateService.deleteTask(\n      taskId,\n      () => setUpdating(true),\n      () => {\n        setUpdating(false);\n        const allTasks = globalTaskStore.getAllTasks();\n        setTasks(allTasks);\n      }\n    );\n  };\n\n  // Load tasks, instances, and users\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        \n        // Subscribe to global task store updates\n        const unsubscribe = globalTaskStore.subscribe(() => {\n          const allTasks = globalTaskStore.getAllTasks();\n          setTasks(allTasks);\n          console.log('CalendarDeadlines: Updated from global store -', allTasks.length, 'total items');\n        });\n        \n        // Get initial data\n        const [allTasks, usersData] = await Promise.all([\n          globalTaskStore.getAllTasks(),\n          microsoftDataService.users.getEnterpriseUsers()\n        ]);\n        setTasks(allTasks);\n        setUsers(usersData);\n        console.log('CalendarDeadlines: Loaded', allTasks.length, 'total items and', usersData.length, 'users');\n        \n        return unsubscribe;\n      } catch (error) {\n        console.error('CalendarDeadlines: Error loading data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadData();\n  }, []);\n\n  // Parse deadline date helper\n  const parseDeadlineDate = (dateStr) => {\n    if (!dateStr) return null;\n    try {\n      // Parse date string carefully to avoid timezone issues\n      // If in yyyy-MM-dd format, parse components directly\n      if (typeof dateStr === 'string' && dateStr.includes('-')) {\n        const datePart = dateStr.split('T')[0]; // Get just the date part\n        const parts = datePart.split('-');\n        if (parts.length === 3) {\n          const year = parseInt(parts[0], 10);\n          const month = parseInt(parts[1], 10) - 1; // JS months are 0-indexed\n          const day = parseInt(parts[2], 10);\n          \n          if (!isNaN(year) && !isNaN(month) && !isNaN(day)) {\n            // Create date at noon local time to avoid timezone shifts\n            return new Date(year, month, day, 12, 0, 0);\n          }\n        }\n      }\n      \n      // Fallback to date-fns parsing for other formats\n      const parsed = parseISO(dateStr);\n      if (isValid(parsed)) {\n        parsed.setHours(12, 0, 0, 0);\n        return parsed;\n      }\n      \n      return null;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  // Get calculated status\n  const getCalculatedStatus = (task) => {\n    if (task.Completed_x003f_ === true || task.Completed_x003f_ === 'Yes' || task.Completed_x003f_ === 'yes' ||\n        task.Completed === true || task.Completed === 'Yes' || task.Completed === 'yes') {\n      return 'Completed';\n    }\n    \n    const deadline = parseDeadlineDate(task.Deadline || task.deadline);\n    if (deadline && deadline < new Date()) {\n      return 'Overdue';\n    }\n    \n    return 'Active';\n  };\n\n  // Convert responsible party emails to display names\n  const getResponsiblePartyNames = (responsibleParty) => {\n    if (!responsibleParty || !users || users.length === 0) {\n      return responsibleParty || 'Unassigned';\n    }\n\n    const emails = responsibleParty.split(';').map(email => email.trim());\n    const names = emails.map(email => {\n      const user = users.find(u => \n        u.mail === email || \n        u.userPrincipalName === email || \n        u.email === email || \n        u.Email === email\n      );\n      return user ? user.displayName : email;\n    });\n\n    return names.join(', ');\n  };\n\n  // Get tasks for a specific date\n  const getTasksForDate = (date) => {\n    return tasks.filter(task => {\n      const deadline = parseDeadlineDate(task.Deadline);\n      return deadline && isSameDay(deadline, date);\n    });\n  };\n\n  // Calendar generation\n  const calendarDays = useMemo(() => {\n    const monthStart = startOfMonth(currentDate);\n    const monthEnd = endOfMonth(currentDate);\n    const startDate = startOfWeek(monthStart);\n    const endDate = endOfWeek(monthEnd);\n\n    const days = [];\n    let day = startDate;\n\n    while (day <= endDate) {\n      const tasksForDay = getTasksForDate(day);\n      days.push({\n        date: day,\n        tasks: tasksForDay,\n        isCurrentMonth: isSameMonth(day, currentDate),\n        isToday: isToday(day)\n      });\n      day = addDays(day, 1);\n    }\n\n    return days;\n  }, [currentDate, tasks]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading tasks...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Get status color for task\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'Completed':\n        return 'bg-green-500';\n      case 'Overdue':\n        return 'bg-red-500';\n      case 'Active':\n        return 'bg-blue-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  // Get status icon\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'Completed':\n        return <CheckCircleIcon className=\"w-3 h-3 text-white\" />;\n      case 'Overdue':\n        return <ExclamationTriangleIcon className=\"w-3 h-3 text-white\" />;\n      case 'Active':\n        return <ClockIcon className=\"w-3 h-3 text-white\" />;\n      default:\n        return <ClockIcon className=\"w-3 h-3 text-white\" />;\n    }\n  };\n\n  const navigateMonth = (direction) => {\n    if (direction === 'prev') {\n      setCurrentDate(subMonths(currentDate, 1));\n    } else {\n      setCurrentDate(addMonths(currentDate, 1));\n    }\n  };\n\n  const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/20 dark:from-gray-900 dark:via-blue-950/30 dark:to-indigo-950/20 relative\">\n      {/* Updating Overlay */}\n      {updating && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 flex flex-col items-center gap-4 border border-gray-200 dark:border-gray-700\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-4 border-blue-200 border-t-blue-600\"></div>\n            <div className=\"text-center\">\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">Updating...</p>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">Syncing with database</p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"max-w-7xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-gray-900 via-blue-900 to-indigo-900 dark:from-white dark:via-blue-100 dark:to-indigo-100 bg-clip-text text-transparent\">\n              Calendar View\n            </h1>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-xl font-bold text-gray-900 dark:text-white\">\n              {tasks.length}\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\">\n              Total Tasks\n            </div>\n          </div>\n        </div>\n\n        {/* Main Layout */}\n        <div \n          className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\"\n          onClick={(e) => {\n            // Only deselect if clicking on the container itself, not on child elements\n            if (e.target === e.currentTarget) {\n              setSelectedDate(null);\n            }\n          }}\n        >\n\n          {/* Calendar Section */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <button\n                  onClick={() => navigateMonth('prev')}\n                  className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n                >\n                  <ChevronLeftIcon className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\n                </button>\n                \n                <h2 className=\"text-lg font-bold text-gray-900 dark:text-white\">\n                  {format(currentDate, 'MMMM yyyy')}\n                </h2>\n                \n                <button\n                  onClick={() => navigateMonth('next')}\n                  className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n                >\n                  <ChevronRightIcon className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\n                </button>\n              </div>\n\n              {/* Calendar Grid */}\n              <div className=\"grid grid-cols-7 gap-1\">\n                {/* Week day headers */}\n                {weekDays.map(day => (\n                  <div key={day} className=\"p-2 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide\">\n                    {day}\n                  </div>\n                ))}\n\n                {/* Calendar days */}\n                {calendarDays.map((day, index) => {\n                  const isSelected = selectedDate && isSameDay(day.date, selectedDate);\n\n                  return (\n                    <div\n                      key={index}\n                      className={`min-h-[80px] p-2 border border-gray-200/50 dark:border-gray-600/50 cursor-pointer transition-all rounded-lg ${\n                        day.isCurrentMonth \n                          ? 'bg-white/60 dark:bg-gray-800/60 hover:bg-white dark:hover:bg-gray-800' \n                          : 'bg-gray-50/50 dark:bg-gray-900/50 text-gray-400 dark:text-gray-500'\n                      } ${\n                        day.isToday \n                          ? 'ring-2 ring-blue-500 ring-opacity-50 bg-blue-50/50 dark:bg-blue-950/30' \n                          : ''\n                      } ${\n                        isSelected \n                          ? 'ring-2 ring-blue-500 bg-blue-50 dark:bg-blue-950/30' \n                          : ''\n                      }`}\n                      onClick={() => setSelectedDate(day.date)}\n                      onMouseEnter={() => !selectedDate && setSelectedDate(day.date)}\n                    >\n                      <div className={`text-sm font-medium mb-1 ${\n                        day.isToday \n                          ? 'text-blue-600 dark:text-blue-400' \n                          : day.isCurrentMonth \n                            ? 'text-gray-900 dark:text-white' \n                            : 'text-gray-400 dark:text-gray-500'\n                      }`}>\n                        {format(day.date, 'd')}\n                      </div>\n                      \n                      {/* Task indicators */}\n                      <div className=\"space-y-1\">\n                        {day.tasks.slice(0, 2).map((task, taskIndex) => {\n                          const status = getCalculatedStatus(task);\n                          return (\n                            <div\n                              key={taskIndex}\n                              className={`flex items-center gap-1 px-1 py-0.5 rounded text-xs text-white ${getStatusColor(status)}`}\n                              title={`${task.Task || 'Untitled Task'} - ${status}`}\n                            >\n                              <div className=\"w-1.5 h-1.5 rounded-full bg-white/80\"></div>\n                              <span className=\"truncate text-xs\">\n                                {(task.Task || 'Untitled Task').substring(0, 12)}\n                              </span>\n                            </div>\n                          );\n                        })}\n                        {day.tasks.length > 2 && (\n                          <div className=\"text-xs text-gray-500 dark:text-gray-400 px-1\">\n                            +{day.tasks.length - 2} more\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n\n          {/* Task Details Panel */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-4 h-fit\">\n              {selectedDate ? (\n                <>\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <CalendarDaysIcon className=\"w-5 h-5 text-blue-500\" />\n                    <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                      {format(selectedDate, 'MMM dd, yyyy')}\n                    </h2>\n                  </div>\n                  \n                  {getTasksForDate(selectedDate).length > 0 ? (\n                    <div className=\"space-y-3\">\n                      {getTasksForDate(selectedDate).map(task => {\n                        // Add daysUntil calculation for TaskCard\n                        const deadline = parseISO(task.Deadline);\n                        const today = new Date();\n                        const daysUntil = deadline ? Math.ceil((deadline - today) / (1000 * 60 * 60 * 24)) : null;\n                        \n                        return (\n                <TaskCard\n                  key={task.id}\n                  task={{\n                    ...task,\n                    daysUntil: daysUntil\n                  }}\n                  showCompletion={true}\n                  showUrgency={true}\n                  showDelete={true}\n                  onToggleCompletion={toggleTaskCompletion}\n                  onToggleUrgency={toggleTaskUrgency}\n                  onDelete={deleteTask}\n                  className=\"backdrop-blur-sm hover:scale-[1.02]\"\n                  users={users}\n                />\n                        );\n                      })}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <CalendarDaysIcon className=\"w-8 h-8 text-gray-400 dark:text-gray-500 mx-auto mb-3\" />\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">No tasks scheduled</p>\n                    </div>\n                  )}\n                </>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <CalendarDaysIcon className=\"w-8 h-8 text-gray-400 dark:text-gray-500 mx-auto mb-3\" />\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Select a date to view tasks</p>\n                </div>\n              )}\n            </div>\n\n            {/* Status Legend */}\n            <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-xl shadow-lg border border-white/20 dark:border-gray-700/50 p-4 mt-4\">\n              <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 uppercase tracking-wide\">Status Legend</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                  <span className=\"text-xs text-gray-600 dark:text-gray-400\">Completed</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n                  <span className=\"text-xs text-gray-600 dark:text-gray-400\">Overdue</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n                  <span className=\"text-xs text-gray-600 dark:text-gray-400\">Active</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CalendarDeadlinesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}