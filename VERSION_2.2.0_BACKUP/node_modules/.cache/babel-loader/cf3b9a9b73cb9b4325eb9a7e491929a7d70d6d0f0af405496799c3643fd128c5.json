{"ast":null,"code":"import _objectSpread from\"/Users/nic/housing-deadlines-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{UserGroupIcon,ShieldCheckIcon,BuildingOfficeIcon,CheckIcon}from'@heroicons/react/24/outline';import{microsoftDataService}from'./microsoftDataService';import{useAuth}from'./Auth';// Department constants\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DEPARTMENTS={DEVELOPMENT:'development',ACCOUNTING:'accounting',COMPLIANCE:'compliance',MANAGEMENT:'management'};const DEPARTMENT_NAMES={[DEPARTMENTS.DEVELOPMENT]:'Development',[DEPARTMENTS.ACCOUNTING]:'Accounting',[DEPARTMENTS.COMPLIANCE]:'Compliance',[DEPARTMENTS.MANAGEMENT]:'Management'};const DEPARTMENT_COLORS={[DEPARTMENTS.DEVELOPMENT]:'bg-blue-500',[DEPARTMENTS.ACCOUNTING]:'bg-green-500',[DEPARTMENTS.COMPLIANCE]:'bg-purple-500',[DEPARTMENTS.MANAGEMENT]:'bg-orange-500'};// Role constants\nconst ROLES={ADMIN:'ADMIN',VIEWER:'VIEWER'};const ROLE_NAMES={[ROLES.ADMIN]:'Admin',[ROLES.VIEWER]:'Viewer'};const ROLE_DESCRIPTIONS={[ROLES.ADMIN]:'Can view and edit all data',[ROLES.VIEWER]:'Can only view data'};const ROLE_COLORS={[ROLES.ADMIN]:'bg-red-500',[ROLES.VIEWER]:'bg-blue-500'};function UsersPage(){const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const{userProfile,hasPermission}=useAuth();// Local storage key for user assignments\nconst USER_ASSIGNMENTS_KEY='user_assignments';// Load enterprise users and local assignments\nuseEffect(()=>{const loadUsers=async()=>{try{setLoading(true);// Get enterprise users from Microsoft Graph\nconst usersData=await microsoftDataService.users.getEnterpriseUsers();// Load local assignments from localStorage\nconst localAssignments=JSON.parse(localStorage.getItem(USER_ASSIGNMENTS_KEY)||'{}');// Merge enterprise users with local assignments\nconst usersWithAssignments=usersData.map(user=>{var _localAssignments$use,_localAssignments$use2;return _objectSpread(_objectSpread({},user),{},{departments:((_localAssignments$use=localAssignments[user.id])===null||_localAssignments$use===void 0?void 0:_localAssignments$use.departments)||[],role:((_localAssignments$use2=localAssignments[user.id])===null||_localAssignments$use2===void 0?void 0:_localAssignments$use2.role)||ROLES.VIEWER});});setUsers(usersWithAssignments);console.log('UsersPage: Loaded',usersData.length,'enterprise users with local assignments');}catch(error){console.error('UsersPage: Error loading enterprise users:',error);}finally{setLoading(false);}};loadUsers();},[]);// Handle department toggle\nconst handleDepartmentToggle=(userId,department)=>{const user=users.find(u=>u.id===userId);const currentDepartments=user.departments||[];const newDepartments=currentDepartments.includes(department)?currentDepartments.filter(d=>d!==department):[...currentDepartments,department];// Update local state\nsetUsers(users.map(u=>u.id===userId?_objectSpread(_objectSpread({},u),{},{departments:newDepartments}):u));// Save to localStorage\nconst localAssignments=JSON.parse(localStorage.getItem(USER_ASSIGNMENTS_KEY)||'{}');localAssignments[userId]=_objectSpread(_objectSpread({},localAssignments[userId]),{},{departments:newDepartments});localStorage.setItem(USER_ASSIGNMENTS_KEY,JSON.stringify(localAssignments));console.log('UsersPage: Updated user departments locally:',userId,newDepartments);};// Handle role change\nconst handleRoleChange=(userId,newRole)=>{// Update local state\nsetUsers(users.map(u=>u.id===userId?_objectSpread(_objectSpread({},u),{},{role:newRole}):u));// Save to localStorage\nconst localAssignments=JSON.parse(localStorage.getItem(USER_ASSIGNMENTS_KEY)||'{}');localAssignments[userId]=_objectSpread(_objectSpread({},localAssignments[userId]),{},{role:newRole});localStorage.setItem(USER_ASSIGNMENTS_KEY,JSON.stringify(localAssignments));console.log('UsersPage: Updated user role locally:',userId,newRole);};// Get department badge color\nconst getDepartmentBadgeColor=department=>{return DEPARTMENT_COLORS[department]||'bg-gray-500';};// Get role badge color\nconst getRoleBadgeColor=role=>{return ROLE_COLORS[role]||'bg-gray-500';};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Loading users...\"})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto space-y-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 dark:text-white\",children:\"User Management\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 mt-1\",children:\"Assign departments to enterprise users\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Enterprise Users\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"divide-y divide-gray-200 dark:divide-gray-700\",children:users.map(user=>/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-10 h-10 bg-blue-100 dark:bg-blue-900/30 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(UserGroupIcon,{className:\"w-5 h-5 text-blue-600 dark:text-blue-400\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-gray-900 dark:text-white\",children:user.displayName||user.DisplayName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:user.email||user.Email})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-1\",children:Object.entries(ROLE_NAMES).map(_ref=>{let[key,name]=_ref;const isSelected=user.role===key;return/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRoleChange(user.id,key),className:\"px-3 py-1 rounded-full text-sm font-medium transition-colors \".concat(isSelected?\"\".concat(getRoleBadgeColor(key),\" text-white\"):'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'),children:name},key);})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-px h-6 bg-gray-300 dark:bg-gray-600\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-1\",children:Object.entries(DEPARTMENT_NAMES).map(_ref2=>{let[key,name]=_ref2;const isAssigned=(user.departments||[]).includes(key);return/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDepartmentToggle(user.id,key),className:\"px-3 py-1 rounded-full text-sm font-medium transition-colors \".concat(isAssigned?\"\".concat(getDepartmentBadgeColor(key),\" text-white\"):'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'),children:name},key);})})]})]})},user.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-blue-100 dark:bg-blue-900/30 rounded-full\",children:/*#__PURE__*/_jsx(UserGroupIcon,{className:\"w-6 h-6 text-blue-600 dark:text-blue-400\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:users.length}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Enterprise Users\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-red-100 dark:bg-red-900/30 rounded-full\",children:/*#__PURE__*/_jsx(ShieldCheckIcon,{className:\"w-6 h-6 text-red-600 dark:text-red-400\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:users.filter(u=>u.role===ROLES.ADMIN).length}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Admins\"})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\",children:Object.entries(DEPARTMENT_NAMES).map(_ref3=>{let[key,name]=_ref3;const departmentMembers=users.filter(user=>(user.departments||[]).includes(key));return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-3 rounded-full \".concat(getDepartmentBadgeColor(key)),children:/*#__PURE__*/_jsx(BuildingOfficeIcon,{className:\"w-6 h-6 text-white\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-900 dark:text-white\",children:name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:[departmentMembers.length,\" member\",departmentMembers.length!==1?'s':'']})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:departmentMembers.length>0?departmentMembers.map(member=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 p-2 bg-gray-50 dark:bg-gray-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 bg-blue-100 dark:bg-blue-900/30 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(UserGroupIcon,{className:\"w-3 h-3 text-blue-600 dark:text-blue-400\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-900 dark:text-white truncate\",children:member.displayName||member.DisplayName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 truncate\",children:member.email||member.Email})]}),/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full text-xs font-medium text-white \".concat(getRoleBadgeColor(member.role)),children:ROLE_NAMES[member.role]})]},member.id)):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400 italic\",children:\"No members assigned\"})})]},key);})})]})});}export default UsersPage;","map":{"version":3,"names":["React","useState","useEffect","UserGroupIcon","ShieldCheckIcon","BuildingOfficeIcon","CheckIcon","microsoftDataService","useAuth","jsx","_jsx","jsxs","_jsxs","DEPARTMENTS","DEVELOPMENT","ACCOUNTING","COMPLIANCE","MANAGEMENT","DEPARTMENT_NAMES","DEPARTMENT_COLORS","ROLES","ADMIN","VIEWER","ROLE_NAMES","ROLE_DESCRIPTIONS","ROLE_COLORS","UsersPage","users","setUsers","loading","setLoading","userProfile","hasPermission","USER_ASSIGNMENTS_KEY","loadUsers","usersData","getEnterpriseUsers","localAssignments","JSON","parse","localStorage","getItem","usersWithAssignments","map","user","_localAssignments$use","_localAssignments$use2","_objectSpread","departments","id","role","console","log","length","error","handleDepartmentToggle","userId","department","find","u","currentDepartments","newDepartments","includes","filter","d","setItem","stringify","handleRoleChange","newRole","getDepartmentBadgeColor","getRoleBadgeColor","className","children","displayName","DisplayName","email","Email","Object","entries","_ref","key","name","isSelected","onClick","concat","_ref2","isAssigned","_ref3","departmentMembers","member"],"sources":["/Users/nic/housing-deadlines-app/VERSION_2.2.0_BACKUP/src/UsersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  UserGroupIcon, \n  ShieldCheckIcon, \n  BuildingOfficeIcon,\n  CheckIcon\n} from '@heroicons/react/24/outline';\nimport { microsoftDataService } from './microsoftDataService';\nimport { useAuth } from './Auth';\n\n// Department constants\nconst DEPARTMENTS = {\n  DEVELOPMENT: 'development',\n  ACCOUNTING: 'accounting', \n  COMPLIANCE: 'compliance',\n  MANAGEMENT: 'management'\n};\n\nconst DEPARTMENT_NAMES = {\n  [DEPARTMENTS.DEVELOPMENT]: 'Development',\n  [DEPARTMENTS.ACCOUNTING]: 'Accounting',\n  [DEPARTMENTS.COMPLIANCE]: 'Compliance',\n  [DEPARTMENTS.MANAGEMENT]: 'Management'\n};\n\nconst DEPARTMENT_COLORS = {\n  [DEPARTMENTS.DEVELOPMENT]: 'bg-blue-500',\n  [DEPARTMENTS.ACCOUNTING]: 'bg-green-500',\n  [DEPARTMENTS.COMPLIANCE]: 'bg-purple-500',\n  [DEPARTMENTS.MANAGEMENT]: 'bg-orange-500'\n};\n\n// Role constants\nconst ROLES = {\n  ADMIN: 'ADMIN',\n  VIEWER: 'VIEWER'\n};\n\nconst ROLE_NAMES = {\n  [ROLES.ADMIN]: 'Admin',\n  [ROLES.VIEWER]: 'Viewer'\n};\n\nconst ROLE_DESCRIPTIONS = {\n  [ROLES.ADMIN]: 'Can view and edit all data',\n  [ROLES.VIEWER]: 'Can only view data'\n};\n\nconst ROLE_COLORS = {\n  [ROLES.ADMIN]: 'bg-red-500',\n  [ROLES.VIEWER]: 'bg-blue-500'\n};\n\nfunction UsersPage() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { userProfile, hasPermission } = useAuth();\n\n  // Local storage key for user assignments\n  const USER_ASSIGNMENTS_KEY = 'user_assignments';\n\n  // Load enterprise users and local assignments\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        setLoading(true);\n        // Get enterprise users from Microsoft Graph\n        const usersData = await microsoftDataService.users.getEnterpriseUsers();\n        \n        // Load local assignments from localStorage\n        const localAssignments = JSON.parse(localStorage.getItem(USER_ASSIGNMENTS_KEY) || '{}');\n        \n        // Merge enterprise users with local assignments\n        const usersWithAssignments = usersData.map(user => ({\n          ...user,\n          departments: localAssignments[user.id]?.departments || [],\n          role: localAssignments[user.id]?.role || ROLES.VIEWER\n        }));\n        \n        setUsers(usersWithAssignments);\n        console.log('UsersPage: Loaded', usersData.length, 'enterprise users with local assignments');\n      } catch (error) {\n        console.error('UsersPage: Error loading enterprise users:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUsers();\n  }, []);\n\n  // Handle department toggle\n  const handleDepartmentToggle = (userId, department) => {\n    const user = users.find(u => u.id === userId);\n    const currentDepartments = user.departments || [];\n    const newDepartments = currentDepartments.includes(department)\n      ? currentDepartments.filter(d => d !== department)\n      : [...currentDepartments, department];\n\n    // Update local state\n    setUsers(users.map(u => \n      u.id === userId ? { ...u, departments: newDepartments } : u\n    ));\n\n    // Save to localStorage\n    const localAssignments = JSON.parse(localStorage.getItem(USER_ASSIGNMENTS_KEY) || '{}');\n    localAssignments[userId] = {\n      ...localAssignments[userId],\n      departments: newDepartments\n    };\n    localStorage.setItem(USER_ASSIGNMENTS_KEY, JSON.stringify(localAssignments));\n\n    console.log('UsersPage: Updated user departments locally:', userId, newDepartments);\n  };\n\n  // Handle role change\n  const handleRoleChange = (userId, newRole) => {\n    // Update local state\n    setUsers(users.map(u => \n      u.id === userId ? { ...u, role: newRole } : u\n    ));\n\n    // Save to localStorage\n    const localAssignments = JSON.parse(localStorage.getItem(USER_ASSIGNMENTS_KEY) || '{}');\n    localAssignments[userId] = {\n      ...localAssignments[userId],\n      role: newRole\n    };\n    localStorage.setItem(USER_ASSIGNMENTS_KEY, JSON.stringify(localAssignments));\n\n    console.log('UsersPage: Updated user role locally:', userId, newRole);\n  };\n\n  // Get department badge color\n  const getDepartmentBadgeColor = (department) => {\n    return DEPARTMENT_COLORS[department] || 'bg-gray-500';\n  };\n\n  // Get role badge color\n  const getRoleBadgeColor = (role) => {\n    return ROLE_COLORS[role] || 'bg-gray-500';\n  };\n\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading users...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">User Management</h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              Assign departments to enterprise users\n            </p>\n          </div>\n        </div>\n\n        {/* Users List */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Enterprise Users</h2>\n          </div>\n          <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n            {users.map(user => (\n              <div key={user.id} className=\"px-6 py-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900/30 rounded-full flex items-center justify-center\">\n                      <UserGroupIcon className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900 dark:text-white\">{user.displayName || user.DisplayName}</h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">{user.email || user.Email}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-6\">\n                    {/* Role Selection */}\n                    <div className=\"flex gap-1\">\n                      {Object.entries(ROLE_NAMES).map(([key, name]) => {\n                        const isSelected = user.role === key;\n                        return (\n                          <button\n                            key={key}\n                            onClick={() => handleRoleChange(user.id, key)}\n                            className={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${\n                              isSelected\n                                ? `${getRoleBadgeColor(key)} text-white`\n                                : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                            }`}\n                          >\n                            {name}\n                          </button>\n                        );\n                      })}\n                    </div>\n\n                    {/* Separator */}\n                    <div className=\"w-px h-6 bg-gray-300 dark:bg-gray-600\"></div>\n\n                    {/* Department Selection Buttons */}\n                    <div className=\"flex gap-1\">\n                      {Object.entries(DEPARTMENT_NAMES).map(([key, name]) => {\n                        const isAssigned = (user.departments || []).includes(key);\n                        return (\n                          <button\n                            key={key}\n                            onClick={() => handleDepartmentToggle(user.id, key)}\n                            className={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${\n                              isAssigned\n                                ? `${getDepartmentBadgeColor(key)} text-white`\n                                : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                            }`}\n                          >\n                            {name}\n                          </button>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n\n        {/* Summary Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-3 bg-blue-100 dark:bg-blue-900/30 rounded-full\">\n                <UserGroupIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n              </div>\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{users.length}</p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Enterprise Users</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-3 bg-red-100 dark:bg-red-900/30 rounded-full\">\n                <ShieldCheckIcon className=\"w-6 h-6 text-red-600 dark:text-red-400\" />\n              </div>\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {users.filter(u => u.role === ROLES.ADMIN).length}\n                </p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Admins</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Department Members */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {Object.entries(DEPARTMENT_NAMES).map(([key, name]) => {\n            const departmentMembers = users.filter(user => \n              (user.departments || []).includes(key)\n            );\n            \n            return (\n              <div key={key} className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className={`p-3 rounded-full ${getDepartmentBadgeColor(key)}`}>\n                    <BuildingOfficeIcon className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white\">{name}</h3>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {departmentMembers.length} member{departmentMembers.length !== 1 ? 's' : ''}\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  {departmentMembers.length > 0 ? (\n                    departmentMembers.map(member => (\n                      <div key={member.id} className=\"flex items-center gap-2 p-2 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                        <div className=\"w-6 h-6 bg-blue-100 dark:bg-blue-900/30 rounded-full flex items-center justify-center\">\n                          <UserGroupIcon className=\"w-3 h-3 text-blue-600 dark:text-blue-400\" />\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                            {member.displayName || member.DisplayName}\n                          </p>\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">\n                            {member.email || member.Email}\n                          </p>\n                        </div>\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium text-white ${getRoleBadgeColor(member.role)}`}>\n                          {ROLE_NAMES[member.role]}\n                        </span>\n                      </div>\n                    ))\n                  ) : (\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400 italic\">No members assigned</p>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UsersPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}